{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/index.js","components/Logo.js","layouts/DashboardLayout/TopBar.js","service/AuthenticationService.js","js/Constante.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/account/AccountView/Results.js","views/account/AccountView/Toolbar.js","views/account/service/usuarioService.js","views/account/AccountView/index.js","views/customer/CustomerListView/Results.js","views/customer/CustomerListView/Toolbar.js","views/customer/CustomerListView/data.js","views/customer/service/encuestaService.js","views/customer/CustomerListView/index.js","views/reports/DashboardView/LastestEncuestas.js","views/reports/DashboardView/LatestOrders.js","views/reports/DashboardView/LatestProducts.js","views/reports/DashboardView/Sales.js","views/reports/DashboardView/LastestUsers.js","views/reports/DashboardView/TotalUsuarios.js","views/reports/DashboardView/TotalPreguntasRespondidas.js","views/reports/DashboardView/TrafficByDevice.js","views/reports/Service/serviceDashboard.js","views/reports/DashboardView/index.js","js/solReact.js","views/auth/LoginView.js","views/errors/NotFoundView.js","views/product/service/serviceReport.js","components/CustomizedSnackbars.js","views/product/ProductListView/ReportAllEncuesta.js","views/product/ProductListView/index.js","views/auth/RegisterView.js","views/settings/SettingsView/Notifications.js","views/settings/SettingsView/Password.js","views/settings/service/EncuestaServie.js","views/settings/SettingsView/MaterialUIPickers.js","views/settings/SettingsView/Encuesta.jsx","views/settings/SettingsView/index.js","views/auth/LogoutComponent.jsx","components/InputGeneric.js","views/customer/CustomerListView/NewEncuesta.jsx","views/account/AccountView/Usuario.jsx","views/account/AccountView/Profile.js","views/account/AccountView/ProfileDetails.js","views/account/AccountView/indexUsuario.js","routes.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","formControl","display","fontSize","lineHeight","color","backgrounColor","backgroundClip","border","borderRadius","transition","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","dark","default","colors","common","white","paper","primary","main","indigo","secondary","text","blueGrey","shadows","typography","h1","fontWeight","letterSpacing","h2","h3","h4","h5","h6","overline","item","paddingTop","paddingBottom","button","fontWeightMedium","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","mobileDrawer","desktopDrawer","avatar","cursor","NavBar","onMobileClose","openMobile","items","user","useLocation","useEffect","pathname","content","Box","flexDirection","alignItems","p","Avatar","src","id_user","Typography","name","variant","jobTitle","Divider","List","map","key","flexGrow","Hidden","lgUp","Drawer","anchor","onClose","open","mdDown","defaultProps","Logo","props","alt","process","root","TopBar","onMobileNavOpen","useState","AppBar","elevation","style","IconButton","onClick","API_URL","USER_NAME_SESSION_ATTRIBUTE_NAME","TOKEN_USER","username","password","axios","post","token","sessionStorage","setItem","setupAxiosInterceptors","createJWTToken","getItem","removeItem","localStorage","id","data","put","headers","console","log","interceptors","request","use","isUserLoggedIn","authorization","get","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","userDetail","setUserDetail","AuthenticationService","whoami","then","response","catch","err","error","BarChartIcon","UsersIcon","ShoppingBagIcon","id_rol","Constante","push","UserIcon","SettingsIcon","LogOutIcon","nombre_rol","nombre","apellido","toolbar","MainLayout","Page","forwardRef","ref","children","Helmet","Results","encuestas","customers","JSON","stringify","columns","field","headerName","description","sortable","type","disableClickEventBubbling","renderCell","params","aria-label","value","Card","rows","pageSize","filterModel","columnField","operatorValue","importButton","exportButton","onNewEncuesta","Toolbar","marginTop","getApiUrl","UsuarioService","minHeight","Account","state","dataEncuesta","dataEncuestaFormated","loadAllEncuestas","EncuestaService","setState","findAll","makeDataEncuesta","objEncuesta","objTemp","fecha_registro","moment","format","rol","Container","maxWidth","mt","Component","checkboxSelection","uuid","address","country","city","street","avatarUrl","createdAt","phone","CustomerListView","direccion_puesto","elaborado_por","fecha_pedido","id_encuesta","nombre_puesto","nombre_usuario","red","differenceIcon","differenceValue","Budget","CardContent","Grid","container","justify","gutterBottom","total_encuestas_last_month","actions","subtract","image","Sales","dataP","useTheme","data1","data2","meses","e","total","total2","mes","datasets","label","grey","labels","animation","layout","legend","maintainAspectRatio","responsive","scales","xAxes","barThickness","maxBarThickness","barPercentage","categoryPercentage","ticks","fontColor","gridLines","drawBorder","yAxes","beginAtZero","borderDash","borderDashOffset","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","tooltips","bodyFontColor","enabled","footerFontColor","intersect","mode","titleFontColor","CardHeader","position","endIcon","orange","TasksProgress","total_usuarios_last_month","green","TotalCustomers","total_usuarios","TotalProfit","preguntas_respondidas","TrafficByDevice","hoverBorderColor","cutoutPercentage","devices","LaptopMacIcon","TabletIcon","PhoneIcon","textAlign","Dashboard","infoDasboard","setInfoDasboard","infoDasboard2","setInfoDasboard2","DashboardService","loadDashboardInfo","loadDashboardInfo2","lg","sm","xl","xs","LastestEncuestas","TotalUsuarios","LastestUsers","TotalPreguntasRespondidas","md","cleanFormExceptThis","myForm","myfield","form","document","getElementById","length","isNull2","myfieldname","setInvalid","setValid","backgroundImage","msg","undefined","innerHTML","alert","classList","add","remove","chkNum","check_only_digits","isNaN","lastIndexOf","check_entry","valid","ok","temp","substring","toUpperCase","charAt","hr","minu","base64","split","replace","parse","atob","variable","vars","search","pair","__html","myform","required","setInvalidPrimeReact","setValidPrimeReact","LoginView","useNavigate","setOpen","msgToast","setMsgToast","initialValues","validationSchema","Yup","shape","max","onSubmit","values","isSubmitting","executeJwtAuthenticationService","USER","solReact","parseJwt","sub","registerSuccessfulLoginForJwt","String","message","errors","handleBlur","handleChange","handleSubmit","isSubmitionCompleted","touched","mb","TextField","fullWidth","helperText","onBlur","onChange","trim","my","disabled","Snackbar","anchorOrigin","vertical","ContentProps","NotFoundView","align","configExport","responseType","reportName","Alert","CustomizedSnackbars","React","autoHideDuration","severity","msj","productCard","flexWrap","textField","marginLeft","grid","ReportAllEncuesta","Date","fecha","idEncuesta","setIdEncuesta","openAlert","setOpenAlert","setMsj","getReportExcel","obj","serviceReport","loadReportExcel","url","URL","createObjectURL","Blob","link","createElement","setAttribute","appendChild","click","getReport","loadReport","ShowAlert","btnShow","subheader","noValidate","autoComplete","marginBottom","FormControl","InputLabel","Select","native","target","inputProps","d","nombre_encuesta","defaultValue","InputLabelProps","shrink","startIcon","preventDefault","fechaInicio","fechaFinal","fecha_inicio","fecha_fin","imagen","arrayEncuesta","setArryEncuesta","RegisterView","navigate","firstName","lastName","policy","oneOf","ml","Checkbox","checked","Link","underline","FormHelperText","MaterialUIPickers","utils","DateFnsUtils","disableToolbar","date","handleDateChange","KeyboardButtonProps","Encuesta","arrayEncuestas","descripcion","fecha_encuesta","order","openCat","idCategoria","arrayCategoria","openPreg","idPregunta","arrayPreguntas","nombre_pregunta","order_pregunta","nombre_respuesta","order_respuesta","arrayRespuestas","idRespuesta","openResp","findByIdEncuesta","findByIdCategoria","findByIdPregunta","campo","loadCategoriaByIdEncuesta","parseInt","loadPreguntaByIdCategoria","loadRespuestasByIdPregunta","id_categoria","id_pregunta","id_respuesta","save","saveEncuesta","savePregunta","saveRespuesta","saveRespuetas","clearFieldsRespuestas","Error","clearFieldsPreguntas","clearFieldsEncuesta","clearFields","wrap","bind","renderOptsSelect","onClickNueva","handleChangeCategoria","renderOptsSelectCategoria","onClickNuevaCategoria","handleChangePregunta","renderOptsSelectPregunta","onClickNuevaPregunta","handleChangeRespuesta","renderOptsSelectRespuesta","onClickNuevaRespuesta","Dialog","handleClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","autoFocus","onChangeText","DialogActions","handleSubmitCategoria","handleSubmitPregunta","handleSubmitRespuesta","SettingsView","LogoutComponent","logout","InputGeneric","onChanteText","parameter","getQueryVariable","NewEncuesta","useStyles2","root2","onclickPermiso","infoEncuesta","preguntas","respuestas","isError","idPedido","loadEncuestaInfo","loadPreguntasByIdEncuesta","loadRespuestaByIdPedido","findById","findPreguntasById","info","setTimeout","fillDataPreguntas","findRespuestasById","objP","jerarquia","reduce","acc","elem","categoria","includes","last_user","estado","id_respuesta_selected","result","idParam","update","updatePedido","action","referencia","censo","dui","nit","edad","telefono","asociacion","actividad_comercial","largo","ancho","nombre_beneficiario","direccion_beneficiario","dui_beneficiario","nit_beneficiario","telefono_beneficiario","permiso","cep","setFieldValue","labelId","MenuItem","maxLength","FormControlLabel","control","labelPlacement","FormLabel","ItemEncuesta","id_detalle","updateRespuesta","r","Radio","makeAnswers","respuesta","TableContainer","Paper","Table","minWidth","TableHead","TableRow","TableCell","colSpan","TableBody","RadioGroup","row","fillDataRespuestas","id_pk","Profile","dateText","timezone","ProfileDetails","activo","states","estados","e_nombre","e_nombre_str","e_apellido","e_apellido_str","e_username","e_password","loadUserById","usuarioService","resp","novalidate","idP","ShowSuccess","select","SelectProps","option","getTokenUser","isUserLogin","routes","path","element","DashboardView","ProductListView","App","routing","useRoutes","ThemeProvider","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gMAaoBA,QACW,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6CCjBEC,EAAYC,aAAW,kBAAMC,YAAa,CAC9C,UAAW,CACT,IAAK,CACHC,UAAW,aACXC,OAAQ,EACRC,QAAS,GAEXC,KAAM,CACJ,yBAA0B,cAC1B,0BAA2B,YAC3BC,OAAQ,OACRC,MAAO,QAETC,KAAM,CACJC,gBAAiB,UACjBH,OAAQ,OACRC,MAAO,QAETG,EAAG,CACDC,eAAgB,QAElB,QAAS,CACPL,OAAQ,OACRC,MAAO,QAGTK,YAAa,CACXC,QAAS,QACTN,MAAO,QACPH,QAAS,iBACTU,SAAU,OACVC,WAAY,MACZC,MAAO,UACPC,eAAgB,OAChBC,eAAgB,gBAChBC,OAAQ,oBACRC,aAAc,SACdC,WAAY,4EAcHC,EANM,WAGnB,OAFAvB,IAEO,M,SC0ITwB,QAAMC,QAAQC,OAAOF,QAAMG,SAASC,UAAUC,UAAW,CACvDC,KAzLF,WAAiB,IAKXC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAXIC,EAAQC,KAAKC,OAAbF,IACFG,EAAKF,KAAKG,MACVC,EAAgBF,EAAhBE,YAaAC,EAAiBL,KAAKC,OAAOK,OAAOC,QAApCF,aA+BN,GA9BIA,EAAe,IACjBA,EAAe,GAGW,qBAAjBA,IACTA,EAAe,GAGZH,EAAGM,YAWNjB,EAAOW,EAAGO,KACVjB,EAAQU,EAAGQ,EACXjB,EAAMS,EAAGS,EAAIT,EAAGnC,OAAS,EACzB2B,EAASQ,EAAGS,EAAIT,EAAGnC,OAAS,EAC5B4B,EAAQH,EAAQD,EAAO,GAAK,EAC5BK,EAAQ,EACRC,EAAgBK,EAAGL,eAAiB,SAfpCN,EAAOW,EAAGQ,EAAIR,EAAGlC,MAAQ,EACzBwB,EAAQU,EAAGQ,EAAIR,EAAGlC,MAAQ,EAC1ByB,EAAMS,EAAGS,EAEThB,EAAQ,EACRC,GAFAF,EAASQ,EAAGO,MAEKhB,EAAM,GAAK,EAC5BI,EAAgBK,EAAGL,eAAiB,UAclCO,EAAa,CAEf,IAAMQ,EAAUC,KAAKC,IAAID,KAAKE,IAAIxB,EAAOC,GAAQqB,KAAKE,IAAItB,EAAMC,IAE1DsB,GADNZ,EAAcA,EAAcQ,EAAUA,EAAUR,GACf,EAE3Ba,EAAa1B,GAA0B,SAAlBM,EAA2BmB,EAAarB,EAAQ,GACrEuB,EAAc1B,GAA2B,UAAlBK,GAA6BmB,EAAarB,EAAQ,GACzEwB,EAAY1B,GAAyB,QAAlBI,EAA0BmB,EAAapB,EAAQ,GAClEwB,EAAe1B,GAA4B,WAAlBG,GAA8BmB,EAAapB,EAAQ,GAE9EqB,IAAeC,IACjBzB,EAAM0B,EACNzB,EAAS0B,GAGPD,IAAcC,IAChB7B,EAAO0B,EACPzB,EAAQ0B,GAIZnB,EAAIsB,YACJtB,EAAIuB,UAAYpB,EAAGhC,gBACnB6B,EAAIwB,YAAcrB,EAAGsB,YACrBzB,EAAI0B,UAAYrB,EAKhB,IAAMsB,EAAU,CAAC,CAACnC,EAAMG,GAAS,CAACH,EAAME,GAAM,CAACD,EAAOC,GAAM,CAACD,EAAOE,IAIhEiC,EADY,CAAC,SAAU,OAAQ,MAAO,SAChBC,QAAQ/B,EAAe,GAKjD,SAASgC,EAASC,GAChB,OAAOJ,GAASC,EAAcG,GAAS,IALpB,IAAjBH,IACFA,EAAc,GAQhB,IAAII,EAASF,EAAS,GACtB9B,EAAIiC,OAAOD,EAAO,GAAIA,EAAO,IAE7B,IAAK,IAAIE,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC7BF,EAASF,EAASI,GAClB,IAAIC,EAAeD,EAAI,EACF,IAAjBC,IACFA,EAAe,GAGjB,IAAMlE,EAAQ0D,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACnC3D,EAAS2D,EAAQ,GAAG,GAAKA,EAAQ,GAAG,GACpChB,EAAIgB,EAAQ,GAAG,GACff,EAAIe,EAAQ,GAAG,GAWrB,IATA5B,EAASO,GAEIQ,KAAKE,IAAIhD,GAAU,IAC9B+B,EAASe,KAAKsB,MAAMtB,KAAKE,IAAIhD,GAAU,IAErC+B,EAASe,KAAKE,IAAI/C,GAAS,IAC7B8B,EAASe,KAAKsB,MAAMtB,KAAKE,IAAI/C,GAAS,IAGpCD,EAAS,EAAG,CAEd,IAAMqE,EAAM1B,EACN2B,EAAM3B,EAAI1C,EACVsE,EAAM3B,EAAI5C,EACVwE,EAAM5B,EAAI5C,EAEVyE,EAAM9B,EACN+B,EAAM/B,EAAI1C,EACV0E,EAAM/B,EACNgC,EAAMhC,EAGZZ,EAAIiC,OAAOQ,EAAM1C,EAAQ4C,GACzB3C,EAAI6C,OAAOH,EAAM3C,EAAQ6C,GACzB5C,EAAI8C,iBAAiBJ,EAAKE,EAAKF,EAAKE,EAAM7C,GAC1CC,EAAI6C,OAAOP,EAAKE,EAAMzC,GACtBC,EAAI8C,iBAAiBR,EAAKE,EAAKF,EAAMvC,EAAQyC,GAC7CxC,EAAI6C,OAAOR,EAAMtC,EAAQwC,GACzBvC,EAAI8C,iBAAiBT,EAAKE,EAAKF,EAAKE,EAAMxC,GAC1CC,EAAI6C,OAAOJ,EAAKE,EAAM5C,GACtBC,EAAI8C,iBAAiBL,EAAKE,EAAKF,EAAM1C,EAAQ4C,QACxC,GAAI1E,EAAQ,EAAG,CAEpB,IAAMoE,EAAM1B,EAAI1C,EACVqE,EAAM3B,EACN4B,EAAM3B,EACN4B,EAAM5B,EAEN6B,EAAM9B,EAAI1C,EACVyE,EAAM/B,EACNgC,EAAM/B,EAAI5C,EACV4E,EAAMhC,EAAI5C,EAGhBgC,EAAIiC,OAAOQ,EAAM1C,EAAQ4C,GACzB3C,EAAI6C,OAAOH,EAAM3C,EAAQ6C,GACzB5C,EAAI8C,iBAAiBJ,EAAKE,EAAKF,EAAKE,EAAM7C,GAC1CC,EAAI6C,OAAOP,EAAKE,EAAMzC,GACtBC,EAAI8C,iBAAiBR,EAAKE,EAAKF,EAAMvC,EAAQyC,GAC7CxC,EAAI6C,OAAOR,EAAMtC,EAAQwC,GACzBvC,EAAI8C,iBAAiBT,EAAKE,EAAKF,EAAKE,EAAMxC,GAC1CC,EAAI6C,OAAOJ,EAAKE,EAAM5C,GACtBC,EAAI8C,iBAAiBL,EAAKE,EAAKF,EAAM1C,EAAQ4C,QAG7C3C,EAAIiC,OAAOtB,EAAIZ,EAAQa,GACvBZ,EAAI6C,OAAOlC,EAAI1C,EAAQ8B,EAAQa,GAC/BZ,EAAI8C,iBAAiBnC,EAAI1C,EAAO2C,EAAGD,EAAI1C,EAAO2C,EAAIb,GAClDC,EAAI6C,OAAOlC,EAAI1C,EAAO2C,EAAI5C,EAAS+B,GACnCC,EAAI8C,iBACFnC,EAAI1C,EACJ2C,EAAI5C,EACJ2C,EAAI1C,EAAQ8B,EACZa,EAAI5C,GAENgC,EAAI6C,OAAOlC,EAAIZ,EAAQa,EAAI5C,GAC3BgC,EAAI8C,iBAAiBnC,EAAGC,EAAI5C,EAAQ2C,EAAGC,EAAI5C,EAAS+B,GACpDC,EAAI6C,OAAOlC,EAAGC,EAAIb,GAClBC,EAAI8C,iBAAiBnC,EAAGC,EAAGD,EAAIZ,EAAQa,GAI3CZ,EAAI+C,OACA1C,GACFL,EAAIgD,Y,oBC9JOC,EAtBDC,YAAe,CAC3BC,QAAS,CACPC,WAAY,CACVC,KAAM,UACNC,QAASC,IAAOC,OAAOC,MACvBC,MAAOH,IAAOC,OAAOC,OAEvBE,QAAS,CACPC,KAAML,IAAOM,OAAO,MAEtBC,UAAW,CACTF,KAAML,IAAOM,OAAO,MAEtBE,KAAM,CACJJ,QAASJ,IAAOS,SAAS,KACzBF,UAAWP,IAAOS,SAAS,OAG/BC,QCtBa,CACb,OACA,iEACA,8DACA,8DACA,8DACA,8DACA,8DACA,8DACA,8DACA,+DACA,+DACA,+DACA,+DACA,+DACA,+DACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,iEDFAC,WEvBa,CACbC,GAAI,CACFC,WAAY,IACZ5F,SAAU,GACV6F,cAAe,WAEjBC,GAAI,CACFF,WAAY,IACZ5F,SAAU,GACV6F,cAAe,WAEjBE,GAAI,CACFH,WAAY,IACZ5F,SAAU,GACV6F,cAAe,WAEjBG,GAAI,CACFJ,WAAY,IACZ5F,SAAU,GACV6F,cAAe,WAEjBI,GAAI,CACFL,WAAY,IACZ5F,SAAU,GACV6F,cAAe,WAEjBK,GAAI,CACFN,WAAY,IACZ5F,SAAU,GACV6F,cAAe,WAEjBM,SAAU,CACRP,WAAY,Q,8GCtBV3G,EAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC2B,KAAM,CACJrG,QAAS,OACTsG,WAAY,EACZC,cAAe,GAEjBC,OAAQ,CACNrG,MAAOuE,EAAME,QAAQY,KAAKD,UAC1BM,WAAYnB,EAAMiB,WAAWc,iBAC7BC,eAAgB,aAChBZ,cAAe,EACfvG,QAAS,WACToH,cAAe,OACfjH,MAAO,QAETkH,KAAM,CACJC,YAAanC,EAAMoC,QAAQ,IAE7BC,MAAO,CACLF,YAAa,QAEfG,OAAQ,CACN7G,MAAOuE,EAAME,QAAQQ,QAAQC,KAC7B,WAAY,CACVQ,WAAYnB,EAAMiB,WAAWc,kBAE/B,UAAW,CACTtG,MAAOuE,EAAME,QAAQQ,QAAQC,WA+CpB4B,EA1CC,SAAC,GAMV,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,KACMC,EAGF,EAHJR,KACAG,EAEI,EAFJA,MACGM,EACC,mDACEC,EAAUpI,IAEhB,OACE,kBAACqI,EAAA,EAAD,eACEL,UAAWM,YAAKF,EAAQjB,KAAMa,GAC9BO,gBAAc,GACVJ,GAEJ,kBAACK,EAAA,EAAD,CACEC,gBAAiBL,EAAQN,OACzBE,UAAWI,EAAQd,OACnBoB,UAAWC,IACXC,GAAIX,GAEHC,GACC,kBAACA,EAAD,CACEF,UAAWI,EAAQV,KACnBmB,KAAK,OAGT,0BAAMb,UAAWI,EAAQP,OACtBA,MCrDL7H,EAAYC,aAAW,iBAAO,CAClC6I,aAAc,CACZtI,MAAO,KAETuI,cAAe,CACbvI,MAAO,IACPyB,IAAK,GACL1B,OAAQ,qBAEVyI,OAAQ,CACNC,OAAQ,UACRzI,MAAO,GACPD,OAAQ,QAIN2I,EAAS,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC5ClB,EAAUpI,IACVH,EAAW0J,cAEjBC,qBAAU,WACJJ,GAAcD,GAChBA,MAGD,CAACtJ,EAAS4J,WAEb,IAAMC,EACJ,kBAACC,EAAA,EAAD,CACEpJ,OAAO,OACPO,QAAQ,OACR8I,cAAc,UAEd,kBAACD,EAAA,EAAD,CACEE,WAAW,SACX/I,QAAQ,OACR8I,cAAc,SACdE,EAAG,GAEH,kBAACC,EAAA,EAAD,CACE/B,UAAWI,EAAQY,OACnBN,UAAWC,IACXqB,IAAKV,EAAKN,OACVJ,GAAI,+BAA+BU,EAAKW,UAE1C,kBAACC,EAAA,EAAD,CACElC,UAAWI,EAAQ+B,KACnBlJ,MAAM,cACNmJ,QAAQ,MAEPd,EAAKa,MAER,kBAACD,EAAA,EAAD,CACEjJ,MAAM,gBACNmJ,QAAQ,SAEPd,EAAKe,WAGV,kBAACC,EAAA,EAAD,MACA,kBAACX,EAAA,EAAD,CAAKG,EAAG,GACN,kBAACS,EAAA,EAAD,KACGlB,EAAMmB,KAAI,SAACrD,GAAD,OACT,kBAAC,EAAD,CACEc,KAAMd,EAAKc,KACXwC,IAAKtD,EAAKU,MACVA,MAAOV,EAAKU,MACZH,KAAMP,EAAKO,YAKnB,kBAACiC,EAAA,EAAD,CAAKe,SAAU,KAKnB,OACE,oCACE,kBAACC,EAAA,EAAD,CAAQC,MAAI,GACV,kBAACC,EAAA,EAAD,CACEC,OAAO,OACP1C,QAAS,CAAEnC,MAAOmC,EAAQU,cAC1BiC,QAAS5B,EACT6B,KAAM5B,EACNgB,QAAQ,aAEPV,IAGL,kBAACiB,EAAA,EAAD,CAAQM,QAAM,GACZ,kBAACJ,EAAA,EAAD,CACEC,OAAO,OACP1C,QAAS,CAAEnC,MAAOmC,EAAQW,eAC1BiC,MAAI,EACJZ,QAAQ,cAEPV,MAYXR,EAAOgC,aAAe,CACpB/B,cAAe,aACfC,YAAY,GAGCF,Q,+DCvHAiC,EAVF,SAACC,GACZ,OACE,uCACEC,IAAI,OACJrB,IAAKsB,kCACDF,KCWJpL,EAAYC,aAAW,iBAAO,CAClCsL,KAAM,GACNvC,OAAQ,CACNxI,MAAO,GACPD,OAAQ,QAgDGiL,EA5CA,SAAC,GAIT,IAHLxD,EAGI,EAHJA,UACAyD,EAEI,EAFJA,gBACGtD,EACC,+CACEC,EAAUpI,IADZ,EAEoB0L,mBAAS,IAF7B,oBAIJ,OACE,kBAACC,EAAA,EAAD,eACE3D,UAAWM,YAAKF,EAAQmD,KAAMvD,GAC9B4D,UAAW,GACPzD,GAEJ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYS,GAAI0C,2BACd,kBAAC,EAAD,OAEF,kBAAC3B,EAAA,EAAD,CAAKe,SAAU,IACf,kBAACC,EAAA,EAAD,CAAQM,QAAM,GACd,kBAAC,IAAD,CAAYrC,GAAK0C,uBAAsCO,MAAO,CAACjL,eAAe,OAAOK,MAAM,UACzF,kBAAC6K,EAAA,EAAD,CAAY7K,MAAM,WAChB,kBAAC,IAAD,SAIJ,kBAAC0J,EAAA,EAAD,CAAQC,MAAI,GACV,kBAACkB,EAAA,EAAD,CACE7K,MAAM,UACN8K,QAASN,GAET,kBAAC,IAAD,W,0DCtDRO,G,OAAU,gDAEHC,GAAmC,OACnCC,GAAa,QA+ET,O,wHA3EqBC,EAAUC,GACtC,OAAOC,IAAMC,KAAN,UAAcN,EAAd,iBAAsC,CACzCG,WACAC,e,oDAIsBD,EAAUI,GACpCC,eAAeC,QAAQR,GAAkCE,GACzDK,eAAeC,QAAQP,GAAYK,GACnC/J,KAAKkK,uBAAuBlK,KAAKmK,eAAeJ,M,qCAIrCA,GACX,MAAO,UAAYA,I,qCAInB,IAAIA,EAAQC,eAAeI,QAAQV,IACnC,OAAc,OAAVK,EAAuB,GACpBA,I,+BAIPC,eAAeK,WAAWZ,IAC1Ba,aAAaD,WAAW,sBACxBL,eAAeK,WAAW,aAC1BL,eAAeK,WAAW,QAC1BL,eAAeK,WAAW,SAC1BL,eAAeK,WAAW,QAC1BL,eAAeK,WAAW,YAC1BL,eAAeK,WAAW,QAC1BL,eAAeK,WAAW,qB,0CAGVE,EAAIC,GACpB,OAAOX,IAAMY,IAAN,UAAajB,EAAb,2BAAuCe,GAAMC,EAChD,CAAEE,QAAS,CAAE,cAAiB,UAAYV,eAAeI,QAAQ,c,uCAIrE,IAAItD,EAAOkD,eAAeI,QAAQX,IAClC,OAAa,OAAT3C,IACJ6D,QAAQC,IAAI9D,EAAK,UACV,K,4CAIP,IAAIA,EAAOkD,eAAeI,QAAQX,IAClC,OAAa,OAAT3C,EAAsB,GACnBA,I,6CAGYiD,GAAQ,IAAD,OAC1BF,IAAMgB,aAAaC,QAAQC,KACvB,SAACzK,GAKG,OAJI,EAAK0K,mBACL1K,EAAOoK,QAAQO,cAAgBlB,GAEnCY,QAAQC,IAAItK,EAAO,WACZA,O,kCAOf,OAFakJ,I,+BAMb,OAAOK,IAAMqB,IAAN,UAAa1B,EAAb,wB,MCvEA,GACE,E,4DCOXhM,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,CACJ7K,gBAAiB8E,EAAME,QAAQC,WAAWC,KAC1C9E,QAAS,OACTP,OAAQ,OACRoN,SAAU,SACVnN,MAAO,QAEToN,QAAQ,aACN9M,QAAS,OACT+M,KAAM,WACNF,SAAU,SACVvG,WAAY,IACX5B,EAAMsI,YAAYC,GAAG,MAAQ,CAC5BC,YAAa,MAGjBC,iBAAkB,CAChBnN,QAAS,OACT+M,KAAM,WACNF,SAAU,UAEZjE,QAAS,CACPmE,KAAM,WACNtN,OAAQ,OACRoN,SAAU,YA2GCO,GAvGS,WACtB,IAAM9F,EAAUpI,KADY,EAEgB0L,oBAAS,GAFzB,mBAErByC,EAFqB,KAEJC,EAFI,OAGQ1C,mBAAS,MAHjB,mBAGrB2C,EAHqB,KAGTC,EAHS,KAK5B9E,qBAAU,WAEN+E,GAAsBC,SACrBC,MAAK,SAAAC,GAEJJ,EAAcI,EAAS1B,SACtB2B,OAAM,SAAAC,GACPzB,QAAQ0B,MAAMD,QAIlB,IAEF,IAAMvF,EAAQ,CACZ,CACEpB,KAAMqD,0BACN5D,KAAMoH,KACNjH,MAAO,aAET,CACEI,KAAMqD,0BACN5D,KAAMqH,KACNlH,MAAO,aAET,CACEI,KAAMqD,uBACN5D,KAAMsH,KACNnH,MAAO,YAmBK,MAAZwG,GAAoBA,EAAWY,OAAOA,SAASC,IACjD7F,EAAM8F,KACJ,CACElH,KAAMqD,sBACN5D,KAAM0H,KACNvH,MAAO,YAET,CACAI,KAAMqD,yBACN5D,KAAM2H,KACNxH,MAAO,WAKXwB,EAAM8F,KACJ,CACElH,KAAMqD,uBACN5D,KAAM4H,KACNzH,MAAO,UAKX,IAAMyB,EAAO,CACXN,OAAQ,4CACRqB,SAAuB,MAAZgE,EAAkBA,EAAWlC,SAAS,KAAKkC,EAAWY,OAAOM,WAAW,KAAK,UACxFpF,KAAmB,MAAZkE,EAAkBA,EAAWmB,OAAO,IAAInB,EAAWoB,SAAS,UACnExF,QAAsB,MAAZoE,EAAkBA,EAAWpE,QAAQ,GAIjD,OACE,yBAAKjC,UAAWI,EAAQmD,MACtB,kBAAC,EAAD,CAAQE,gBAAiB,kBAAM2C,GAAiB,MAChD,kBAAC,EAAD,CACEjF,cAAe,kBAAMiF,GAAiB,IACtChF,WAAY+E,EACZ9E,MAAOA,EACPC,KAAMA,IAER,yBAAKtB,UAAWI,EAAQwF,SACtB,yBAAK5F,UAAWI,EAAQ6F,kBACtB,yBAAKjG,UAAWI,EAAQsB,SACtB,kBAAC,IAAD,WCpIN1J,GAAYC,YAAY,CAC5BsL,KAAM,GACNmE,QAAS,CACPnP,OAAQ,MA0BGiL,GAtBA,SAAC,GAA4B,IAA1BxD,EAAyB,EAAzBA,UAAcG,EAAW,6BACnCC,EAAUpI,KAEhB,OACE,kBAAC2L,EAAA,EAAD,eACE3D,UAAWM,YAAKF,EAAQmD,KAAMvD,GAC9B4D,UAAW,GACPzD,GAEJ,kBAAC,IAAD,CAASH,UAAWI,EAAQsH,SAC1B,kBAAC,IAAD,CAAY9G,GAAI0C,2BACd,kBAAC,EAAD,CAAMO,MAAO,CAACzL,OAAO,GAAGG,OAAO,aCxBnCP,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,CACJ7K,gBAAiB8E,EAAME,QAAQC,WAAWE,QAC1C/E,QAAS,OACTP,OAAQ,OACRoN,SAAU,SACVnN,MAAO,QAEToN,QAAS,CACP9M,QAAS,OACT+M,KAAM,WACNF,SAAU,SACVvG,WAAY,IAEd6G,iBAAkB,CAChBnN,QAAS,OACT+M,KAAM,WACNF,SAAU,UAEZjE,QAAS,CACPmE,KAAM,WACNtN,OAAQ,OACRoN,SAAU,YAqBCgC,GAjBI,WACjB,IAAMvH,EAAUpI,KAEhB,OACE,yBAAKgI,UAAWI,EAAQmD,MACtB,kBAAC,GAAD,MACA,yBAAKvD,UAAWI,EAAQwF,SACtB,yBAAK5F,UAAWI,EAAQ6F,kBACtB,yBAAKjG,UAAWI,EAAQsB,SACtB,kBAAC,IAAD,W,sCCZGkG,GAvBFC,sBAAW,WAIrBC,GAAS,IAHVC,EAGS,EAHTA,SAGS,IAFTlI,aAES,MAFD,GAEC,EADNM,EACM,oCACT,OACE,uCACE2H,IAAKA,GACD3H,GAEJ,kBAAC6H,GAAA,EAAD,KACE,+BAAQnI,IAETkI,M,2FCDD/P,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,GACNvC,OAAQ,CACNrB,YAAanC,EAAMoC,QAAQ,QAoEhBqI,GAhEC,SAAC,GAAuD,IAArDjI,EAAoD,EAApDA,UAAsBkI,GAA8B,EAAzCC,UAAyC,EAA9BD,WAAU5G,EAAoB,EAApBA,KAASnB,EAAW,4DAC/DC,EAAUpI,KADqD,EAEf0L,mBAAS,IAFM,gCAG3CA,mBAAS,KAHkC,gCAI7CA,mBAAS,IAJoC,6BAKrEyB,QAAQC,IAAIgD,KAAKC,UAAU/G,IAI3B,IAAMgH,EAAU,CACd,CAAEC,MAAO,KAAMC,WAAY,cAAehQ,MAAO,IAAIqN,KAAM,GAC3D,CAAE0C,MAAO,SAAUC,WAAY,iBAAkBhQ,MAAO,KACxD,CAAE+P,MAAO,WAAYC,WAAY,WAAYhQ,MAAO,KACpD,CAAE+P,MAAO,MAAOC,WAAY,MAAOhQ,MAAO,KAC1C,CAAE+P,MAAO,iBAAkBC,WAAY,oBAAkBC,YAAa,sDACpEC,UAAU,EACVlQ,MAAO,IACPmQ,KAAM,YAER,CAAEJ,MAAO,SAAUC,WAAY,SAAUhQ,MAAO,IAAIoQ,2BAA2B,EAAK/C,KAAM,EAC1FgD,WAAY,SAACC,GASX,OAAO,oCACL,kBAAChF,EAAA,EAAD,CAAYiF,aAAW,MAAMhF,QATf,WACdoB,QAAQC,IAAI0D,EAAOE,OACnBpR,OAAOC,SAAW,0BAA0BiR,EAAOE,QAQjD,kBAAC,KAAD,OAEQ,MAAR1H,GAAgBA,EAAK2F,OAAOA,SAAWC,IACvC,kBAACpD,EAAA,EAAD,CAAYiF,aAAW,MAAMhF,QATlB,WACboB,QAAQC,IAAI0D,EAAOE,OACnBpR,OAAOC,SAAW,4BAA4BiR,EAAOE,QAQjD,kBAAC,KAAD,WAOV,OACE,kBAACC,GAAA,EAAD,eACEjJ,UAAWM,YAAKF,EAAQmD,KAAMvD,IAC1BG,GAEJ,yBAAK0D,MAAO,CAAEtL,OAAQ,IAAKC,MAAO,SAClC,kBAAC,KAAD,CAAU0Q,KAAMhB,EAAWI,QAASA,EAASa,SAAU,EACvDC,YAAa,CACX/H,MAAO,CACL,CAAEgI,YAAa,SAAUC,cAAe,WAAYN,MAAO,WC5D/DhR,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,GACNgG,aAAc,CACZ5J,YAAanC,EAAMoC,QAAQ,IAE7B4J,aAAc,CACZ7J,YAAanC,EAAMoC,QAAQ,QAIzB6J,GAAgB,WACpB7R,OAAOC,SAAW,sBAkCL6R,GA/BC,SAAC,GAA4B,IAA1B1J,EAAyB,EAAzBA,UAAcG,EAAW,6BACpCC,EAAUpI,KAEhB,OACE,uCACEgI,UAAWM,YAAKF,EAAQmD,KAAMvD,IAC1BG,GAEJ,kBAACwB,EAAA,EAAD,CACE7I,QAAQ,OACR0G,eAAe,YAGf,kBAACgB,EAAA,EAAD,CACEvH,MAAM,UACNmJ,QAAQ,YACR2B,QAAS0F,GACT5F,MAAO,CAAC8F,UAAU,KAJpB,oBCxCF3F,GAAUuC,GAAsBqD,YAGhCC,G,kGAGE,OAAOxF,IAAMqB,IAAN,UAAa1B,GAAb,gB,+BAGFe,GACL,OAAOV,IAAMqB,IAAN,UAAa1B,GAAb,oBAAgCe,M,2BAGtCC,GACD,OAAOX,IAAMC,KAAN,UAAcN,GAAd,aAAiCgB,K,6BAGrCD,EAAIC,GACP,OAAOX,IAAMY,IAAN,UAAajB,GAAb,oBAAgCe,GAAMC,K,oCAGnCD,EAAIC,GACd,OAAOX,IAAMY,IAAN,UAAajB,GAAb,oBAAgCe,GAAMC,K,+BAI7C,OAAOX,IAAMqB,IAAN,UAAa1B,GAAb,wB,KAcA,OAAI6F,GC7Bb7R,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,CACJ7K,gBAAiB8E,EAAME,QAAQC,WAAWC,KAC1CkM,UAAW,OACXzK,cAAe7B,EAAMoC,QAAQ,GAC7BR,WAAY5B,EAAMoC,QAAQ,QAITmK,G,oDAEnB,WAAY3G,GAAO,IAAD,8BAChB,cAAMA,IACD4G,MAAM,CACTC,aAAa,GACbC,qBAAqB,GACrB5I,KAAK,MALS,E,gEAUhB9G,KAAK2P,mBACL3P,KAAK6L,e,mCAGO,IAAD,OAEX+D,GAAgB5D,SACbC,MAAK,SAAAC,GAEJ,EAAK2D,SAAU,CAAC/I,KAAKoF,EAAS1B,UAC7B2B,OACD,SAAAC,GACEzB,QAAQ0B,MAAMD,GACP,U,yCAKI,IAAD,OAChBwD,GAAgBE,UACf7D,MAAK,SAAAC,GACJvB,QAAQC,IAAIsB,EAAS1B,MACrB,EAAKqF,SAAS,CAACJ,aAAavD,EAAS1B,OACrC,EAAKuF,iBAAiB7D,EAAS1B,SAC9B2B,OACD,SAAAC,GACEzB,QAAQ0B,MAAMD,Q,uCAKH4D,GACf,IAAIC,EAAU,GACdD,EAAYhI,KACV,SAAA7J,GACE8R,EAAQtD,KACN,CACEK,OAAQ7O,EAAE6O,OAAO,IAAI7O,EAAE8O,SACvBtD,SAASxL,EAAEwL,SACXuG,eAAgBC,KAAOhS,EAAE+R,gBAAgBE,OAAO,oBAChD7F,GAAIpM,EAAEsJ,QACN4I,IAAKlS,EAAEsO,OAAOM,WACdjI,OAAO3G,EAAEsJ,aAKfzH,KAAK6P,SAAS,CAACH,qBAAqBO,M,+BAKtC,OACE,kBAAC,GAAD,CACEzK,UAAWhI,GAAUuL,KACrB1D,MAAM,qBAEN,kBAACiL,GAAA,EAAD,CAAWC,UAAU,GACnB,kBAAC,GAAD,MACA,kBAACpJ,EAAA,EAAD,CAAKqJ,GAAI,GACP,kBAAC,GAAD,CAAU9C,UAAW1N,KAAKwP,MAAME,qBAAsB5I,KAAM9G,KAAKwP,MAAM1I,c,GAxE9C2J,aCP/BjT,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,GACNvC,OAAQ,CACNrB,YAAanC,EAAMoC,QAAQ,QA+GhBqI,GA3GC,SAAC,GAAkD,IAAhDjI,EAA+C,EAA/CA,UAAsBkI,GAAyB,EAApCC,UAAoC,EAAzBD,WAAc/H,EAAW,qDAC1DC,EAAUpI,KADgD,EAEV0L,mBAAS,IAFC,gCAGtCA,mBAAS,KAH6B,gCAIxCA,mBAAS,IAJ+B,6BAKhEyB,QAAQC,IAAI8C,GAEZ,IAyCMI,EAAU,CACd,CAAEC,MAAO,KAAMC,WAAY,YAAahQ,MAAO,IAAIqN,KAAM,GACzD,CAAE0C,MAAO,iBAAkBC,WAAY,oBAAqBhQ,MAAO,KACnE,CAAE+P,MAAO,gBAAiBC,WAAY,SAAUhQ,MAAO,KACvD,CAAE+P,MAAO,mBAAoBC,WAAY,YAAahQ,MAAO,KAC7D,CAAE+P,MAAO,eAAgBC,WAAY,iBAAkBC,YAAa,sDAClEC,UAAU,EACVlQ,MAAO,IACPmQ,KAAM,YAER,CAAEJ,MAAO,SAAUC,WAAY,SAAUhQ,MAAO,IAAIoQ,2BAA2B,EAAK/C,KAAM,EAC1FgD,WAAY,SAACC,GAMX,OAAO,kBAAChF,EAAA,EAAD,CAAYiF,aAAW,MAAMhF,QALpB,WACdoB,QAAQC,IAAI0D,EAAOE,OACnBpR,OAAOC,SAAW,6BAA6BiR,EAAOE,QAI9C,kBAAC,KAAD,UAmBd,OACE,kBAACC,GAAA,EAAD,eACEjJ,UAAWM,YAAKF,EAAQmD,KAAMvD,IAC1BG,GAEJ,yBAAK0D,MAAO,CAAEtL,OAAQ,IAAKC,MAAO,SAClC,kBAAC,KAAD,CAAU0Q,KAAMhB,EAAWI,QAASA,EAASa,SAAU,EAAG+B,mBAAiB,EAC3E9B,YAAa,CACX/H,MAAO,CACL,CAAEgI,YAAa,iBAAkBC,cAAe,WAAYN,MAAO,WCrGvEhR,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,GACNgG,aAAc,CACZ5J,YAAanC,EAAMoC,QAAQ,IAE7B4J,aAAc,CACZ7J,YAAanC,EAAMoC,QAAQ,QAIzB6J,GAAgB,WACpB7R,OAAOC,SAAW,uBAkCL6R,GA/BC,SAAC,GAA4B,IAA1B1J,EAAyB,EAAzBA,UAAcG,EAAW,6BACpCC,EAAUpI,KAEhB,OACE,uCACEgI,UAAWM,YAAKF,EAAQmD,KAAMvD,IAC1BG,GAEJ,kBAACwB,EAAA,EAAD,CACE7I,QAAQ,OACR0G,eAAe,YAGf,kBAACgB,EAAA,EAAD,CACEvH,MAAM,UACNmJ,QAAQ,YACR2B,QAAS0F,GACT5F,MAAO,CAAC8F,UAAU,KAJpB,gB,UCxCO,IACb,CACE5E,GAAIoG,eACJC,QAAS,CACPC,QAAS,MACTrB,MAAO,gBACPsB,KAAM,cACNC,OAAQ,sBAEVC,UAAW,sCACXC,UAAW,WACXtH,SAAU,8BACVhC,KAAM,oBACNuJ,MAAO,gBAET,CACE3G,GAAIoG,eACJC,QAAS,CACPC,QAAS,MACTrB,MAAO,UACPsB,KAAM,OACNC,OAAQ,4BAEVC,UAAW,sCACXC,UAAW,WACXtH,SAAU,mBACVhC,KAAM,SACNuJ,MAAO,gBAET,CACE3G,GAAIoG,eACJC,QAAS,CACPC,QAAS,MACTrB,MAAO,UACPsB,KAAM,UACNC,OAAQ,6BAEVC,UAAW,sCACXC,UAAW,WACXtH,SAAU,6BACVhC,KAAM,mBACNuJ,MAAO,gBAET,CACE3G,GAAIoG,eACJC,QAAS,CACPC,QAAS,MACTrB,MAAO,OACPsB,KAAM,QACNC,OAAQ,sBAEVC,UAAW,sCACXC,UAAW,SACXtH,SAAU,wBACVhC,KAAM,cACNuJ,MAAO,gBAET,CACE3G,GAAIoG,eACJC,QAAS,CACPC,QAAS,MACTrB,MAAO,QACPsB,KAAM,SACNC,OAAQ,SAEVC,UAAW,sCACXC,UAAW,WACXtH,SAAU,6BACVhC,KAAM,mBACNuJ,MAAO,gBAET,CACE3G,GAAIoG,eACJC,QAAS,CACPC,QAAS,MACTrB,MAAO,aACPsB,KAAM,aACNC,OAAQ,kBAEVC,UAAW,sCACXC,UAAW,WACXtH,SAAU,yBACVhC,KAAM,eACNuJ,MAAO,gBAET,CACE3G,GAAIoG,eACJC,QAAS,CACPC,QAAS,MACTrB,MAAO,aACPsB,KAAM,gBACNC,OAAQ,0BAEVC,UAAW,sCACXC,UAAW,WACXtH,SAAU,0BACVhC,KAAM,gBACNuJ,MAAO,gBAET,CACE3G,GAAIoG,eACJC,QAAS,CACPC,QAAS,MACTrB,MAAO,SACPsB,KAAM,YACNC,OAAQ,6BAEVC,UAAW,sCACXC,UAAW,WACXtH,SAAU,6BACVhC,KAAM,mBACNuJ,MAAO,gBAET,CACE3G,GAAIoG,eACJC,QAAS,CACPC,QAAS,MACTrB,MAAO,WACPsB,KAAM,UACNC,OAAQ,uBAEVC,UAAW,sCACXC,UAAW,WACXtH,SAAU,2BACVhC,KAAM,iBACNuJ,MAAO,gBAET,CACE3G,GAAIoG,eACJC,QAAS,CACPC,QAAS,MACTrB,MAAO,OACPsB,KAAM,iBACNC,OAAQ,4BAEVC,UAAW,uCACXC,UAAW,WACXtH,SAAU,4BACVhC,KAAM,kBACNuJ,MAAO,iBC3IL1H,GAAUuC,GAAsBqD,YAGhCQ,G,kGAGE,OAAO/F,IAAMqB,IAAN,UAAa1B,GAAb,e,+BAGFe,GACL,OAAOV,IAAMqB,IAAN,UAAa1B,GAAb,mBAA+Be,M,wCAGxBA,GACd,OAAOV,IAAMqB,IAAN,UAAa1B,GAAb,6BAAyCe,M,yCAGjCA,GACf,OAAOV,IAAMqB,IAAN,UAAa1B,GAAb,8BAA0Ce,M,2BAGhDC,GACD,OAAOX,IAAMC,KAAN,UAAcN,GAAd,YAAgCgB,K,6BAGpCD,EAAIC,GACP,OAAOX,IAAMY,IAAN,UAAajB,GAAb,oBAAgCe,GAAMC,K,mCAGpCD,EAAIC,GACb,OAAOX,IAAMY,IAAN,UAAajB,GAAb,mBAA+Be,GAAMC,O,KAcrC,OAAIoF,GChCbpS,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,CACJ7K,gBAAiB8E,EAAME,QAAQC,WAAWC,KAC1CkM,UAAW,OACXzK,cAAe7B,EAAMoC,QAAQ,GAC7BR,WAAY5B,EAAMoC,QAAQ,QAIT+L,G,oDAEnB,WAAYvI,GAAO,IAAD,8BAChB,cAAMA,IACD4G,MAAM,CACThF,KAAKA,GACLiF,aAAa,GACbC,qBAAqB,IALP,E,gEAUhB1P,KAAK2P,qB,yCAGY,IAAD,OAChBC,GAAgBE,UACf7D,MAAK,SAAAC,GACJvB,QAAQC,IAAIsB,EAAS1B,MACrB,EAAKqF,SAAS,CAACJ,aAAavD,EAAS1B,OACrC,EAAKuF,iBAAiB7D,EAAS1B,SAC9B2B,OACD,SAAAC,GACEzB,QAAQ0B,MAAMD,Q,uCAKH4D,GACf,IAAIC,EAAU,GACdD,EAAYhI,KACV,SAAA7J,GACE8R,EAAQtD,KACN,CACEyE,iBAAkBjT,EAAEiT,iBACpBC,cAAelT,EAAEkT,cACjBC,aAAcnB,KAAOhS,EAAEmT,cAAclB,OAAO,oBAC5C7F,GAAIpM,EAAEoM,GACNgH,YAAapT,EAAEoT,YACfC,cAAerT,EAAEqT,cACjBC,eAAgBtT,EAAEsT,eAClB3M,OAAO3G,EAAEoM,QAKfvK,KAAK6P,SAAS,CAACH,qBAAqBO,M,+BAKtC,OACE,kBAAC,GAAD,CACEzK,UAAWhI,GAAUuL,KACrB1D,MAAM,iCAEN,kBAACiL,GAAA,EAAD,CAAWC,UAAU,GACnB,kBAAC,GAAD,MACA,kBAACpJ,EAAA,EAAD,CAAKqJ,GAAI,GACP,kBAAC,GAAD,CAAS7C,UAAWnD,GAAMkD,UAAW1N,KAAKwP,MAAME,8B,GA3Dde,a,yCCPxCjT,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,CACJhL,OAAQ,QAEVyI,OAAQ,CACNtI,gBAAiBoF,IAAOoO,IAAI,KAC5B3T,OAAQ,GACRC,MAAO,IAET2T,eAAgB,CACdlT,MAAO6E,IAAOoO,IAAI,MAEpBE,gBAAiB,CACfnT,MAAO6E,IAAOoO,IAAI,KAClBvM,YAAanC,EAAMoC,QAAQ,QAmEhByM,GA/DA,SAAC,GAAiC,IAA/BrM,EAA8B,EAA9BA,UAAUgF,EAAoB,EAApBA,KAAS7E,EAAW,oCACxCC,EAAUpI,KAEhB,OACE,kBAACiR,GAAA,EAAD,eACEjJ,UAAWM,YAAKF,EAAQmD,KAAMvD,IAC1BG,GAEJ,kBAACmM,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,gBACR7M,QAAS,GAET,kBAAC2M,GAAA,EAAD,CAAMpN,MAAI,GACR,kBAAC+C,EAAA,EAAD,CACEjJ,MAAM,gBACNyT,cAAY,EACZtK,QAAQ,MAHV,yCAOA,kBAACF,EAAA,EAAD,CACEjJ,MAAM,cACNmJ,QAAQ,MAEC,OAAP4C,EAAaA,EAAK2H,2BAA2B,IAGnD,kBAACJ,GAAA,EAAD,CAAMpN,MAAI,GACR,kBAAC4C,EAAA,EAAD,CAAQ/B,UAAWI,EAAQY,QACzB,kBAAC,KAAD,Y,8GCvCNmK,eAUAA,eAUAA,eAUAA,eAUAA,eAUAA,eAWUlT,aAAW,iBAAO,CAClCsL,KAAM,GACNqJ,QAAS,CACPpN,eAAgB,gB,qBCnEZ2L,eAGOR,OAASkC,SAAS,EAAG,SAG5B1B,eAGOR,OAASkC,SAAS,EAAG,SAG5B1B,eAGOR,OAASkC,SAAS,EAAG,SAG5B1B,eAGOR,OAASkC,SAAS,EAAG,SAG5B1B,eAGOR,OAASkC,SAAS,EAAG,SAIlB5U,YAAY,CAC5BsL,KAAM,CACJhL,OAAQ,QAEVuU,MAAO,CACLvU,OAAQ,GACRC,MAAO,M,OC1CLR,GAAYC,aAAW,iBAAO,CAClCsL,KAAM,OA2IOwJ,GAxID,SAAC,GAAkC,IAAhC/M,EAA+B,EAA/BA,UAAUgN,EAAqB,EAArBA,MAAU7M,EAAW,qCACxCC,EAAUpI,KACVwF,EAAQyP,eAEVC,EAAQ,GACRC,EAAQ,GACRC,EAAQ,GACZjI,QAAQC,IAAI,aAAagD,KAAKC,UAAU2E,IAE7B,OAARA,GACDA,EAAMxK,KACJ,SAAA6K,GACEH,EAAM/F,KAAKkG,EAAEC,OACbH,EAAMhG,KAAKkG,EAAEE,QACbH,EAAMjG,KAAKkG,EAAEG,QAKnBrI,QAAQC,IAAI,IAAI8H,GAChB/H,QAAQC,IAAI,KAAK+H,GAEjB,IAAMnI,EAAO,CACXyI,SAAU,CACR,CACE/U,gBAAiBoF,IAAOM,OAAO,KAC/B4G,KAAMkI,EACNQ,MAAO,eAET,CACEhV,gBAAiBoF,IAAO6P,KAAK,KAC7B3I,KAAMmI,EACNO,MAAO,kBAGXE,OAAQR,GAGJrS,EAAU,CACd8S,WAAW,EACXhT,aAAc,GACdiT,OAAQ,CAAEzV,QAAS,GACnB0V,OAAQ,CAAEjV,SAAS,GACnBkV,qBAAqB,EACrBC,YAAY,EACZC,OAAQ,CACNC,MAAO,CACL,CACEC,aAAc,GACdC,gBAAiB,GACjBC,cAAe,GACfC,mBAAoB,GACpBC,MAAO,CACLC,UAAWjR,EAAME,QAAQY,KAAKD,WAEhCqQ,UAAW,CACT5V,SAAS,EACT6V,YAAY,KAIlBC,MAAO,CACL,CACEJ,MAAO,CACLC,UAAWjR,EAAME,QAAQY,KAAKD,UAC9BwQ,aAAa,EACbvT,IAAK,GAEPoT,UAAW,CACTI,WAAY,CAAC,GACbC,iBAAkB,CAAC,GACnB9V,MAAOuE,EAAME,QAAQsR,QACrBL,YAAY,EACZM,mBAAoB,CAAC,GACrBC,yBAA0B,CAAC,GAC3BC,cAAe3R,EAAME,QAAQsR,YAKrCI,SAAU,CACR1W,gBAAiB8E,EAAME,QAAQC,WAAWE,QAC1CwR,cAAe7R,EAAME,QAAQY,KAAKD,UAClCrC,YAAawB,EAAME,QAAQsR,QAC3BpU,YAAa,EACb0U,SAAS,EACTC,gBAAiB/R,EAAME,QAAQY,KAAKD,UACpCmR,WAAW,EACXC,KAAM,QACNC,eAAgBlS,EAAME,QAAQY,KAAKJ,UAIvC,OACE,kBAAC+K,GAAA,EAAD,eACEjJ,UAAWM,YAAKF,EAAQmD,KAAMvD,IAC1BG,GAEJ,kBAACwP,GAAA,EAAD,CACE9P,MAAM,sDAER,kBAACyC,EAAA,EAAD,MACA,kBAACgK,GAAA,EAAD,KACE,kBAAC3K,EAAA,EAAD,CACEpJ,OAAQ,IACRqX,SAAS,YAET,kBAAC,MAAD,CACE5K,KAAMA,EACNjK,QAASA,MAIf,kBAACuH,EAAA,EAAD,MACA,kBAACX,EAAA,EAAD,CACE7I,QAAQ,OACR0G,eAAe,WACfsC,EAAG,GAEH,kBAACtB,EAAA,EAAD,CACEvH,MAAM,UACN4W,QAAS,kBAAC,KAAD,MACThP,KAAK,QACLuB,QAAQ,QAJV,e,qBC7HFpK,GAAYC,aAAW,iBAAO,CAClCsL,KAAM,CACJhL,OAAQ,QAEVyI,OAAQ,CACNtI,gBAAiBoF,IAAOgS,OAAO,KAC/BvX,OAAQ,GACRC,MAAO,QAsDIuX,GAlDO,SAAC,GAAiC,IAA/B/P,EAA8B,EAA9BA,UAAUgF,EAAoB,EAApBA,KAAS7E,EAAW,oCAC/CC,EAAUpI,KAEhB,OACE,kBAACiR,GAAA,EAAD,eACEjJ,UAAWM,YAAKF,EAAQmD,KAAMvD,IAC1BG,GAEJ,kBAACmM,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,gBACR7M,QAAS,GAET,kBAAC2M,GAAA,EAAD,CAAMpN,MAAI,GACR,kBAAC+C,EAAA,EAAD,CACEjJ,MAAM,gBACNyT,cAAY,EACZtK,QAAQ,MAHV,6CAOA,kBAACF,EAAA,EAAD,CACEjJ,MAAM,cACNmJ,QAAQ,MAEC,OAAP4C,EAAaA,EAAKgL,0BAA0B,IAGlD,kBAACzD,GAAA,EAAD,CAAMpN,MAAI,GACR,kBAAC4C,EAAA,EAAD,CAAQ/B,UAAWI,EAAQY,QACzB,kBAAC,KAAD,Y,qBC1CRhJ,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,CACJhL,OAAQ,QAEVyI,OAAQ,CACNtI,gBAAiBoF,IAAOmS,MAAM,KAC9B1X,OAAQ,GACRC,MAAO,IAET2T,eAAgB,CACdlT,MAAO6E,IAAOmS,MAAM,MAEtB7D,gBAAiB,CACfnT,MAAO6E,IAAOmS,MAAM,KACpBtQ,YAAanC,EAAMoC,QAAQ,QAmEhBsQ,GA/DQ,SAAC,GAAiC,IAA/BlQ,EAA8B,EAA9BA,UAAUgF,EAAoB,EAApBA,KAAS7E,EAAW,oCAChDC,EAAUpI,KAEhB,OACE,kBAACiR,GAAA,EAAD,eACEjJ,UAAWM,YAAKF,EAAQmD,KAAMvD,IAC1BG,GAEJ,kBAACmM,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,gBACR7M,QAAS,GAET,kBAAC2M,GAAA,EAAD,CAAMpN,MAAI,GACR,kBAAC+C,EAAA,EAAD,CACEjJ,MAAM,gBACNyT,cAAY,EACZtK,QAAQ,MAHV,kBAOA,kBAACF,EAAA,EAAD,CACEjJ,MAAM,cACNmJ,QAAQ,MAEC,OAAP4C,EAAaA,EAAKmL,eAAe,IAGvC,kBAAC5D,GAAA,EAAD,CAAMpN,MAAI,GACR,kBAAC4C,EAAA,EAAD,CAAQ/B,UAAWI,EAAQY,QACzB,kBAAC,KAAD,Y,qBCnDRhJ,GAAYC,aAAW,iBAAO,CAClCsL,KAAM,CACJhL,OAAQ,QAEVyI,OAAQ,CACNtI,gBAAiBoF,IAAOM,OAAO,KAC/B7F,OAAQ,GACRC,MAAO,QAgDI4X,GA5CK,SAAC,GAAiC,IAA/BpQ,EAA8B,EAA9BA,UAAUgF,EAAoB,EAApBA,KAAS7E,EAAW,oCAC7CC,EAAUpI,KAEhB,OACE,kBAACiR,GAAA,EAAD,eACEjJ,UAAWM,YAAKF,EAAQmD,KAAMvD,IAC1BG,GAEJ,kBAACmM,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,gBACR7M,QAAS,GAET,kBAAC2M,GAAA,EAAD,CAAMpN,MAAI,GACR,kBAAC+C,EAAA,EAAD,CACEjJ,MAAM,gBACNyT,cAAY,EACZtK,QAAQ,MAHV,+BAOA,kBAACF,EAAA,EAAD,CACEjJ,MAAM,cACNmJ,QAAQ,MAEC,OAAP4C,EAAaA,EAAKqL,sBAAsB,IAG9C,kBAAC9D,GAAA,EAAD,CAAMpN,MAAI,GACR,kBAAC4C,EAAA,EAAD,CAAQ/B,UAAWI,EAAQY,QACzB,kBAAC,KAAD,Y,+DCrCRhJ,GAAYC,aAAW,iBAAO,CAClCsL,KAAM,CACJhL,OAAQ,YA+HG+X,GA3HS,SAAC,GAA4B,IAA1BtQ,EAAyB,EAAzBA,UAAcG,EAAW,6BAC5CC,EAAUpI,KACVwF,EAAQyP,eAERjI,EAAO,CACXyI,SAAU,CACR,CACEzI,KAAM,CAAC,GAAI,GAAI,IACftM,gBAAiB,CACfoF,IAAOM,OAAO,KACdN,IAAOoO,IAAI,KACXpO,IAAOgS,OAAO,MAEhBlV,YAAa,EACboB,YAAa8B,IAAOC,OAAOC,MAC3BuS,iBAAkBzS,IAAOC,OAAOC,QAGpC4P,OAAQ,CAAC,UAAW,SAAU,WAG1B7S,EAAU,CACd8S,WAAW,EACX2C,iBAAkB,GAClB1C,OAAQ,CAAEzV,QAAS,GACnB0V,OAAQ,CACNjV,SAAS,GAEXkV,qBAAqB,EACrBC,YAAY,EACZmB,SAAU,CACR1W,gBAAiB8E,EAAME,QAAQC,WAAWE,QAC1CwR,cAAe7R,EAAME,QAAQY,KAAKD,UAClCrC,YAAawB,EAAME,QAAQsR,QAC3BpU,YAAa,EACb0U,SAAS,EACTC,gBAAiB/R,EAAME,QAAQY,KAAKD,UACpCmR,WAAW,EACXC,KAAM,QACNC,eAAgBlS,EAAME,QAAQY,KAAKJ,UAIjCuS,EAAU,CACd,CACE5Q,MAAO,UACPmJ,MAAO,GACPtJ,KAAMgR,KACNzX,MAAO6E,IAAOM,OAAO,MAEvB,CACEyB,MAAO,SACPmJ,MAAO,GACPtJ,KAAMiR,KACN1X,MAAO6E,IAAOoO,IAAI,MAEpB,CACErM,MAAO,SACPmJ,MAAO,GACPtJ,KAAMkR,KACN3X,MAAO6E,IAAOgS,OAAO,OAIzB,OACE,kBAAC7G,GAAA,EAAD,eACEjJ,UAAWM,YAAKF,EAAQmD,KAAMvD,IAC1BG,GAEJ,kBAACwP,GAAA,EAAD,CAAY9P,MAAM,sBAClB,kBAACyC,EAAA,EAAD,MACA,kBAACgK,GAAA,EAAD,KACE,kBAAC3K,EAAA,EAAD,CACEpJ,OAAQ,IACRqX,SAAS,YAET,kBAAC,WAAD,CACE5K,KAAMA,EACNjK,QAASA,KAGb,kBAAC4G,EAAA,EAAD,CACE7I,QAAQ,OACR0G,eAAe,SACfwL,GAAI,GAEHyF,EAAQjO,KAAI,gBACXvJ,EADW,EACXA,MACMiH,EAFK,EAEXR,KACAG,EAHW,EAGXA,MACAmJ,EAJW,EAIXA,MAJW,OAMX,kBAACrH,EAAA,EAAD,CACEc,IAAK5C,EACLiC,EAAG,EACH+O,UAAU,UAEV,kBAAC3Q,EAAD,CAAMjH,MAAM,WACZ,kBAACiJ,EAAA,EAAD,CACEjJ,MAAM,cACNmJ,QAAQ,SAEPvC,GAEH,kBAACqC,EAAA,EAAD,CACE2B,MAAO,CAAE5K,SACTmJ,QAAQ,MAEP4G,EAJH,aC/HRhF,GAAUuC,GAAsBqD,YAkBvB,O,4GAZP,OAAOvF,IAAMqB,IAAN,UAAa1B,GAAb,0B,2CAIP,OAAOK,IAAMqB,IAAN,UAAa1B,GAAb,2B,+BAIP,OAAOK,IAAMqB,IAAN,UAAa1B,GAAb,wB,MCCThM,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,CACJ7K,gBAAiB8E,EAAME,QAAQC,WAAWC,KAC1CkM,UAAW,OACXzK,cAAe7B,EAAMoC,QAAQ,GAC7BR,WAAY5B,EAAMoC,QAAQ,QAuGfkR,GAnGG,WAChB,IAAM1Q,EAAUpI,KADM,EAEkB0L,mBAAS,MAF3B,mBAEfqN,EAFe,KAEDC,EAFC,OAGoBtN,mBAAS,MAH7B,mBAGfuN,EAHe,KAGAC,EAHA,KA6BtB,OAxBA1P,qBAAU,WAEN2P,GAAiBC,oBAChB3K,MAAK,SAAAC,GAEJsK,EAAgBtK,EAAS1B,SACxB2B,OAAM,SAAAC,GACPzB,QAAQ0B,MAAMD,QAIlB,IACFpF,qBAAU,WAEN2P,GAAiBE,qBAChB5K,MAAK,SAAAC,GACJvB,QAAQC,IAAIsB,EAAS1B,MACrBkM,EAAiBxK,EAAS1B,SACzB2B,OAAM,SAAAC,GACPzB,QAAQ0B,MAAMD,QAIlB,IAEA,kBAAC,GAAD,CACE5G,UAAWI,EAAQmD,KACnB1D,MAAM,aAEN,kBAACiL,GAAA,EAAD,CAAWC,UAAU,GACnB,kBAACwB,GAAA,EAAD,CACEC,WAAS,EACT5M,QAAS,GAET,kBAAC2M,GAAA,EAAD,CACEpN,MAAI,EACJmS,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,GAAD,CAAkB1M,KAAM+L,KAE1B,kBAACxE,GAAA,EAAD,CACEpN,MAAI,EACJmS,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACE,GAAD,CAAe3M,KAAM+L,KAEvB,kBAACxE,GAAA,EAAD,CACEpN,MAAI,EACJmS,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACG,GAAD,CAAc5M,KAAM+L,KAEtB,kBAACxE,GAAA,EAAD,CACEpN,MAAI,EACJmS,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACI,GAAD,CAA2B7M,KAAM+L,KAEnC,kBAACxE,GAAA,EAAD,CACEpN,MAAI,EACJmS,GAAI,EACJQ,GAAI,GACJN,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,CAAOzE,MAAOiE,KAEhB,kBAAC1E,GAAA,EAAD,CACEpN,MAAI,EACJmS,GAAI,EACJQ,GAAI,EACJN,GAAI,EACJC,GAAI,IAEJ,kBAAC,GAAD,W,4BCmLG,O,iDA5CXM,oB,uCAAqB,WAAOC,EAAOC,GAAd,iBAAAtZ,EAAA,sDAEjB,IADIuZ,EAAOC,SAASC,eAAeJ,GAC3BvV,EAAE,EAAEA,EAAEyV,EAAKvY,SAAS0Y,OAAO5V,IAC/B0I,QAAQC,IAAI8M,EAAKvY,SAAS8C,GAAGkM,MACF,SAAxBuJ,EAAKvY,SAAS8C,GAAGkM,MAAeuJ,EAAKvY,SAAS8C,GAAG0F,OAAO8P,IACvDC,EAAKvY,SAAS8C,GAAGuM,MAAM,IALd,0BAQV,GARU,2C,2GA1OdiJ,GACH,OAAOzX,KAAK8X,QAAQL,EAASA,EAAQ9P,Q,8BAEjC8P,EAASM,GACb,MAAqB,eAAjBN,EAAQtJ,MAA4C,KAAlBsJ,EAAQjJ,OAAkC,MAAlBiJ,EAAQjJ,OAAmC,OAAlBiJ,EAAQjJ,MAKrE,KAAlBiJ,EAAQjJ,OACRxO,KAAKgY,WAAWP,EAAS,wCAAwD,OAAhBM,EAAwB,GAAK,KAAOA,EAAc,OAC3G,IAGR/X,KAAKiY,SAASR,IACN,IAVZzX,KAAKgY,WAAWP,EAAS,wCAAwD,OAAhBM,EAAwB,GAAK,KAAOA,EAAc,OAC3G,K,+BAcPN,GACDA,IACIA,EAAQpO,QACkB,QAAtBoO,EAAQjS,WAA6C,SAAtBiS,EAAQjS,UACvCiS,EAAQpO,MAAMlG,WAAa,6CAG3BsU,EAAQpO,MAAMlG,WAAa,6CAE/BsU,EAAQpO,MAAM7H,YAAc,UAC5BiW,EAAQpO,MAAM6O,gBAAkB,IAEhCP,SAASC,eAAeH,EAAQ9P,KAAO,UACvCgQ,SAASC,eAAeH,EAAQ9P,KAAO,QAAQH,IAAM,wBACrDmQ,SAASC,eAAeH,EAAQ9P,KAAO,WACvCgQ,SAASC,eAAeH,EAAQ9P,KAAO,SAAS0B,MAAM/K,QAAU,QAEjEqZ,SAASC,eAAeH,EAAQ9P,QAC/BgQ,SAASC,eAAeH,EAAQ9P,MAAM0B,MAAM7H,YAAc,c,iCAK3DiW,EAASU,QACPC,IAAND,GAAyB,KAANA,IAClBA,EAAK,mBAELR,SAASC,eAAeH,EAAQ9P,KAAO,UACvCgQ,SAASC,eAAeH,EAAQ9P,KAAO,QAAQH,IAAM,0BACrDmQ,SAASC,eAAeH,EAAQ9P,KAAO,UACvCgQ,SAASC,eAAeH,EAAQ9P,KAAO,SAAS0Q,UAAYF,EAC5DR,SAASC,eAAeH,EAAQ9P,KAAO,SAAS0B,MAAM/K,QAAU,QAChEqZ,SAASC,eAAeH,EAAQ9P,KAAO,SAAS0B,MAAM9K,SAAW,MACjEoZ,SAASC,eAAeH,EAAQ9P,KAAO,SAAS0B,MAAM8F,UAAY,SAClEwI,SAASC,eAAeH,EAAQ9P,KAAO,SAAS0B,MAAM5K,MAAQ,WAE9D6Z,MAAMH,GAENV,EAAQpO,QACkB,QAAtBoO,EAAQjS,WAA6C,SAAtBiS,EAAQjS,UACvCiS,EAAQpO,MAAMlG,WAAa,8CAE3BsU,EAAQpO,MAAMlG,WAAa,6CAC3BsU,EAAQpO,MAAM6O,gBAAkB,+BAChCT,EAAQpO,MAAM7H,YAAc,UACzBmW,SAASC,eAAeH,EAAQ9P,QAC/BgQ,SAASC,eAAeH,EAAQ9P,MAAM0B,MAAM7H,YAAc,e,2CAWrDiW,EAASU,QACjBC,IAAND,GAAyB,KAANA,IAClBA,EAAK,mBAELR,SAASC,eAAeH,EAAQ9P,KAAO,WACvCgQ,SAASC,eAAeH,EAAQ9P,KAAO,SAAS0Q,UAAYF,EAC5DR,SAASC,eAAeH,EAAQ9P,KAAO,SAAS0B,MAAM/K,QAAU,QAChEqZ,SAASC,eAAeH,EAAQ9P,KAAO,SAAS0B,MAAM9K,SAAW,MACjEoZ,SAASC,eAAeH,EAAQ9P,KAAO,SAAS0B,MAAM8F,UAAY,SAClEwI,SAASC,eAAeH,EAAQ9P,KAAO,SAAS0B,MAAM5K,MAAQ,WAE/DkZ,SAASC,eAAeH,EAAQ9P,OAC/BgQ,SAASC,eAAeH,EAAQ9P,MAAM4Q,UAAUC,IAAI,e,yCAQzCf,EAASU,GACzBR,SAASC,eAAeH,EAAQ9P,QAC/BgQ,SAASC,eAAeH,EAAQ9P,MAAM4Q,UAAUE,OAAO,aACvDd,SAASC,eAAeH,EAAQ9P,MAAM0B,MAAM7H,YAAc,WAE1DmW,SAASC,eAAeH,EAAQ9P,KAAO,WACvCgQ,SAASC,eAAeH,EAAQ9P,KAAO,SAAS0B,MAAM/K,QAAU,U,kCAQxDmZ,GACR,IAAIiB,GAAS,EAsBb,MArBuB,KAAlBjB,EAAQjJ,OAA+C,IAA/BiJ,EAAQjJ,MAAM5M,QAAQ,OAC/C6V,EAAQjJ,MAAQ,IAAMiJ,EAAQjJ,OAEZ,KAAlBiJ,EAAQjJ,OACRxO,KAAKgY,WAAWP,EAAS,wDACzBA,EAAQjJ,MAAQ,IAChBkK,GAAU,GAEJ1Y,KAAK2Y,kBAAkBlB,KACP,KAAlBA,EAAQjJ,QACRiJ,EAAQjJ,MAAQ,KACpBkK,GAAU,IAES,KAAlBjB,EAAQjJ,OAAgBoK,MAAMnB,EAAQjJ,QAAWiJ,EAAQjJ,MAAM5M,QAAQ,OAAS6V,EAAQjJ,MAAMqK,YAAY,QAC3G7Y,KAAKgY,WAAWP,EAAS,2CACzBA,EAAQjJ,MAAQ,IAChBkK,GAAU,GAEVA,GACA1Y,KAAKiY,SAASR,GAEXiB,I,wCAOOjB,GACd,OAAOzX,KAAK8Y,YAAYrB,EACpB,cACA,0E,kCAGIA,EAASsB,EAAOZ,GAGxB,IAFA,IAAIa,EAAK,MACLC,EAAO,GACFhX,EAAI,EAAGA,EAAIwV,EAAQjJ,MAAMqJ,OAAQ5V,IACtCgX,EAAO,GAAKxB,EAAQjJ,MAAM0K,UAAUjX,EAAGA,EAAI,IACd,IAAzB8W,EAAMnX,QAAQqX,KAAgBD,EAAK,MAE3C,GAAW,OAAPA,EAAa,CACbC,EAAO,GACPxB,EAAQjJ,MAAQiJ,EAAQjJ,MAAM2K,cAC9B,IAAK,IAAIlX,EAAI,EAAGA,EAAIwV,EAAQjJ,MAAMqJ,OAAQ5V,IACS,OAA3C8W,EAAMnX,QAAQ6V,EAAQjJ,MAAM4K,OAAOnX,MAChCgX,GAAQxB,EAAQjJ,MAAM4K,OAAOnX,IAIxC,OAFAwV,EAAQjJ,MAAQyK,EAChBjZ,KAAKgY,WAAWP,EAASU,EAAM,mEACvB,EAIR,OADAnY,KAAKiY,SAASR,IACN,I,+BASPA,GAKL,GAJAzX,KAAK8Y,YAAYrB,EACb,cACA,0HAEAA,EAAQjJ,MAAMqJ,OAAS,GAAKJ,EAAQjJ,MAAMqJ,OAAS,GAC/CJ,EAAQjJ,MAAMqJ,OAAS,IAAqC,IAAhCJ,EAAQjJ,MAAM5M,QAAQ,MAClD6V,EAAQjJ,MAAMqJ,OAAS,GAAKJ,EAAQjJ,MAAMqJ,OAAS,EAGvD,OADA7X,KAAKgY,WAAWP,EAAS,gDAClB,EAGP,IAAI4B,EAAK5B,EAAQjJ,MAAM0K,UAAU,EAAG,GAChCzB,EAAQjJ,MAAMqJ,OAAS,IAAKwB,EAAK5B,EAAQjJ,MAAM0K,UAAU,EAAG,IAChE,IAAII,EAAO,IAGX,OAFI7B,EAAQjJ,MAAMqJ,OAAS,IAAKyB,EAAO,MACV,IAAzB7B,EAAQjJ,MAAMqJ,SAAgByB,EAAO7B,EAAQjJ,MAAM0K,UAAU,EAAG,IAC/DN,MAAMS,IAAST,MAAMU,IAIhBD,EAAK,IAAQC,EAAO,IAH1BtZ,KAAKgY,WAAWP,EAAS,gDAClB,IAOPzX,KAAKiY,SAASR,IACP,K,+BAIV1N,GACL,IACIwP,EADYxP,EAAMyP,MAAM,KAAK,GACVC,QAAQ,IAAK,KAAKA,QAAQ,IAAK,KAGtD,OAAO7L,KAAK8L,MAAMtc,OAAOuc,KAAKJ,M,uCAEjBK,GAGb,IAFA,IACIC,EADQzc,OAAOC,SAASyc,OAAOZ,UAAU,GAC5BM,MAAM,KACdvX,EAAE,EAAGA,EAAI4X,EAAKhC,OAAQ5V,IAAK,CAChC,IAAI8X,EAAOF,EAAK5X,GAAGuX,MAAM,KACzB,GAAGO,EAAK,KAAOH,EACX,OAAOG,EAAK,GAGpB,OAAO,I,mCA2BEjW,GACT,MAAO,CAACkW,OAAQlW,K,mCASPmW,GAET,IADA,IAAIvC,EAAOC,SAASC,eAAeqC,GAC3BhY,EAAE,EAAEA,EAAEyV,EAAKvY,SAAS0Y,OAAO5V,IAC/B0I,QAAQC,IAAI8M,EAAKvY,SAAS8C,GAAGiY,UAC1BxC,EAAKvY,SAAS8C,GAAGiY,WACY,KAAzBxC,EAAKvY,SAAS8C,GAAGuM,OAChB7D,QAAQ0B,MAAM,qBAAqBqL,EAAKvY,SAAS8C,GAAG0F,MACpD3H,KAAKma,qBAAqBzC,EAAKvY,SAAS8C,KAExCjC,KAAKoa,mBAAmB1C,EAAKvY,SAAS8C,S,gBC9QpDzE,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,CACJ7K,gBAAiB8E,EAAME,QAAQC,WAAWC,KAC1CrF,OAAQ,OACR8G,cAAe7B,EAAMoC,QAAQ,GAC7BR,WAAY5B,EAAMoC,QAAQ,QA8IfiV,GA1IG,WAChB,IAAMzU,EAAUpI,KADM,GAEL8c,cACOpR,oBAAS,IAHX,mBAGfV,EAHe,KAGT+R,EAHS,OAIUrR,oBAAS,GAJnB,mBAIfsR,EAJe,KAILC,EAJK,KActB,OACE,kBAAC,GAAD,CACEjV,UAAWI,EAAQmD,KACnB1D,MAAM,SAEN,kBAAC8B,EAAA,EAAD,CACE7I,QAAQ,OACR8I,cAAc,SACdrJ,OAAO,OACPiH,eAAe,UAEf,kBAACsL,GAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC,KAAD,CACEmK,cAAe,CACb/Q,SAAU,GACVC,SAAU,IAEZ+Q,iBAAkBC,OAAaC,MAAM,CACnClR,SAAUiR,OAAaE,IAAI,KAAKZ,SAAS,wBACzCtQ,SAAUgR,OAAaE,IAAI,KAAKZ,SAAS,gCAE3Ca,SAAU,SAACC,EAAOC,GAEhBlP,GACGmP,gCAAgCF,EAAOrR,SAAUqR,EAAOpR,UACxDqC,MAAK,SAACC,GAEH,IACIiP,EADOC,GAASC,SAASnP,EAAS1B,KAAKT,OAC3BuR,IAChBvP,GAAsBwP,8BAA8BJ,EAAMjP,EAAS1B,KAAKT,OACxEgC,GAAsB7B,uBAAuB6B,GAAsB5B,eAAe+B,EAAS1B,KAAKT,QAChG3M,OAAOC,SAAWyL,2BAEH,KAChBqD,OAAM,SAACC,GAtCJ,IAAC+L,IAwCSqD,OAAOpP,GAAKxK,QAAQ,OAAO,EAAE4Z,OAAOpP,EAAIF,SAAS1B,KAAKiR,SAASD,OAAOpP,GAvClGqO,EAAYtC,GACZoC,GAAQ,IAuCuB,QAItB,gBACCmB,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAC,EALD,EAKCA,qBACAC,EAND,EAMCA,QACAf,EAPD,EAOCA,OAPD,OASC,0BAAMD,SAAUc,GACd,kBAAC1U,EAAA,EAAD,CAAK6U,GAAI,GACP,kBAACtU,EAAA,EAAD,CACEjJ,MAAM,cACNmJ,QAAQ,MAFV,qBAMA,kBAACF,EAAA,EAAD,CACEjJ,MAAM,gBACNyT,cAAY,EACZtK,QAAQ,SAHV,oCAQF,kBAACqU,GAAA,EAAD,CACE5P,MAAOlP,QAAQ4e,EAAQpS,UAAY+R,EAAO/R,UAC1CuS,WAAS,EACTC,WAAYJ,EAAQpS,UAAY+R,EAAO/R,SACvCuJ,MAAM,UACNtV,OAAO,SACP+J,KAAK,WACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAOrR,SAAS2S,OACvB1U,QAAQ,aAEV,kBAACqU,GAAA,EAAD,CACE5P,MAAOlP,QAAQ4e,EAAQnS,UAAY8R,EAAO9R,UAC1CsS,WAAS,EACTC,WAAYJ,EAAQnS,UAAY8R,EAAO9R,SACvCsJ,MAAM,gBACNtV,OAAO,SACP+J,KAAK,WACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,WACLK,MAAOwM,EAAOpR,SAAS0S,OACvB1U,QAAQ,aAEV,kBAACT,EAAA,EAAD,CAAKoV,GAAI,GACP,kBAACvW,EAAA,EAAD,CACEvH,MAAM,UACN+d,SAAUV,EACVI,WAAS,EACT7V,KAAK,QACL8H,KAAK,SACLvG,QAAQ,aANV,mBAgBZ,kBAAC6U,GAAA,EAAD,CACIC,aAAc,CAAEC,SAAU,MAC1Bnc,WAAY,UACZgI,KAAMA,EACND,QAzHY,WAClBgS,GAAQ,IAyHF3S,QAAQ,QACRgV,aAAc,CACZ,mBAAoB,cAEtBnB,QAAS,0BAAMlR,GAAG,cAAciQ,OCrJpChd,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,CACJ7K,gBAAiB8E,EAAME,QAAQC,WAAWC,KAC1CrF,OAAQ,OACR8G,cAAe7B,EAAMoC,QAAQ,GAC7BR,WAAY5B,EAAMoC,QAAQ,IAE5BkN,MAAO,CACLnD,UAAW,GACX7Q,QAAS,eACTiS,SAAU,OACVvS,MAAO,SAkDI6e,GA9CM,WACnB,IAAMjX,EAAUpI,KAEhB,OACE,kBAAC,GAAD,CACEgI,UAAWI,EAAQmD,KACnB1D,MAAM,OAEN,kBAAC8B,EAAA,EAAD,CACE7I,QAAQ,OACR8I,cAAc,SACdrJ,OAAO,OACPiH,eAAe,UAEf,kBAACsL,GAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC7I,EAAA,EAAD,CACEoV,MAAM,SACNre,MAAM,cACNmJ,QAAQ,MAHV,qDAOA,kBAACF,EAAA,EAAD,CACEoV,MAAM,SACNre,MAAM,cACNmJ,QAAQ,aAHV,4GAQA,kBAACT,EAAA,EAAD,CAAKkP,UAAU,UACb,yBACExN,IAAI,oBACJrD,UAAWI,EAAQ0M,MACnB9K,IAAI,mDAGR,kBAACL,EAAA,EAAD,CAAKkP,UAAU,UACb,kBAACrQ,EAAA,EAAD,CAAQ4B,QAAQ,WAAWnJ,MAAM,UAAU8K,QAAS,SAACsJ,GAAKzV,OAAOC,SAAS,mBAA1E,iB,8BC7DNmM,GAAUuC,GAAsBqD,YAElC2N,GAAe,CACfC,aAAc,QAEZpN,G,kGAGE,OAAO/F,IAAMqB,IAAN,UAAa1B,GAAb,iB,+BAGFe,GACL,OAAOV,IAAMqB,IAAN,UAAa1B,GAAb,qBAAiCe,M,iCAGjC0S,EAAWzS,GAClB,OAAOX,IAAMC,KAAN,UAAcN,GAAd,qBAAkCyT,GAAazS,EAAMuS,M,sCAGhDE,EAAWzS,GACvB,OAAOX,IAAMC,KAAN,UAAcN,GAAd,qBAAkCyT,EAAlC,UAAqDzS,EAAMuS,Q,KAe3D,OAAInN,G,oDC/BnB,SAASsN,GAAMtU,GACb,OAAO,kBAAC,KAAD,eAAUQ,UAAW,EAAGxB,QAAQ,UAAagB,IAGtD,IAAMpL,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,CACJ/K,MAAO,OACP,YAAa,CACXmR,UAAWnM,EAAMoC,QAAQ,SAKhB,SAAS+X,GAAoBvU,GAC1C+B,QAAQC,IAAIhC,EAAM2R,SAClB,IAAM3U,EAAUpI,KAFiC,EAGzB4f,IAAMlU,SAASN,EAAM2R,SAHI,mBAG1C/R,EAH0C,KAGpC+R,EAHoC,KAiBjD,OACE,yBAAK/U,UAAWI,EAAQmD,MACtB,kBAAC0T,GAAA,EAAD,CAAUjU,KAAMA,EAAM6U,iBAAkB,IAAM9U,QAAS,kBAAIgS,GAAQ,IAAQmC,aAAc,CAAEC,SAAU,MAAOnc,WAAY,UACtH,kBAAC,GAAD,CAAO+H,QAAS,kBAAIgS,GAAQ,IAAQ+C,SAAU1U,EAAM0U,UACjD1U,EAAM2U,MAGX,kBAACvX,EAAA,EAAD,CAAQuE,GAAI,iBAAkB3C,QAAQ,WAAW2B,QAnBjC,WAClBgR,GAAQ,IAkBiElR,MAAO,CAAC/K,QAAQ,SAAvF,0BClBN,IAAMd,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,CACJ7K,gBAAiB8E,EAAME,QAAQC,WAAWC,KAC1CkM,UAAW,OACXzK,cAAe7B,EAAMoC,QAAQ,GAC7BR,WAAY5B,EAAMoC,QAAQ,IAE5BoY,YAAa,CACXzf,OAAQ,QAEViU,UAAW,CACT1T,QAAS,OACTmf,SAAU,QAEZC,UAAW,CACTC,WAAY3a,EAAMoC,QAAQ,GAC1BD,YAAanC,EAAMoC,QAAQ,GAC3BpH,MAAO,KAET4f,KAAM,CACJzO,UAAW,QA8MA0O,GAxMW,SAACrT,GACzB,IAAM5E,EAAUpI,KADkB,EAElB0L,mBAAS,IAAI4U,MAAtBC,EAF2B,sBAGE7U,mBAAS,IAHX,mBAG3B8U,EAH2B,KAGfC,EAHe,OAID/U,oBAAS,GAJR,mBAI3BgV,EAJ2B,KAIjBC,EAJiB,OAKbjV,mBAAS,IALI,mBAK3BqU,EAL2B,KAKvBa,EALuB,OAMHlV,mBAAS,WANN,mBAM3BoU,EAN2B,UAOlC3S,QAAQC,IAAI,eAAiBJ,EAAKkD,WAElC,IAuCM2Q,EAAiB,SAACrR,EAAQsR,GAC9BC,GAAcC,gBAAgBxR,EAAQsR,GACnCrS,MAAK,SAAAC,GACJ,IAAMuS,EAAMrhB,OAAOshB,IAAIC,gBAAgB,IAAIC,KAAK,CAAC1S,EAAS1B,QACpDqU,EAAOlH,SAASmH,cAAc,KACpCD,EAAKpZ,KAAOgZ,EACZI,EAAKE,aAAa,WAAY,iBAC9BpH,SAAS1Z,KAAK+gB,YAAYH,GAC1BA,EAAKI,WACJ9S,OAAM,SAAAC,GACPzB,QAAQ0B,MAAMD,OAId8S,EAAY,SAAClS,EAAQsR,GACzBC,GAAcY,WAAWnS,EAAQsR,GAC9BrS,MAAK,SAAAC,GACJvB,QAAQC,IAAIsB,EAAS1B,MACrB,IAAMiU,EAAMrhB,OAAOshB,IAAIC,gBAAgB,IAAIC,KAAK,CAAC1S,EAAS1B,QACpDqU,EAAOlH,SAASmH,cAAc,KACpCD,EAAKpZ,KAAOgZ,EACZI,EAAKE,aAAa,WAAY,gBAC9BpH,SAAS1Z,KAAK+gB,YAAYH,GAC1BA,EAAKI,WACJ9S,OAAM,SAAAC,GACPzB,QAAQ0B,MAAMD,OAQdgT,EAAY,SAAC7B,GACjB,IAAI8B,EAAU1H,SAASC,eAAe,kBACtCuG,GAAa,GACbC,EAAOb,GACP8B,EAAQJ,SAIV,OACE,kBAAC,GAAD,CACEzZ,UAAWI,EAAQmD,KACnB1D,MAAM,kBAEN,kBAACiL,GAAA,EAAD,CAAWC,UAAU,GAEnB,kBAACpJ,EAAA,EAAD,CAAKqJ,GAAI,GACP,kBAAC/B,GAAA,EAAD,CAAMjJ,UAAWM,YAAKF,EAAQmD,MAAOM,MAAO,CAAExL,QAAS,GAAIK,gBAAiB,UAAWU,OAAQ,sBAC7F,kBAACuW,GAAA,EAAD,CACE9P,MAAM,8BACNia,UAAU,qCAEZ,0BAAM9Z,UAAWI,EAAQoM,UAAWuN,YAAU,EAACC,aAAa,OAC1D,kBAAC1X,EAAA,EAAD,CAASuB,MAAO,CAAEoW,aAAc,KAChC,kBAAC1N,GAAA,EAAD,CACEC,WAAS,EACT5M,QAAS,GAET,kBAAC2M,GAAA,EAAD,CACEvM,UAAWhI,GAAUogB,KACrBjZ,MAAI,EACJ2S,GAAI,GACJP,GAAI,GACJE,GAAI,IAEJ,kBAACyI,GAAA,EAAD,CAAala,UAAWhI,GAAUa,YAAagL,MAAO,CAAEsU,WAAY,EAAG8B,aAAc,IACnF,kBAACE,GAAA,EAAD,CAAYpV,GAAG,qCAAf,YACA,kBAACqV,GAAA,EAAD,CACEC,QAAM,EACNrR,MAAOwP,EACP3B,SA3CC,SAACxJ,GACpBoL,EAAcpL,EAAEiN,OAAOtR,QA2CLuR,WAAY,CACVpY,KAAM,WACN4C,GAAI,YAEN2R,WAAS,EACT7S,MAAO,CAAErL,MAAO,UAEhB,4BAAQuQ,aAAW,OAAOC,MAAM,UACb4J,GAAlB5N,EAAKkD,WAA0BlD,EAAKkD,UAAU1F,KAAI,SAACgY,GAClD,OACE,4BAAQzR,aAAW,OAAOC,MAAOwR,EAAEzV,GAAI2I,MAAO8M,EAAEC,wBAM1D,kBAAClO,GAAA,EAAD,CACEvM,UAAWhI,GAAUogB,KACrBjZ,MAAI,EACJmS,GAAI,EACJQ,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACE1R,GAAG,eACH2I,MAAM,eACN/E,KAAK,iBACL+R,aAAc/P,KAAO4N,GAAO3N,OAAO,oBACnC5K,UAAWI,EAAQ8X,UACnByC,gBAAiB,CACfC,QAAQ,GAEVlE,WAAS,IAGX,kBAACD,GAAA,EAAD,CACE1R,GAAG,cACH2I,MAAM,cACN/E,KAAK,iBACL+R,aAAc/P,KAAO4N,GAAO3N,OAAO,oBACnC5K,UAAWI,EAAQ8X,UACnByC,gBAAiB,CACfC,QAAQ,GAEV/W,MAAO,CAAEsU,WAAY,IACrBzB,WAAS,KAKb,kBAACnK,GAAA,EAAD,CACEvM,UAAWhI,GAAUogB,KACrBjZ,MAAI,EACJmS,GAAI,EACJQ,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACjR,EAAA,EAAD,CAAQ4B,QAAQ,YAAYuG,KAAK,SAAS1P,MAAM,YAAYkJ,KAAK,iBAC/D0B,MAAO,CAAE8F,UAAW,GAAIwO,WAAY,IAAM0C,UAAW,kBAAC,KAAD,MACrD9W,QA7KG,SAACsJ,GAEpBA,EAAEyN,iBACF,IAAIC,EAAcpQ,KAAOwH,SAASC,eAAe,gBAAgBpJ,OAAO4B,OAAO,uBAC3EoQ,EAAarQ,KAAOwH,SAASC,eAAe,eAAepJ,OAAO4B,OAAO,uBAE7E,QAAgBgI,IAAb4F,GAAuC,KAAbA,EAC3BoB,EAAU,6CACP,CACH,IAAId,EAAM,CACRmC,aAAcF,EACdG,UAAWF,EACXG,OAAQ,WACR3C,WAAWA,GAEbrT,QAAQC,IAAI2V,GACZrB,EAAU,WAAYZ,MA2JV,eAGA,kBAACtY,EAAA,EAAD,CACEuD,QA3JQ,SAACsJ,GAEzBA,EAAEyN,iBACF,IAAIC,EAAcpQ,KAAOwH,SAASC,eAAe,gBAAgBpJ,OAAO4B,OAAO,uBAC3EoQ,EAAarQ,KAAOwH,SAASC,eAAe,eAAepJ,OAAO4B,OAAO,uBAE7E,QAAgBgI,IAAb4F,GAAuC,KAAbA,EAC3BoB,EAAU,6CACP,CACH,IAAId,EAAM,CACRmC,aAAcF,EACdG,UAAWF,EACXG,OAAQ,YAEVhW,QAAQC,IAAI2V,GACZlC,EAAe,WAAYC,KA6Ib1W,QAAQ,YAAYuG,KAAK,SAAS1P,MAAM,YAAY4K,MAAO,CAAE8F,UAAW,GAAIwO,WAAY,IACxF0C,UAAW,kBAAC,KAAD,OAHb,uBAYZ,kBAAClD,GAAD,CAAqB5C,QAAS2D,EAAWZ,SAAUA,EAAUC,IAAKA,MC3OlE/f,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,CACJ7K,gBAAiB8E,EAAME,QAAQC,WAAWC,KAC1CkM,UAAW,OACXzK,cAAe7B,EAAMoC,QAAQ,GAC7BR,WAAY5B,EAAMoC,QAAQ,QA8EfkR,GA1EG,WAChB,IAAM1Q,EAAUpI,KADM,EAGkB0L,mBAAS,IAH3B,mBAGhB0X,EAHgB,KAGDC,EAHC,KAsBtB,OAjBD7Z,qBAAU,WAEPuX,GAAczO,UACb7D,MAAK,SAAAC,GACJvB,QAAQC,IAAIsB,EAAS1B,MACrBqW,EAAgB3U,EAAS1B,SACxB2B,OAAM,SAAAC,GACPzB,QAAQ0B,MAAMD,QAMjB,IAKC,kBAAC,GAAD,CACE5G,UAAWI,EAAQmD,KACnB1D,MAAM,YAEN,kBAACiL,GAAA,EAAD,CAAWC,UAAU,GACnB,kBAACwB,GAAA,EAAD,CACEC,WAAS,EACT5M,QAAS,GAET,kBAAC2M,GAAA,EAAD,CACEpN,MAAI,EACJmS,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,IAEJ,kBAAC,GAAD,CAAmBvJ,UAAWkT,KAEhC,kBAAC7O,GAAA,EAAD,CACEpN,MAAI,EACJmS,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,IAEJ,kBAAC,GAAD,OAEF,kBAAClF,GAAA,EAAD,CACEpN,MAAI,EACJmS,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,IAEJ,kBAAC,GAAD,OAEF,kBAAClF,GAAA,EAAD,CACE+E,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,GAAI,IAEJ,kBAAC,GAAD,W,8BCpENzZ,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,CACJ7K,gBAAiB8E,EAAME,QAAQC,WAAWC,KAC1CrF,OAAQ,OACR8G,cAAe7B,EAAMoC,QAAQ,GAC7BR,WAAY5B,EAAMoC,QAAQ,QAuLf0b,GAnLM,WACnB,IAAMlb,EAAUpI,KACVujB,EAAWzG,cAEjB,OACE,kBAAC,GAAD,CACE9U,UAAWI,EAAQmD,KACnB1D,MAAM,YAEN,kBAAC8B,EAAA,EAAD,CACE7I,QAAQ,OACR8I,cAAc,SACdrJ,OAAO,OACPiH,eAAe,UAEf,kBAACsL,GAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC,KAAD,CACEmK,cAAe,CACb/Q,SAAU,GACVqX,UAAW,GACXC,SAAU,GACVrX,SAAU,GACVsX,QAAQ,GAEVvG,iBACEC,OAAaC,MAAM,CACjBlR,SAAUiR,OAAajR,SAAS,4BAA4BmR,IAAI,KAAKZ,SAAS,wBAC9E8G,UAAWpG,OAAaE,IAAI,KAAKZ,SAAS,0BAC1C+G,SAAUrG,OAAaE,IAAI,KAAKZ,SAAS,yBACzCtQ,SAAUgR,OAAaE,IAAI,KAAKZ,SAAS,wBACzCgH,OAAQtG,OAAcuG,MAAM,EAAC,GAAO,gCAGxCpG,SAAU,WACRgG,EAAS,iBAAkB,CAAEtH,SAAS,OAGvC,gBACCiC,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAZ,EALD,EAKCA,aACAc,EAND,EAMCA,QACAf,EAPD,EAOCA,OAPD,OASC,0BAAMD,SAAUc,GACd,kBAAC1U,EAAA,EAAD,CAAK6U,GAAI,GACP,kBAACtU,EAAA,EAAD,CACEjJ,MAAM,cACNmJ,QAAQ,MAFV,sBAMA,kBAACF,EAAA,EAAD,CACEjJ,MAAM,gBACNyT,cAAY,EACZtK,QAAQ,SAHV,4CAQF,kBAACqU,GAAA,EAAD,CACE5P,MAAOlP,QAAQ4e,EAAQiF,WAAatF,EAAOsF,WAC3C9E,WAAS,EACTC,WAAYJ,EAAQiF,WAAatF,EAAOsF,UACxC9N,MAAM,aACNtV,OAAO,SACP+J,KAAK,YACLyU,OAAQT,EACRU,SAAUT,EACVpN,MAAOwM,EAAOgG,UACdpZ,QAAQ,aAEV,kBAACqU,GAAA,EAAD,CACE5P,MAAOlP,QAAQ4e,EAAQkF,UAAYvF,EAAOuF,UAC1C/E,WAAS,EACTC,WAAYJ,EAAQkF,UAAYvF,EAAOuF,SACvC/N,MAAM,YACNtV,OAAO,SACP+J,KAAK,WACLyU,OAAQT,EACRU,SAAUT,EACVpN,MAAOwM,EAAOiG,SACdrZ,QAAQ,aAEV,kBAACqU,GAAA,EAAD,CACE5P,MAAOlP,QAAQ4e,EAAQpS,UAAY+R,EAAO/R,UAC1CuS,WAAS,EACTC,WAAYJ,EAAQpS,UAAY+R,EAAO/R,SACvCuJ,MAAM,mBACNtV,OAAO,SACP+J,KAAK,WACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,WACLK,MAAOwM,EAAOrR,SACd/B,QAAQ,aAEV,kBAACqU,GAAA,EAAD,CACE5P,MAAOlP,QAAQ4e,EAAQnS,UAAY8R,EAAO9R,UAC1CsS,WAAS,EACTC,WAAYJ,EAAQnS,UAAY8R,EAAO9R,SACvCsJ,MAAM,WACNtV,OAAO,SACP+J,KAAK,WACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,WACLK,MAAOwM,EAAOpR,SACdhC,QAAQ,aAEV,kBAACT,EAAA,EAAD,CACEE,WAAW,SACX/I,QAAQ,OACR8iB,IAAK,GAEL,kBAACC,GAAA,EAAD,CACEC,QAAStG,EAAOkG,OAChBvZ,KAAK,SACL0U,SAAUT,IAEZ,kBAAClU,EAAA,EAAD,CACEjJ,MAAM,gBACNmJ,QAAQ,SAFV,kBAKG,IACD,kBAAC2Z,GAAA,EAAD,CACE9iB,MAAM,UACNyH,UAAWC,IACXC,GAAG,IACHob,UAAU,SACV5Z,QAAQ,MALV,0BAWHzK,QAAQ4e,EAAQmF,QAAUxF,EAAOwF,SAChC,kBAACO,GAAA,EAAD,CAAgBpV,OAAK,GAClBqP,EAAOwF,QAGZ,kBAAC/Z,EAAA,EAAD,CAAKoV,GAAI,GACP,kBAACvW,EAAA,EAAD,CACEvH,MAAM,UACN+d,SAAUvB,EACViB,WAAS,EACT7V,KAAK,QACL8H,KAAK,SACLvG,QAAQ,aANV,gBAWF,kBAACF,EAAA,EAAD,CACEjJ,MAAM,gBACNmJ,QAAQ,SAFV,mBAKG,IACD,kBAAC2Z,GAAA,EAAD,CACErb,UAAWC,IACXC,GAAG,SACHwB,QAAQ,MAHV,oB,cC3KAnK,YAAY,CAC5BsL,KAAM,GACNpE,KAAM,CACJrG,QAAS,OACT8I,cAAe,Y,WCPD3J,YAAY,CAC5BsL,KAAM,K,gDCbFS,GAAUuC,GAAsBqD,YAGhCQ,G,kGAGE,OAAO/F,IAAMqB,IAAN,UAAa1B,GAAb,iB,+BAGFe,GACL,OAAOV,IAAMqB,IAAN,UAAa1B,GAAb,qBAAiCe,M,2BAGvCC,GACD,OAAOX,IAAMC,KAAN,UAAcN,GAAd,cAAkCgB,K,6BAGtCD,EAAIC,GACP,OAAOX,IAAMY,IAAN,UAAajB,GAAb,qBAAiCe,GAAMC,K,uCAIjCD,GACb,OAAOV,IAAMqB,IAAN,UAAa1B,GAAb,wCAAoDe,M,mCAGlDC,GACT,OAAOX,IAAMC,KAAN,UAAcN,GAAd,wBAA4CgB,K,wCAIrCD,GACd,OAAOV,IAAMqB,IAAN,UAAa1B,GAAb,+BAA2Ce,M,mCAGzCC,GACT,OAAOX,IAAMC,KAAN,UAAcN,GAAd,cAAkCgB,K,uCAI5BD,GACb,OAAOV,IAAMqB,IAAN,UAAa1B,GAAb,+BAA2Ce,M,oCAGxCC,GACV,OAAOX,IAAMC,KAAN,UAAcN,GAAd,eAAmCgB,O,KAcnC,OAAIoF,G,6BCnDJ,SAAS8R,GAAkB9Y,GAAO,MAEPwU,IAAMlU,SAAS,IAAI4U,MAFZ,6BAQ/C,OACE,kBAAC,KAAD,CAAyB6D,MAAOC,MAC9B,kBAAC7P,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBACtB,kBAAC,KAAD,CACE4P,gBAAc,EACdja,QAAQ,SACRwI,OAAO,aACPxS,OAAO,SACP2M,GAAG,iBACH2I,MAAM,iBACN1E,MAAO5F,EAAMkZ,KACbzF,SAAU,SAACxJ,GAAD,OAAOjK,EAAMmZ,iBAAiBlP,IACxCmP,oBAAqB,CACnB,aAAc,qB,cCCpBxkB,GAAYC,YAAY,CAC1BsL,KAAM,GACNpE,KAAM,CACFrG,QAAS,OACT8I,cAAe,YAGF6a,G,oDACjB,WAAYrZ,GAAQ,IAAD,8BACf,cAAMA,IACD4G,MAAQ,CACT0S,eAAgB,GAChBlE,WAAW,GACXxV,MAAK,EACLyX,gBAAgB,GAChBkC,YAAY,GACZC,eAAe,IAAItE,KACnB9Q,OAAO,GACPqV,MAAM,EACNC,SAAQ,EACRC,YAAY,GACZC,eAAe,GACfC,UAAS,EACTC,WAAW,GACXC,eAAe,GACfC,gBAAgB,GAChBC,eAAe,EACfC,iBAAiB,GACjBC,gBAAgB,EAChBC,gBAAgB,GAChBC,YAAY,GACZC,UAAS,GAvBE,E,gEA2BfljB,KAAK2P,qB,yCAGW,IAAD,OACfC,GAAgBE,UACX7D,MAAK,SAAAC,GACFvB,QAAQC,IAAIsB,EAAS1B,MACrB,EAAKqF,SAAS,CAAEqS,eAAgBhW,EAAS1B,UAC1C2B,OAAM,SAAAC,GACLzB,QAAQ0B,MAAMD,Q,gDAIA7B,GAAI,IAAD,OACzBqF,GAAgBuT,iBAAiB5Y,GAChC0B,MAAK,SAAAC,GACFvB,QAAQC,IAAIsB,EAAS1B,MACrB,EAAKqF,SAAS,CAAC2S,eAAetW,EAAS1B,UACxC2B,OAAM,SAAAC,GACLzB,QAAQ0B,MAAMD,GACd,EAAKyD,SAAS,CAAC2S,eAAe,U,gDAIZjY,GAAI,IAAD,OACzBqF,GAAgBwT,kBAAkB7Y,GACjC0B,MAAK,SAAAC,GACFvB,QAAQC,IAAIsB,EAAS1B,MACrB,EAAKqF,SAAS,CAAC8S,eAAezW,EAAS1B,UACxC2B,OAAM,SAAAC,GACLzB,QAAQ0B,MAAMD,GACd,EAAKyD,SAAS,CAAC8S,eAAe,U,iDAKXpY,GAAI,IAAD,OAC1BqF,GAAgByT,iBAAiB9Y,GAChC0B,MAAK,SAAAC,GACFvB,QAAQC,IAAIsB,EAAS1B,MACrB,EAAKqF,SAAS,CAACmT,gBAAgB9W,EAAS1B,UACzC2B,OAAM,SAAAC,GACLzB,QAAQ0B,MAAMD,GACd,EAAKyD,SAAS,CAACmT,gBAAgB,U,gCAI7BM,GACN,IAAIjE,EAAU1H,SAASC,eAAe,kBACtC5X,KAAK6P,SAAS,CACVqO,WAAU,EACVX,IAAI+F,EAAM,0BACVhG,SAAS,YAEb+B,EAAQJ,U,mCAGCpM,GAET7S,KAAK6P,SAAS,CAACmO,WAAWnL,EAAEiN,OAAOtR,QACnCxO,KAAKujB,0BAA0BC,SAAS3Q,EAAEiN,OAAOtR,QACjDxO,KAAK6P,SAAS,CAAC8S,eAAe,GAAGK,gBAAgB,O,4CAG/BnQ,GAElB7S,KAAK6P,SAAS,CAAC0S,YAAY1P,EAAEiN,OAAOtR,QACpCxO,KAAKyjB,0BAA0BD,SAAS3Q,EAAEiN,OAAOtR,QACjDxO,KAAK6P,SAAS,CAACmT,gBAAgB,O,2CAGdnQ,GAEjB7S,KAAK6P,SAAS,CAAC6S,WAAW7P,EAAEiN,OAAOtR,QACnCxO,KAAK0jB,2BAA2BF,SAAS3Q,EAAEiN,OAAOtR,U,4CAGhCqE,GAClB7S,KAAK6P,SAAS,CAACoT,YAAYpQ,EAAEiN,OAAOtR,U,yCAIpC,OAAOxO,KAAKwP,MAAM0S,eAAela,KAC7B,SAAAgY,GAAC,OACG,4BAAQxR,MAAOwR,EAAEzV,IAAKyV,EAAEC,sB,kDAMhC,OAAOjgB,KAAKwP,MAAMgT,eAAexa,KAC7B,SAAAgY,GAAC,OACG,4BAAQxR,MAAOwR,EAAE2D,cAAe3D,EAAEhT,a,iDAM1C,OAAOhN,KAAKwP,MAAMmT,eAAe3a,KAC7B,SAAAgY,GAAC,OACG,4BAAQxR,MAAOwR,EAAE4D,aAAc5D,EAAE4C,sB,kDAMzC,OAAO5iB,KAAKwP,MAAMwT,gBAAgBhb,KAC9B,SAAAgY,GAAC,OACG,4BAAQxR,MAAOwR,EAAE6D,cAAe7D,EAAE8C,uB,kCAKlCjQ,GACR7S,KAAK6P,SAAS,CACVrH,MAAK,EACL8Z,SAAQ,EACRG,UAAS,EACTS,UAAS,M,mCAIJrQ,GACT7S,KAAK6P,SAAS,CAACrH,MAAK,M,4CAGFqK,GAClB7S,KAAK6P,SAAS,CAACyS,SAAQ,M,2CAGNzP,GACjB7S,KAAK6P,SAAS,CAAC4S,UAAS,M,4CAGN5P,GAClB7S,KAAK6P,SAAS,CAACqT,UAAS,M,mCAGfrQ,GAET,GADAA,EAAEyN,iBACiC,KAA/BtgB,KAAKwP,MAAMyQ,gBACXjgB,KAAKof,UAAU,2BACZ,GAA+B,KAA3Bpf,KAAKwP,MAAM2S,YACjBniB,KAAKof,UAAU,mBAEf,CACA,IAAId,EAAM,CACN2B,gBAAgBjgB,KAAKwP,MAAMyQ,gBAC3BkC,YAAYniB,KAAKwP,MAAM2S,YACvBC,eAAejS,KAAO,IAAI2N,KAAK9d,KAAKwP,MAAM4S,iBAAiBhS,OAAO,wBAGtEpQ,KAAK8jB,KAAKxF,M,4CAIGzL,GAElB,GADAA,EAAEyN,iBACyB,KAAxBtgB,KAAKwP,MAAMwO,WACV,GAA0B,KAAtBhe,KAAKwP,MAAMxC,OACXhN,KAAKof,UAAU,4BACZ,GAAyB,KAArBpf,KAAKwP,MAAM6S,MACjBriB,KAAKof,UAAU,aAEf,CACA,IAAId,EAAM,CACNtR,OAAOhN,KAAKwP,MAAMxC,OAClBqV,MAAMriB,KAAKwP,MAAM6S,MACjB9Q,YAAYvR,KAAKwP,MAAMwO,YAG3Bhe,KAAK+jB,aAAazF,QAGvBte,KAAKof,UAAU,c,2CAIFvM,GAEjB,GADAA,EAAEyN,iBAC0B,KAAzBtgB,KAAKwP,MAAM+S,YACV,GAAmC,KAA/BviB,KAAKwP,MAAMoT,gBACX5iB,KAAKof,UAAU,2BACZ,GAAkC,KAA9Bpf,KAAKwP,MAAMqT,eACjB7iB,KAAKof,UAAU,aAEf,CACA,IAAId,EAAM,CACPsE,gBAAgB5iB,KAAKwP,MAAMoT,gBAC1BP,MAAMriB,KAAKwP,MAAMqT,eACjBc,aAAa,CAACA,aAAa3jB,KAAKwP,MAAM+S,cAG1CviB,KAAKgkB,aAAa1F,QAGvBte,KAAKof,UAAU,e,4CAIDvM,GAElB,GADAA,EAAEyN,iBACyB,KAAxBtgB,KAAKwP,MAAMkT,WACV,GAAoC,KAAhC1iB,KAAKwP,MAAMsT,iBACX9iB,KAAKof,UAAU,4BACZ,GAAmC,KAA/Bpf,KAAKwP,MAAMuT,gBACjB/iB,KAAKof,UAAU,0BAEf,CACA,IAAId,EAAM,CACPwE,iBAAiB9iB,KAAKwP,MAAMsT,iBAC3BT,MAAMriB,KAAKwP,MAAMuT,gBACjBa,YAAY,CAACA,YAAY5jB,KAAKwP,MAAMkT,aAGxC1iB,KAAKikB,cAAc3F,QAGxBte,KAAKof,UAAU,c,oCAIT5U,GAAM,IAAD,OACX6U,EAAU1H,SAASC,eAAe,kBACtChI,GAAgBsU,cAAc1Z,GAC7ByB,MAAK,SAAAC,GACFvB,QAAQC,IAAIsB,EAAS1B,MACrB,EAAKqF,SAAS,CACVqO,WAAW,EACXX,IAAK,0BACLD,SAAU,YAEd+B,EAAQJ,QACR,EAAKyE,2BAA2B,EAAKlU,MAAMkT,YAC3C,EAAKyB,2BACNhY,OAAM,SAAAC,GACLzB,QAAQ0B,MAAM+X,W,mCAIT5Z,GAAM,IAAD,OACV6U,EAAU1H,SAASC,eAAe,kBACtChI,GAAgBoU,aAAaxZ,GAC5ByB,MAAK,SAAAC,GACFvB,QAAQC,IAAIsB,EAAS1B,MACrB,EAAKqF,SAAS,CACVqO,WAAW,EACXX,IAAK,0BACLD,SAAU,YAEd+B,EAAQJ,QACR,EAAKwE,0BAA0B,EAAKjU,MAAM+S,aAC1C,EAAK8B,0BACNlY,OAAM,SAAAC,GACLzB,QAAQ0B,MAAM+X,W,mCAIT5Z,GAAM,IAAD,OACV6U,EAAU1H,SAASC,eAAe,kBACtChI,GAAgBmU,aAAavZ,GAC5ByB,MAAK,SAAAC,GACFvB,QAAQC,IAAIsB,EAAS1B,MACrB,EAAKqF,SAAS,CACVqO,WAAW,EACXX,IAAK,0BACLD,SAAU,YAEd+B,EAAQJ,QACR,EAAKsE,0BAA0B,EAAK/T,MAAMwO,YAC1C,EAAKsG,yBACNnY,OAAM,SAAAC,GACLzB,QAAQ0B,MAAM+X,W,2BAIjB5Z,GAAM,IAAD,OACF6U,EAAU1H,SAASC,eAAe,kBACtChI,GAAgBkU,KAAKtZ,GACpByB,MAAK,SAAAC,GACFvB,QAAQC,IAAIsB,EAAS1B,MACrB,EAAKqF,SAAS,CACVqO,WAAW,EACXX,IAAK,0BACLD,SAAU,YAEd+B,EAAQJ,QACR,EAAKtP,mBACL,EAAK4U,iBACNpY,OAAM,SAAAC,GACLzB,QAAQ0B,MAAM+X,W,oCAKlBpkB,KAAK6P,SAAS,CACVoQ,gBAAgB,GAChBkC,YAAY,GACZC,eAAe,IAAItE,KACnBtV,MAAK,M,4CAKTxI,KAAK6P,SAAS,CACV7C,OAAO,GACPqV,MAAM,GACNC,SAAQ,M,6CAKZtiB,KAAK6P,SAAS,CACV+S,gBAAgB,GAChBC,eAAe,GACfJ,UAAS,M,8CAKbziB,KAAK6P,SAAS,CACViT,iBAAiB,GACjBC,gBAAgB,GAChBG,UAAS,M,uCAIArQ,GACblI,QAAQC,IAAIiI,GACZ7S,KAAK6P,SAAS,CAACuS,eAAe,IAAItE,KAAKjL,O,mCAG9BA,GACTlI,QAAQC,IAAIiI,EAAEiN,QACd9f,KAAK6P,SAAL,eACKgD,EAAEiN,OAAOnY,KAAMkL,EAAEiN,OAAOtR,U,+BAK7B,OACI,kBAACC,GAAA,EAAD,KACI,kBAAC0G,GAAA,EAAD,CACImK,UAAU,oBACVja,MAAM,aAEV,kBAACyM,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CACIC,WAAS,EACT5M,QAAS,EACTof,KAAK,QAEL,kBAACzS,GAAA,EAAD,CACIvM,UAAWhI,GAAUmH,KACrBA,MAAI,EACJ2S,GAAI,GACJP,GAAI,GACJE,GAAI,IAEJ,kBAACyI,GAAA,EAAD,CAAala,UAAWhI,GAAUa,aAC9B,kBAACshB,GAAA,EAAD,CAAYpV,GAAG,qCAAf,YACA,kBAACqV,GAAA,EAAD,CACAC,QAAM,EACNrR,MAAOxO,KAAKwP,MAAMwO,WAClB3B,SAAUrc,KAAK4b,aAAa6I,KAAKzkB,MACjC+f,WAAY,CACRpY,KAAM,WACN4C,GAAI,YAER2R,WAAS,EACT7S,MAAO,CAACrL,MAAM,UAEd,4BAAQuQ,aAAW,OAAOC,MAAM,KAC/BxO,KAAK0kB,qBAIV,kBAAChF,GAAA,EAAD,KACA,kBAAC1Z,EAAA,EAAD,CAAQ4B,QAAQ,YAAYnJ,MAAM,YAAY4K,MAAO,CAAC8F,UAAU,GAAGwO,WAAW,IAC9EpU,QAASvJ,KAAK2kB,aAAaF,KAAKzkB,OADhC,WAMJ,kBAAC+R,GAAA,EAAD,CACIvM,UAAWhI,GAAUmH,KACrBA,MAAI,EACJ2S,GAAI,GACJP,GAAI,GACJE,GAAI,IAEJ,kBAACyI,GAAA,EAAD,CAAala,UAAWhI,GAAUa,aAC9B,kBAACshB,GAAA,EAAD,CAAYpV,GAAG,qCAAf,yBACA,kBAACqV,GAAA,EAAD,CACAC,QAAM,EACNrR,MAAOxO,KAAKwP,MAAM+S,YAClBlG,SAAUrc,KAAK4kB,sBAAsBH,KAAKzkB,MAC1C+f,WAAY,CACRpY,KAAM,YACN4C,GAAI,aAER2R,WAAS,EACT7S,MAAO,CAACrL,MAAM,UAEd,4BAAQuQ,aAAW,OAAOC,MAAM,KAC/BxO,KAAK6kB,8BAGV,kBAACnF,GAAA,EAAD,KACA,kBAAC1Z,EAAA,EAAD,CAAQ4B,QAAQ,YAAYnJ,MAAM,YAAY4K,MAAO,CAAC8F,UAAU,GAAGwO,WAAW,IAC9EpU,QAASvJ,KAAK8kB,sBAAsBL,KAAKzkB,OADzC,WAMJ,kBAAC+R,GAAA,EAAD,CACIvM,UAAWhI,GAAUmH,KACrBA,MAAI,EACJ2S,GAAI,GACJP,GAAI,GACJE,GAAI,IAEJ,kBAACyI,GAAA,EAAD,CAAala,UAAWhI,GAAUa,aAC9B,kBAACshB,GAAA,EAAD,CAAYpV,GAAG,qCAAf,YACA,kBAACqV,GAAA,EAAD,CACAC,QAAM,EACNrR,MAAOxO,KAAKwP,MAAMkT,WAClBrG,SAAUrc,KAAK+kB,qBAAqBN,KAAKzkB,MACzC+f,WAAY,CACRpY,KAAM,WACN4C,GAAI,YAER2R,WAAS,EACT7S,MAAO,CAACrL,MAAM,UAEd,4BAAQuQ,aAAW,OAAOC,MAAM,KAC/BxO,KAAKglB,6BAGV,kBAACtF,GAAA,EAAD,KACA,kBAAC1Z,EAAA,EAAD,CAAQ4B,QAAQ,YAAYnJ,MAAM,YAAY4K,MAAO,CAAC8F,UAAU,GAAGwO,WAAW,IAC9EpU,QAASvJ,KAAKilB,qBAAqBR,KAAKzkB,OADxC,WAMJ,kBAAC+R,GAAA,EAAD,CACIvM,UAAWhI,GAAUmH,KACrBA,MAAI,EACJ2S,GAAI,GACJP,GAAI,GACJE,GAAI,IAEJ,kBAACyI,GAAA,EAAD,CAAala,UAAWhI,GAAUa,aAC9B,kBAACshB,GAAA,EAAD,CAAYpV,GAAG,qCAAf,aACA,kBAACqV,GAAA,EAAD,CACAC,QAAM,EACNrR,MAAOxO,KAAKwP,MAAMyT,YAClB5G,SAAUrc,KAAKklB,sBAAsBT,KAAKzkB,MAC1C+f,WAAY,CACRpY,KAAM,YACN4C,GAAI,aAER2R,WAAS,EACT7S,MAAO,CAACrL,MAAM,UAEd,4BAAQuQ,aAAW,OAAOC,MAAM,KAC/BxO,KAAKmlB,8BAGV,kBAACzF,GAAA,EAAD,KACA,kBAAC1Z,EAAA,EAAD,CAAQ4B,QAAQ,YAAYnJ,MAAM,YAAY4K,MAAO,CAAC8F,UAAU,GAAGwO,WAAW,IAC9EpU,QAASvJ,KAAKolB,sBAAsBX,KAAKzkB,OADzC,YASR,kBAACqlB,GAAA,EAAD,CAAQ7c,KAAMxI,KAAKwP,MAAMhH,KAAMD,QAASvI,KAAKslB,YAAYb,KAAKzkB,MAAOulB,kBAAgB,qBACrF,0BAAMxK,SAAU/a,KAAK6b,aAAa4I,KAAKzkB,MAAOuf,YAAU,EAACC,aAAa,OAClE,kBAACgG,GAAA,EAAD,CAAajb,GAAG,qBAAhB,YACA,kBAACkb,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,sKAIA,kBAACzJ,GAAA,EAAD,CACI0J,WAAS,EACT/nB,OAAO,QACP2M,GAAG,kBACH5C,KAAK,kBACLuL,MAAM,SACN/E,KAAK,OACLK,MAAOxO,KAAKwP,MAAMyQ,gBAClB5D,SAAUrc,KAAK4lB,aAAanB,KAAKzkB,MACjCkc,WAAS,IAEb,kBAACD,GAAA,EAAD,CACIre,OAAO,QACP2M,GAAG,cACH5C,KAAK,cACLuL,MAAM,cACN/E,KAAK,OACLK,MAAOxO,KAAKwP,MAAM2S,YAClBjG,WAAS,EACTG,SAAUrc,KAAK4lB,aAAanB,KAAKzkB,QAEjC,kBAAC0hB,GAAD,CAAmBI,KAAM9hB,KAAKwP,MAAM4S,eAAgBL,iBAAkB/hB,KAAK+hB,oBAE/E,kBAAC8D,GAAA,EAAD,KACA,kBAAC7f,EAAA,EAAD,CAAQ4B,QAAQ,YAAanJ,MAAM,UACpC0P,KAAK,UADJ,WAKA,kBAACnI,EAAA,EAAD,CAAQuD,QAASvJ,KAAKslB,YAAYb,KAAKzkB,MAAOvB,MAAM,WAApD,eAQJ,kBAAC4mB,GAAA,EAAD,CAAQ7c,KAAMxI,KAAKwP,MAAM8S,QAAS/Z,QAASvI,KAAKslB,YAAYb,KAAKzkB,MAAOulB,kBAAgB,qBACxF,0BAAMxK,SAAU/a,KAAK8lB,sBAAsBrB,KAAKzkB,MAAOuf,YAAU,EAACC,aAAa,OAC3E,kBAACgG,GAAA,EAAD,CAAajb,GAAG,qBAAhB,0BACA,kBAACkb,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,sDAGA,kBAACzJ,GAAA,EAAD,CACI0J,WAAS,EACT/nB,OAAO,QACP2M,GAAG,SACH5C,KAAK,SACLuL,MAAM,SACN/E,KAAK,OACLK,MAAOxO,KAAKwP,MAAMxC,OAClBqP,SAAUrc,KAAK4lB,aAAanB,KAAKzkB,MACjCkc,WAAS,IAEb,kBAACD,GAAA,EAAD,CACI0J,WAAS,EACT/nB,OAAO,QACP2M,GAAG,QACH5C,KAAK,QACLuL,MAAM,QACN/E,KAAK,SACLK,MAAOxO,KAAKwP,MAAM6S,MAClBhG,SAAUrc,KAAK4lB,aAAanB,KAAKzkB,MACjCkc,WAAS,KAGb,kBAAC2J,GAAA,EAAD,KACA,kBAAC7f,EAAA,EAAD,CAAQ4B,QAAQ,YAAanJ,MAAM,UACpC0P,KAAK,UADJ,WAKA,kBAACnI,EAAA,EAAD,CAAQuD,QAASvJ,KAAKslB,YAAYb,KAAKzkB,MAAOvB,MAAM,WAApD,eAQJ,kBAAC4mB,GAAA,EAAD,CAAQ7c,KAAMxI,KAAKwP,MAAMiT,SAAUla,QAASvI,KAAKslB,YAAYb,KAAKzkB,MAAOulB,kBAAgB,qBACzF,0BAAMxK,SAAU/a,KAAK+lB,qBAAqBtB,KAAKzkB,MAAOuf,YAAU,EAACC,aAAa,OAC1E,kBAACgG,GAAA,EAAD,CAAajb,GAAG,qBAAhB,YACA,kBAACkb,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,wCAGA,kBAACzJ,GAAA,EAAD,CACI0J,WAAS,EACT/nB,OAAO,QACP2M,GAAG,kBACH5C,KAAK,kBACLuL,MAAM,WACN/E,KAAK,OACLK,MAAOxO,KAAKwP,MAAMoT,gBAClBvG,SAAUrc,KAAK4lB,aAAanB,KAAKzkB,MACjCkc,WAAS,IAEb,kBAACD,GAAA,EAAD,CACIre,OAAO,QACP2M,GAAG,iBACH5C,KAAK,iBACLuL,MAAM,QACN/E,KAAK,SACLK,MAAOxO,KAAKwP,MAAMqT,eAClBxG,SAAUrc,KAAK4lB,aAAanB,KAAKzkB,MACjCkc,WAAS,KAGb,kBAAC2J,GAAA,EAAD,KACA,kBAAC7f,EAAA,EAAD,CAAQ4B,QAAQ,YAAanJ,MAAM,UACpC0P,KAAK,UADJ,WAKA,kBAACnI,EAAA,EAAD,CAAQuD,QAASvJ,KAAKslB,YAAYb,KAAKzkB,MAAOvB,MAAM,WAApD,eAQJ,kBAAC4mB,GAAA,EAAD,CAAQ7c,KAAMxI,KAAKwP,MAAM0T,SAAU3a,QAASvI,KAAKslB,YAAYb,KAAKzkB,MAAOulB,kBAAgB,qBACzF,0BAAMxK,SAAU/a,KAAKgmB,sBAAsBvB,KAAKzkB,MAAOuf,YAAU,EAACC,aAAa,OAC3E,kBAACgG,GAAA,EAAD,CAAajb,GAAG,qBAAhB,aACA,kBAACkb,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,yCAGA,kBAACzJ,GAAA,EAAD,CACI0J,WAAS,EACT/nB,OAAO,QACP2M,GAAG,mBACH5C,KAAK,mBACLuL,MAAM,YACN/E,KAAK,OACLK,MAAOxO,KAAKwP,MAAMsT,iBAClBzG,SAAUrc,KAAK4lB,aAAanB,KAAKzkB,MACjCkc,WAAS,IAEb,kBAACD,GAAA,EAAD,CACIre,OAAO,QACP2M,GAAG,kBACH5C,KAAK,kBACLuL,MAAM,QACN/E,KAAK,SACLK,MAAOxO,KAAKwP,MAAMuT,gBAClB1G,SAAUrc,KAAK4lB,aAAanB,KAAKzkB,MACjCkc,WAAS,KAGb,kBAAC2J,GAAA,EAAD,KACA,kBAAC7f,EAAA,EAAD,CAAQ4B,QAAQ,YAAanJ,MAAM,UACpC0P,KAAK,UADJ,WAKA,kBAACnI,EAAA,EAAD,CAAQuD,QAASvJ,KAAKslB,YAAYb,KAAKzkB,MAAOvB,MAAM,WAApD,gBAOR,kBAAC0e,GAAD,CAAqB5C,QAASva,KAAKwP,MAAM0O,UAAWZ,SAAUtd,KAAKwP,MAAM8N,SAAUC,IAAKvd,KAAKwP,MAAM+N,W,GA1qB7E9M,aC5BhCjT,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,CACJ7K,gBAAiB8E,EAAME,QAAQC,WAAWC,KAC1CkM,UAAW,OACXzK,cAAe7B,EAAMoC,QAAQ,GAC7BR,WAAY5B,EAAMoC,QAAQ,QAoBf6gB,GAhBM,WACnB,IAAMrgB,EAAUpI,KAEhB,OACE,kBAAC,GAAD,CACEgI,UAAWI,EAAQmD,KACnB1D,MAAM,YAEN,kBAACiL,GAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC,GAAD,S,qBCRO2V,G,oLAhBPna,GAAsBoa,SACtB/oB,OAAOC,SAAWyL,oB,+BAGlB,OACI,oCACI,yBAAKtD,UAAU,YAAY6D,MAAO,CAACgN,UAAU,SAAUlH,UAAU,KAC7D,2EACA,uEACA,kBAAC,KAAD,CAAa5Q,SAAS,gB,GAXZkS,a,2DCCxBjT,GAAYC,YAAW,CACzBsL,KAAM,CACF7K,gBAAiB,MACjBO,MAAO,SAAAmK,GAAK,OAAIA,EAAMnK,QAE1BJ,YAAa,CACTC,QAAS,QACTN,MAAO,QACPH,QAAS,iBACTU,SAAU,OACVC,WAAY,MACZC,MAAO,UACPC,eAAgB,OAChBC,eAAgB,gBAChBC,OAAQ,oBACRC,aAAc,SACdC,WAAY,wEAIL,SAASsnB,GAAaxd,GACjC,IAAMhD,EAAUpI,GAAUoL,GAE1B,OADA+B,QAAQC,IAAIhC,GACL,2BAAOuF,KAAK,OAAO3I,UAAWI,EAAQvH,YAAasJ,KAAMiB,EAAMjB,KAAM0B,MAAO,CAAErL,MAAM,OAC3FuM,GAAI3B,EAAM2B,GAAI8R,SAAU,SAACxJ,GAAD,OAAOjK,EAAMyd,aAAaxT,IAAIrE,MAAO5F,EAAM4F,QCEvE,IAAM8X,GAAYlL,GAASmL,iBAAiB,UACvBC,G,oDACjB,WAAY5d,GAAQ,IAAD,8BACf,cAAMA,IAiLV6d,WAAahpB,aAAW,SAACuF,GAAD,MAAY,CAChC+F,KAAM,CACF7K,gBAAiB,QACjBoR,UAAW,OACXzK,cAAe7B,EAAMoC,QAAQ,GAC7BR,WAAY5B,EAAMoC,QAAQ,GAC1BoG,YAAa,IAEjBkb,MAAM,gBACC1jB,EAAMiB,YAEbR,MAAO,CACH5F,QAASmF,EAAMoC,QAAQ,GACvBiR,UAAW,SACX5X,MAAOuE,EAAME,QAAQY,KAAKD,WAE9BxF,YAAa,CACTC,QAAS,QACTN,MAAO,QACPH,QAAS,iBACTU,SAAU,OACVC,WAAY,MACZC,MAAO,UACPC,eAAgB,OAChBC,eAAgB,gBAChBC,OAAQ,oBACRC,aAAc,SACdC,WAAY,0EA7MD,EAgNnB6nB,eAAe,SAAC9T,GACZyF,MAAMzF,IA/MN,EAAKrD,MAAQ,CACToX,aAAc,GACdC,UAAW,GACXhgB,MAAO,GACPigB,WAAY,GACZC,SAAS,EACT5K,WAAY,GACZ1K,eAAgB,GAChBD,cAAe,GACfJ,iBAAkB,GAClB8M,WAAW,EACXX,IAAK,GACLD,SAAU,QAdC,E,gEAmBf,IACI0J,EAAW,KACA,WAFA5L,GAASmL,iBAAiB,YAGrCS,EAAW5L,GAASmL,iBAAiB,MACrCvmB,KAAKinB,iBAAiBD,GACtBhnB,KAAKknB,0BAA0BF,GAC/BhnB,KAAKmnB,wBAAwBH,IAGjCrc,QAAQC,IAAI,WAAa0b,IACzB3b,QAAQC,IAAI,OAASoc,K,uCAGRzc,GAAK,IAAD,OACjBqF,GAAgBwX,SAAS7c,GACpB0B,MAAK,SAAAC,GACFvB,QAAQC,IAAIsB,EAAS1B,MACrB,EAAKqF,SAAS,CAAE+W,aAAc1a,EAAS1B,OACvC,EAAKqF,SAAS,CACV4B,eAAgB,EAAKjC,MAAMoX,aAAanV,eACxCD,cAAe,EAAKhC,MAAMoX,aAAapV,cACvCJ,iBAAkB,EAAK5B,MAAMoX,aAAaxV,sBAE/CjF,OACC,SAAAC,GACIzB,QAAQ0B,MAAMD,Q,gDAKJ7B,GAAK,IAAD,OAC1BqF,GAAgByX,kBAAkB9c,GAC7B0B,MAAK,SAAAC,GACFvB,QAAQ2c,KAAK,8BACb3c,QAAQC,IAAIsB,EAAS1B,MACrB,EAAKqF,SAAS,CAAEgX,UAAW3a,EAAS1B,OACpC+c,YAAW,WAAQ5c,QAAQC,IAAI,EAAK4E,MAAMoX,aAAaC,aAAc,KACrE,EAAKW,kBAAkBtb,EAAS1B,SACjC2B,OACC,SAAAC,GACIzB,QAAQ0B,MAAMD,Q,8CAKN7B,GAAK,IAAD,OACxBqF,GAAgB6X,mBAAmBld,GAC9B0B,MAAK,SAAAC,GACFvB,QAAQ2c,KAAK,4BACb3c,QAAQC,IAAIsB,EAAS1B,MACrB,EAAKqF,SAAS,CAAEiX,WAAY5a,EAAS1B,UACtC2B,OACC,SAAAC,GACIzB,QAAQ0B,MAAMD,Q,wCAOZsb,GACd,IACIC,EADcD,EACQE,QAAO,SAACC,EAAKC,GAcnC,OAbAD,EAAIC,EAAKC,WAAaF,EAAIC,EAAKC,YAAc,GACxCF,EAAIC,EAAKC,WAAWC,SAASF,EAAKlE,cACnCiE,EAAIC,EAAKC,WAAWpb,KACf,CACG,YAAemb,EAAKlE,YACpB,UAAakE,EAAKG,UAClB,gBAAmBH,EAAKlF,gBACxB,OAAUkF,EAAKI,OACf,UAAaJ,EAAKC,UAClB,sBAAyBD,EAAKK,wBAInCN,IACR,IAEHld,QAAQ2c,KAAK,cACb3c,QAAQC,IAAI+c,GACZ,IAAIS,EAAS,GACb,IAAK,IAAInmB,KAAK0lB,EACVS,EAAOzb,KAAK,CAAC1K,EAAG0lB,EAAU1lB,KAE9B0I,QAAQC,IAAIwd,GACZpoB,KAAK6P,SAAS,CAAEhJ,MAAOuhB,M,oCAIbvB,GACV,IAAIuB,EAAS,GACb,IAAK,IAAInmB,KAAK4kB,EACVuB,EAAOzb,KAAK,CAAC1K,EAAG4kB,EAAU5kB,KAE9B0I,QAAQC,IAAIwd,GACZpoB,KAAK6P,SAAS,CAAEhJ,MAAOuhB,M,mCAIdvV,GAET,GADAA,EAAEyN,iBACgC,KAA9BtgB,KAAKwP,MAAMiC,eACXzR,KAAKof,UAAU,uBACZ,GAAiC,KAA7Bpf,KAAKwP,MAAMgC,cAClBxR,KAAKof,UAAU,sBACZ,GAAoC,KAAhCpf,KAAKwP,MAAM4B,iBAClBpR,KAAKof,UAAU,2BACd,CACD,IAAMiJ,EAAUjN,GAASmL,iBAAiB,MACtCjI,EAAM,CACN7M,eAAgBzR,KAAKwP,MAAMiC,eAC3BD,cAAexR,KAAKwP,MAAMgC,cAC1BJ,iBAAkBpR,KAAKwP,MAAM4B,iBAC7B7G,GAAI8d,GAGRroB,KAAKsoB,OAAOD,EAAS/J,M,6BAItB/T,EAAIC,GAAO,IAAD,OACT6U,EAAU1H,SAASC,eAAe,kBACtChI,GAAgB2Y,aAAahe,EAAIC,GAC5ByB,MAAK,SAAAC,GACFvB,QAAQC,IAAIsB,GACZ,EAAK2D,SAAS,CACVqO,WAAW,EACXX,IAAK,4BACLD,SAAU,YAEd+B,EAAQJ,WACT9S,OAAM,SAAAC,GACLzB,QAAQ0B,MAAMD,GACd,EAAKyD,SAAS,CACVqO,WAAW,EACXX,IAAKnR,EACLkR,SAAU,UAEd+B,EAAQJ,a,gCAIVqE,GACN,IAAIjE,EAAU1H,SAASC,eAAe,kBACtC5X,KAAK6P,SAAS,CACVqO,WAAW,EACXX,IAAK+F,EAAQ,0BACbhG,SAAU,YAEd+B,EAAQJ,U,mCAGCpM,GACTlI,QAAQC,IAAIiI,EAAEiN,QACd9f,KAAK6P,SAAL,eAAiBgD,EAAEiN,OAAOnY,KAAOkL,EAAEiN,OAAOtR,U,+BAwC1C,IAAMga,EAASlC,GACT1gB,EAAU5F,KAAKymB,WACrB,OACI,kBAAC,GAAD,CACIjhB,UAAWI,EAAQmD,KACnB1D,MAAM,YAEN,kBAACiL,GAAA,EAAD,CAAWC,UAAU,GACjB,kBAACpJ,EAAA,EAAD,CAAKqJ,GAAI,GACL,kBAAC/B,GAAA,EAAD,CAAMjJ,UAAWM,YAAKF,EAAQ8gB,OAAQrd,MAAO,CAAExL,QAAS,KACpD,kBAACsX,GAAA,EAAD,CACImK,UAAU,gDACVja,MAAkB,WAAXmjB,EAAsB,iBAAmB,oBAEpD,kBAAC1gB,EAAA,EAAD,MACa,QAAX0gB,GACE,kBAAC,KAAD,CACI9N,cAAe,CACXjJ,eAAgB,GAChBD,cAAe,GACfJ,iBAAkB,GAClBG,YAAa,EACbkX,WAAW,GACXC,MAAM,GACNC,IAAI,GACJC,IAAI,GACJC,KAAK,GACLC,SAAS,GACTC,WAAW,EACXC,oBAAoB,EACpBC,MAAM,EACNC,MAAM,EACNC,oBAAoB,GACpBC,uBAAuB,GACvBC,iBAAiB,GACjBC,iBAAiB,GACjBC,sBAAsB,GACtBC,SAAQ,EACRC,IAAI,GACJhJ,aAAa,IAAI3C,KACjB4C,UAAU,IAAI5C,MAElBnD,iBAAkBC,OAAaC,MAAM,CACjCpJ,eAAgBmJ,OAAaE,IAAI,KAAKZ,SAAS,wBAC/C1I,cAAeoJ,OAAaE,IAAI,KAAKZ,SAAS,uBAC9C9I,iBAAkBwJ,OAAaE,IAAI,KAAKZ,SAAS,mCAErDa,SAAU,SAACC,EAAQC,GACftQ,QAAQC,IAAIoQ,GAEZpL,GAAgBkU,KAAK9I,GAChB/O,MAAK,SAAAC,GACFvB,QAAQC,IAAIsB,EAAS1B,MACrBpN,OAAOC,SAAW,6BAA+B6O,EAAS1B,KAAKD,MAChE4B,OACC,SAAAC,GACIzB,QAAQ0B,MAAMD,SAM7B,gBACGsP,EADH,EACGA,OACAC,EAFH,EAEGA,WACAC,EAHH,EAGGA,aACAC,EAJH,EAIGA,aACAC,GALH,EAIgB4N,cAJhB,EAKG5N,sBACAC,EANH,EAMGA,QACAf,EAPH,EAOGA,OAPH,OASG,0BAAMD,SAAUc,GACZ,kBAAC9J,GAAA,EAAD,CACIC,WAAS,EACT5M,QAAS,EACTof,KAAK,QAEL,kBAACzS,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACI5P,MAAOlP,QAAQ4e,EAAQtK,gBAAkBiK,EAAOjK,gBAChDyK,WAAS,EACTC,WAAYJ,EAAQtK,gBAAkBiK,EAAOjK,eAC7CyB,MAAM,oBACNtV,OAAO,QACP+J,KAAK,iBACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAOvJ,eACd7J,QAAQ,aAEZ,kBAACqU,GAAA,EAAD,CACI5P,MAAOlP,QAAQ4e,EAAQvK,eAAiBkK,EAAOlK,eAC/C0K,WAAS,EACTC,WAAYJ,EAAQvK,eAAiBkK,EAAOlK,cAC5C0B,MAAM,oBACNtV,OAAO,QACP+J,KAAK,gBACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAOxJ,cACd5J,QAAQ,aAEZ,kBAACqU,GAAA,EAAD,CACI5P,MAAOlP,QAAQ4e,EAAQ3K,kBAAoBsK,EAAOtK,kBAClD8K,WAAS,EACTC,WAAYJ,EAAQ3K,kBAAoBsK,EAAOtK,iBAC/C8B,MAAM,0BACNtV,OAAO,QACP+J,KAAK,mBACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAO5J,iBACdxJ,QAAQ,eAIpB,kBAACmK,GAAA,EAAD,CACIC,WAAS,EACT5M,QAAS,EACTof,KAAK,QAEL,kBAACzS,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACIC,WAAS,EACThJ,MAAM,iBACNtV,OAAO,QACP+J,KAAK,aACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAOyN,WACd7gB,QAAQ,cAGhB,kBAACmK,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACIC,WAAS,EACThJ,MAAM,QACNtV,OAAO,QACP+J,KAAK,QACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAO0N,MACd9gB,QAAQ,cAGhB,kBAACmK,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACIC,WAAS,EACThJ,MAAM,MACNtV,OAAO,QACP+J,KAAK,MACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAO2N,IACd/gB,QAAQ,cAGhB,kBAACmK,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAGJ,kBAACgF,GAAA,EAAD,CACIC,WAAS,EACThJ,MAAM,MACNtV,OAAO,QACP+J,KAAK,MACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAO4N,IACdhhB,QAAQ,cAGhB,kBAACmK,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAGJ,kBAACgF,GAAA,EAAD,CACIC,WAAS,EACThJ,MAAM,OACNtV,OAAO,QACP+J,KAAK,OACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAO6N,KACdjhB,QAAQ,WACR4U,UAAQ,KAGhB,kBAACzK,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAGJ,kBAACgF,GAAA,EAAD,CACIC,WAAS,EACThJ,MAAM,WACNtV,OAAO,QACP+J,KAAK,WACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAO8N,SACdlhB,QAAQ,cAGhB,kBAACmK,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACyI,GAAA,EAAD,CAAarW,MAAO,CAAErL,MAAO,QAAU4J,QAAQ,WAAWpC,UAAWI,EAAQvH,aACzE,kBAACshB,GAAA,EAAD,CAAYpV,GAAG,qCAAf,cACA,kBAACqV,GAAA,EAAD,CACI+J,QAAQ,oCACRpf,GAAG,8BACHiE,MAAOwM,EAAO+N,WACd1M,SAAUT,EACV1I,MAAM,aACNgJ,WAAS,EACTte,OAAO,SAEP,kBAACgsB,GAAA,EAAD,CAAUpb,MAAO,GAAjB,sBAMZ,kBAACuD,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACyI,GAAA,EAAD,CAAarW,MAAO,CAAErL,MAAO,QAAU4J,QAAQ,WAAWpC,UAAWI,EAAQvH,aACzE,kBAACshB,GAAA,EAAD,CAAYpV,GAAG,qCAAf,uBACA,kBAACqV,GAAA,EAAD,CACI+J,QAAQ,oCACRpf,GAAG,8BACHiE,MAAOwM,EAAOgO,oBACd3M,SAAUT,EACV1I,MAAM,sBACNgJ,WAAS,EACTte,OAAO,SAEP,kBAACgsB,GAAA,EAAD,CAAUpb,MAAO,GAAjB,uBAMhB,kBAACrH,EAAA,EAAD,CAAKoV,GAAI,EAAGlT,MAAO,IACf,8BAAUA,MAAO,CAAExK,aAAc,EAAG2C,YAAa,sBAAuB3D,QAAS,IAC7E,4BAAQwL,MAAO,CAAEzL,OAAQ,IAAzB,uBACA,kBAACmU,GAAA,EAAD,CACIC,WAAS,EACT5M,QAAS,EACTof,KAAK,QAEL,kBAACzS,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACIC,WAAS,EACThJ,MAAM,QACNtV,OAAO,QACP+J,KAAK,QACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAOiO,MACdrhB,QAAQ,WACRyB,MAAO,CAAEzL,OAAQ,OAGzB,kBAACmU,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACIC,WAAS,EACThJ,MAAM,QACNtV,OAAO,QACP+J,KAAK,QACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAOkO,MACdthB,QAAQ,WACRyB,MAAO,CAAEzL,OAAQ,UAOrC,kBAACuJ,EAAA,EAAD,CAAKoV,GAAI,EAAGlT,MAAO,IACf,8BAAUA,MAAO,CAAExK,aAAc,EAAG2C,YAAa,sBAAuB3D,QAAS,IAC7E,4BAAQwL,MAAO,CAAEzL,OAAQ,IAAzB,iBACA,kBAACmU,GAAA,EAAD,CACIC,WAAS,EACT5M,QAAS,EACTof,KAAK,QAEL,kBAACzS,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACIC,WAAS,EACThJ,MAAM,sBACNtV,OAAO,QACP+J,KAAK,sBACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAOmO,oBACdvhB,QAAQ,cAGhB,kBAACmK,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACIC,WAAS,EACThJ,MAAM,yBACNtV,OAAO,QACP+J,KAAK,yBACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAOoO,uBACdxhB,QAAQ,cAGhB,kBAACmK,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACIC,WAAS,EACThJ,MAAM,mBACNtV,OAAO,QACP+J,KAAK,mBACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAOqO,iBACdzhB,QAAQ,cAGhB,kBAACmK,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACIC,WAAS,EACThJ,MAAM,mBACNtV,OAAO,QACP+J,KAAK,mBACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAOsO,iBACd1hB,QAAQ,WACRmY,WAAY,CAAE8J,UAAW,OAGjC,kBAAC9X,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACIC,WAAS,EACThJ,MAAM,wBACNtV,OAAO,QACP+J,KAAK,wBACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAOuO,sBACd3hB,QAAQ,iBAM5B,kBAACmK,GAAA,EAAD,CACIC,WAAS,EACT5M,QAAS,EACTof,KAAK,QAEL,kBAACzS,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAAC6S,GAAA,EAAD,CACItb,MAAOwM,EAAOwO,QACdO,QAAS,kBAAC1I,GAAA,EAAD,CAAU1Z,KAAK,UAAUlJ,MAAM,UAAU6iB,QAAStG,EAAOwO,QAClEnN,SAAUT,IAEV1I,MAAM,4CACN8W,eAAe,YAM3B,kBAAC7iB,EAAA,EAAD,CAAKoV,GAAI,EAAGhS,GAAG,cAAclB,MAAS2R,EAAOwO,QAA0B,GAAjB,CAAClrB,QAAQ,SAC3D,8BAAU+K,MAAO,CAAExK,aAAc,EAAG2C,YAAa,sBAAuB3D,QAAS,IAC7E,4BAAQwL,MAAO,CAAEzL,OAAQ,IAAzB,YACA,kBAACmU,GAAA,EAAD,CACIC,WAAS,EACT5M,QAAS,EACTof,KAAK,QAEL,kBAACzS,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACIC,WAAS,EACThJ,MAAM,WACNtV,OAAO,QACP+J,KAAK,MACLyU,OAAQT,EACRU,SAAUT,EACVzN,KAAK,OACLK,MAAOwM,EAAOyO,IACd7hB,QAAQ,cAGhB,kBAACmK,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACyI,GAAA,EAAD,CAAarW,MAAO,CAAErL,MAAO,QAAU4J,QAAQ,WAAWpC,UAAWI,EAAQvH,aACzE,kBAACshB,GAAA,EAAD,CAAYpV,GAAG,qCAAf,uBACA,kBAACqV,GAAA,EAAD,CACI+J,QAAQ,oCACRpf,GAAG,8BACHiE,MAAO,EACP6N,SAAUT,EACV1I,MAAM,0BACNgJ,WAAS,EACTte,OAAO,SAEP,kBAACgsB,GAAA,EAAD,CAAUpb,MAAM,IACZ,qCAEJ,kBAACob,GAAA,EAAD,CAAUpb,MAAO,GAAjB,cACA,kBAACob,GAAA,EAAD,CAAUpb,MAAO,GAAjB,cACA,kBAACob,GAAA,EAAD,CAAUpb,MAAO,GAAjB,iBAIZ,kBAACuD,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACI1R,GAAG,eACH2I,MAAM,eACN/E,KAAK,OACL+R,aAAc/P,KAAO,IAAI2N,KAAK9C,EAAOyF,eAAerQ,OAAO,cAC3D5K,UAAWI,EAAQ8X,UACnByC,gBAAiB,CACbC,QAAQ,MAIpB,kBAACrO,GAAA,EAAD,CACIvM,UAAWI,EAAQjB,KACnBA,MAAI,EACJ2S,GAAI,EACJP,GAAI,EACJE,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACI1R,GAAG,YACH2I,MAAM,YACN/E,KAAK,OACL+R,aAAc/P,KAAO,IAAI2N,KAAK9C,EAAO0F,YAAYtQ,OAAO,cACxD5K,UAAWI,EAAQ8X,UACnByC,gBAAiB,CACbC,QAAQ,SAOhC,kBAACjZ,EAAA,EAAD,CAAKoV,GAAI,GACL,kBAACvW,EAAA,EAAD,CACIvH,MAAM,UACN+d,SAAUV,EACVI,WAAS,EACT7V,KAAK,QACL8H,KAAK,SACLvG,QAAQ,aANZ,gBAeJ,WAAX4gB,GAAuBA,EAAO3Q,OAAS,GACxC,oCACI,kBAACnQ,EAAA,EAAD,CAAYE,QAAQ,QAAQsK,cAAY,GACpC,0BAAM6I,SAAU/a,KAAK6b,aAAa4I,KAAKzkB,MAAOuf,YAAU,EAACC,aAAa,OAClE,kBAACyK,GAAA,EAAD,CAAW5gB,MAAO,CAAE/K,QAAS,mBAAoBV,OAAQ,IAAMsI,UAAU,UAAzE,mBACA,kBAACkgB,GAAD,CAAc/c,MAAO,CAAE/K,QAAS,oBAAsBkQ,MAAOxO,KAAKwP,MAAMiC,eAAgB9J,KAAM,iBAAkB4C,GAAI,iBAChH8b,aAAcrmB,KAAKqmB,aAAa5B,KAAKzkB,QAEzC,kBAACiqB,GAAA,EAAD,CAAW5gB,MAAO,CAAE/K,QAAS,mBAAoBV,OAAQ,IAAMsI,UAAU,UAAzE,kBACA,kBAACkgB,GAAD,CAAc5X,MAAOxO,KAAKwP,MAAMgC,cAAe7J,KAAM,gBAAiB4C,GAAI,gBACtE8b,aAAcrmB,KAAKqmB,aAAa5B,KAAKzkB,QAEzC,kBAACiqB,GAAA,EAAD,CAAW5gB,MAAO,CAAE/K,QAAS,mBAAoBV,OAAQ,IAAMsI,UAAU,UAAzE,wBACA,kBAACkgB,GAAD,CAAc5X,MAAOxO,KAAKwP,MAAM4B,iBAAkBzJ,KAAM,mBAAoB4C,GAAI,mBAC5E8b,aAAcrmB,KAAKqmB,aAAa5B,KAAKzkB,QAEzC,kBAAC,GAAD,CAAc6G,MAAO7G,KAAKwP,MAAM3I,MAAOigB,WAAY9mB,KAAKwP,MAAMsX,aAC9D,kBAAC/U,GAAA,EAAD,CAAMC,WAAS,EAAC5M,QAAS,EAAGiE,MAAO,CAAEzL,OAAQ,KACzC,kBAACmU,GAAA,EAAD,CAAMpN,MAAI,EAACsS,GAAI,GAAIF,GAAI,EAAGO,GAAI,GAC1B,kBAACtR,EAAA,EAAD,CAAQ4B,QAAQ,YAAYnJ,MAAM,UAAU0P,KAAK,UAAjD,WACA,kBAACnI,EAAA,EAAD,CAAQ4B,QAAQ,YAAYnJ,MAAM,YAAY4K,MAAO,CAAEsU,WAAY,GAC/DpU,QAAS,SAACsJ,GAAD,OAAOzV,OAAOC,SAAW,mBADtC,cAKR,kBAAC8f,GAAD,CAAqB5C,QAASva,KAAKwP,MAAM0O,UAAWZ,SAAUtd,KAAKwP,MAAM8N,SAAUC,IAAKvd,KAAKwP,MAAM+N,iB,GA5zBtG9M,aA00BnCyZ,G,oDACF,WAAYthB,GAAQ,IAAD,8BACf,cAAMA,IACD4G,MAAQ,GAFE,E,wDAOPqD,GAER,IAAIsX,EAAa3O,OAAO3I,EAAEiN,OAAOvV,IAAI2O,UAAUsC,OAAO3I,EAAEiN,OAAOvV,IAAI3I,QAAQ,KAAO,EAAG4Z,OAAO3I,EAAEiN,OAAOvV,IAAIsN,QACrGgM,EAAehR,EAAEiN,OAAOtR,MAC5B7D,QAAQC,IAAI,SAAWiZ,GACvBlZ,QAAQC,IAAI,cAAgBuf,GAE5B,IAAI7L,EAAM,CACN,GAAM6L,EACN,aAAgB3G,SAASK,IAE7BlZ,QAAQC,IAAI0T,GACZte,KAAKoqB,gBAAgBD,EAAY7L,K,sCAGrB/T,EAAI+T,GAChB1O,GAAgB0Y,OAAO/d,EAAI+T,GACtBrS,MAAK,SAAAC,GACFvB,QAAQC,IAAIsB,MACbC,OAAM,SAAAC,GACLzB,QAAQ0B,MAAMD,Q,yCAKPsW,GAAa,IAAD,OAoB3B,OAnBmB1iB,KAAK4I,MAAMke,WAAW9e,KACrC,SAACqiB,EAAGpoB,GACA,GAAIooB,EAAEzG,cAAgBlB,EAElB,OADA/X,QAAQC,IAAI,QAAUyf,EAAE9f,IAEpB,kBAACuf,GAAA,EAAD,CACItb,MAAO6b,EAAE9f,GAAK,GACdwf,QAAS,kBAACO,GAAA,EAAD,CAAO7rB,MAAM,UAAU8L,GAAI8f,EAAExG,aAAe,IAAMwG,EAAE9f,GAAI8R,SAAU,EAAKkO,YAAY9F,KAAK,GAAOjW,MAAO6b,EAAExG,aAAe,KAChI3Q,MAAOmX,EAAEG,UACTR,eAAe,a,+BAa7B,IAAD,OACL,OAAQ,oCAEAhqB,KAAK4I,MAAM/B,MAAMmB,KAAI,SAACrD,EAAM7C,GAAP,OACjB,oCACI,kBAAC2oB,GAAA,EAAD,CAAgBvkB,UAAWwkB,MACvB,kBAACC,GAAA,EAAD,CAAOthB,MAAO,CAAEuhB,SAAU,IAAKzb,UAAW,GAAK9I,KAAK,QAAQkI,aAAW,iBACnE,kBAACsc,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAWjO,MAAM,SACbzT,MAAO,CAAE5K,MAAO,YAAaP,gBAAiB,WAC9C8sB,QAAS,GAAIxP,OAAO7W,EAAK,MAEjC,kBAACmmB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAW/sB,MAAO,OAAlB,UACA,kBAAC+sB,GAAA,EAAD,CAAW/sB,MAAO,MAAO8e,MAAM,QAA/B,YACA,kBAACiO,GAAA,EAAD,CAAW/sB,MAAO,MAAO8e,MAAM,QAA/B,eAGR,kBAACmO,GAAA,EAAD,KAEQtmB,EAAK,GAAGqD,KAAI,SAACgY,EAAG/d,GAAJ,OACR,kBAAC6oB,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KAAY9oB,EAAI,GAChB,kBAAC8oB,GAAA,EAAD,CAAWjO,MAAM,QAAQkD,EAAE4C,iBAC3B,kBAACmI,GAAA,EAAD,CAAWjO,MAAM,QACb,kBAAC4C,GAAA,EAAD,CAAaxZ,UAAU,YACnB,kBAACglB,GAAA,EAAD,CAAYC,KAAG,EAAC5c,aAAW,WAAW5G,KAAM,QAAUqY,EAAE4D,YAAa1D,aAAcF,EAAEmI,sBAAwB,IACxG,EAAKiD,mBAAmBpL,EAAE4D,YAAa5D,EAAEqL,0B,GApF3EjO,IAAM3M,WC70B3B6V,GAAYlL,GAASmL,iBAAiB,UCVtC/oB,IDW+BiT,YCXnBhT,aAAW,iBAAO,CAClCsL,KAAM,GACNvC,OAAQ,CACNzI,OAAQ,IACRC,MAAO,UAqEIstB,GAjEC,SAAC,GAAiC,IAA/B9lB,EAA8B,EAA9BA,UAAUsB,EAAoB,EAApBA,KAASnB,EAAW,oCACzCC,EAAUpI,KAEhB,OACE,kBAACiR,GAAA,EAAD,eACEjJ,UAAWM,YAAKF,EAAQmD,KAAMvD,IAC1BG,GAEJ,kBAACmM,GAAA,EAAD,KACE,kBAAC3K,EAAA,EAAD,CACEE,WAAW,SACX/I,QAAQ,OACR8I,cAAc,UAEd,kBAACG,EAAA,EAAD,CACE/B,UAAWI,EAAQY,OACnBgB,IAAKV,EAAKN,SAEZ,kBAACkB,EAAA,EAAD,CACEjJ,MAAM,cACNyT,cAAY,EACZtK,QAAQ,MAEPd,EAAKa,MAER,kBAACD,EAAA,EAAD,CACEjJ,MAAM,cACNyT,cAAY,EACZtK,QAAQ,MAHV,iBAKiBd,EAAKe,UAEtB,kBAACH,EAAA,EAAD,CACEjJ,MAAM,gBACNmJ,QAAQ,SAFV,UAIMd,EAAKgK,KAJX,cAIqBhK,EAAK+J,UAE1B,kBAACnJ,EAAA,EAAD,CACElC,UAAWI,EAAQ2lB,SACnB9sB,MAAM,gBACNmJ,QAAQ,SAHV,UAKMuI,OAASC,OAAO,WALtB,YAKoCtJ,EAAK0kB,aAI7C,kBAAC1jB,EAAA,EAAD,QCvDA0gB,GAASpN,GAASmL,iBAAiB,UAwU1BkF,G,oDAtUb,WAAY7iB,GAAQ,IAAD,8BACjB,cAAMA,IAwERpL,UAAYC,aAAW,iBAAO,CAC5BsL,KAAM,OA1EW,EA6EnBvL,UAAYC,aAAW,SAACuF,GAAD,MAAY,CACjC+F,KAAM,CACJ7K,gBAAiB,QACjBoR,UAAW,OACXzK,cAAe7B,EAAMoC,QAAQ,GAC7BR,WAAY5B,EAAMoC,QAAQ,GAC1BoG,YAAa,QAjFf,EAAKgE,MAAQ,CACXxC,OAAQ,GACRC,SAAU,GACVtD,SAAU,GACVC,SAAU,GACV6C,OAAQ,EACRif,QAAQ,EACRC,OAAQ,CACN,CACEnd,MAAO,EACP0E,MAAO,iBAET,CACE1E,MAAO,EACP0E,MAAO,YAGX0Y,QAAS,CACP,CACEpd,MAAO,EACP0E,MAAO,UAET,CACE1E,MAAO,EACP0E,MAAO,aAIT2Y,UAAS,EACTC,aAAa,GACbC,YAAW,EACXC,eAAe,GACfC,YAAW,EACXC,YAAW,GAnCE,E,gEAyCjB,GAAY,SAAT1D,IAA4B,WAATA,GAAkB,CACtC,IAAMH,EAAUjN,GAASmL,iBAAiB,MAC1CvmB,KAAKmsB,aAAa9D,M,mCAKT9d,GAAI,IAAD,OACd6hB,GAAehF,SAAS7c,GACvB0B,MAAK,SAAAC,GACJvB,QAAQC,MACR,IAAIyhB,EAAOngB,EAAS1B,KACpB,EAAKqF,SAAS,CACZ7C,OAAOqf,EAAKrf,OACZC,SAASof,EAAKpf,SACdtD,SAAS0iB,EAAK1iB,SACdC,SAASyiB,EAAKziB,SACd6C,OAAO4f,EAAK5f,OAAOA,OACnBif,OAAOW,EAAKX,YAEbvf,OAAM,SAAAC,GACPzB,QAAQ0B,MAAMD,Q,mCAILyG,GACX7S,KAAK6P,SAAL,eACGgD,EAAEiN,OAAOnY,KAAOkL,EAAEiN,OAAOtR,U,mCAmBjBqE,GAGX,GAFAlI,QAAQC,IAAIiI,EAAEiN,OAAOwM,YACrBzZ,EAAEyN,iBACwB,KAAtBtgB,KAAKwP,MAAMxC,OACbhN,KAAKof,UAAU,kBACfpf,KAAK6P,SAAS,CAACgc,UAAS,SACnB,GAA4B,KAAxB7rB,KAAKwP,MAAMvC,SACpBjN,KAAKof,UAAU,YACfpf,KAAK6P,SAAS,CAACkc,YAAW,SACrB,GAA4B,KAAxB/rB,KAAKwP,MAAM7F,SACpB3J,KAAKof,UAAU,YACfpf,KAAK6P,SAAS,CAACoc,YAAW,SACrB,GAA4B,KAAxBjsB,KAAKwP,MAAM5F,SACpB5J,KAAKof,UAAU,iBACfpf,KAAK6P,SAAS,CAACqc,YAAW,QACtB,CACJvhB,QAAQC,IAAR,gBAAgB5K,KAAKwP,QACrB,IAAI8O,EAAM,CACRtR,OAAQhN,KAAKwP,MAAMxC,OACnBC,SAAUjN,KAAKwP,MAAMvC,SACrBtD,SAAU3J,KAAKwP,MAAM7F,SACrBC,SAAU5J,KAAKwP,MAAM5F,SACrB6C,OAAQ,CAACA,OAAOzM,KAAKwP,MAAM/C,QAC3Bif,OAAO1rB,KAAKwP,MAAMkc,QAEpB,GAAY,WAATlD,GAAkB,CACnB,IAAM+D,EAAMnR,GAASmL,iBAAiB,MACtCjI,EAAI7W,QAAU8kB,EAEhBvsB,KAAK8jB,KAAKxF,M,2BAIT9T,GAAM,IAAD,OACR4hB,GAAetI,KAAKtZ,GACnByB,MAAK,SAAAC,GACJvB,QAAQC,IAAIsB,GACZ,EAAKsgB,YAAY,yBACjBpvB,OAAOC,SAAW,gBACjB8O,OAAM,SAAAC,GACPzB,QAAQ0B,MAAMD,Q,gCAIRkX,GACR,IAAIjE,EAAU1H,SAASC,eAAe,kBACtC5X,KAAK6P,SAAS,CACVqO,WAAW,EACXX,IAAK+F,EAAQ,0BACbhG,SAAU,YAEd+B,EAAQJ,U,kCAGE1B,GACV,IAAI8B,EAAU1H,SAASC,eAAe,kBACtC5X,KAAK6P,SAAS,CACVqO,WAAW,EACXX,IAAKA,EACLD,SAAU,aAEd+B,EAAQJ,U,+BAIQjf,KAAKxC,UACrB,OACE,0BACEgiB,aAAa,MACbD,YAAU,EACVxE,SAAU/a,KAAK6b,aAAa4I,KAAKzkB,OAEjC,kBAACyO,GAAA,EAAD,KACE,kBAAC0G,GAAA,EAAD,CACEmK,UAAU,uBACVja,MAAM,YAER,kBAACyC,EAAA,EAAD,MACA,kBAACgK,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CACEC,WAAS,EACT5M,QAAS,GAET,kBAAC2M,GAAA,EAAD,CACEpN,MAAI,EACJ2S,GAAI,EACJL,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACEC,WAAS,EACTC,WAAYnc,KAAKwP,MAAMqc,SAAS,0CAA0C,GAC1E3Y,MAAM,SACNvL,KAAK,SACL0U,SAAUrc,KAAK4b,aAAa6I,KAAKzkB,MACjCka,UAAQ,EACR1L,MAAOxO,KAAKwP,MAAMxC,OAClBpF,QAAQ,WACRyE,MAAOrM,KAAKwP,MAAMqc,YAGtB,kBAAC9Z,GAAA,EAAD,CACEpN,MAAI,EACJ2S,GAAI,EACJL,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACEC,WAAS,EACThJ,MAAM,WACNvL,KAAK,WACL0U,SAAUrc,KAAK4b,aAAa6I,KAAKzkB,MACjCka,UAAQ,EACR1L,MAAOxO,KAAKwP,MAAMvC,SAClBrF,QAAQ,WACRuU,WAAYnc,KAAKwP,MAAMuc,WAAW,4CAA4C,GAC9E1f,MAAOrM,KAAKwP,MAAMuc,cAGtB,kBAACha,GAAA,EAAD,CACEpN,MAAI,EACJ2S,GAAI,EACJL,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACEC,WAAS,EACThJ,MAAM,WACNvL,KAAK,WACL0U,SAAUrc,KAAK4b,aAAa6I,KAAKzkB,MACjCka,UAAQ,EACR1L,MAAOxO,KAAKwP,MAAM7F,SAClB/B,QAAQ,WACRuU,WAAYnc,KAAKwP,MAAMyc,WAAW,4CAA4C,GAC9E5f,MAAOrM,KAAKwP,MAAMyc,cAGtB,kBAACla,GAAA,EAAD,CACEpN,MAAI,EACJ2S,GAAI,EACJL,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACEC,WAAS,EACThJ,MAAM,gBACNvL,KAAK,WACL0U,SAAUrc,KAAK4b,aAAa6I,KAAKzkB,MACjCmO,KAAK,WACLK,MAAOxO,KAAKwP,MAAM5F,SAClBhC,QAAQ,WACRuU,WAAYnc,KAAKwP,MAAM0c,WAAW,iDAA8C,GAChF7f,MAAOrM,KAAKwP,MAAM0c,cAGtB,kBAACna,GAAA,EAAD,CACEpN,MAAI,EACJ2S,GAAI,EACJL,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACEC,WAAS,EACThJ,MAAM,SACNvL,KAAK,SACL0U,SAAUrc,KAAK4b,aAAa6I,KAAKzkB,MACjCka,UAAQ,EACRuS,QAAM,EACNC,YAAa,CAAE7M,QAAQ,GACvBrR,MAAOxO,KAAKwP,MAAMkc,OAClB9jB,QAAQ,YAEP5H,KAAKwP,MAAMoc,QAAQ5jB,KAAI,SAAC2kB,GAAD,OACtB,4BACE1kB,IAAK0kB,EAAOne,MACZA,MAAOme,EAAOne,OAEbme,EAAOzZ,YAKhB,kBAACnB,GAAA,EAAD,CACEpN,MAAI,EACJ2S,GAAI,EACJL,GAAI,IAEJ,kBAACgF,GAAA,EAAD,CACEC,WAAS,EACThJ,MAAM,MACNvL,KAAK,SACL0U,SAAUrc,KAAK4b,aAAa6I,KAAKzkB,MACjCka,UAAQ,EACRuS,QAAM,EACNC,YAAa,CAAE7M,QAAQ,GACvBrR,MAAOxO,KAAKwP,MAAM/C,OAClB7E,QAAQ,YAEP5H,KAAKwP,MAAMmc,OAAO3jB,KAAI,SAAC2kB,GAAD,OACrB,4BACE1kB,IAAK0kB,EAAOne,MACZA,MAAOme,EAAOne,OAEbme,EAAOzZ,cAOpB,kBAACpL,EAAA,EAAD,MACA,kBAACX,EAAA,EAAD,CACE7I,QAAQ,OACR0G,eAAe,WACfsC,EAAG,GAEO,QAARkhB,IAAiB,kBAACxiB,EAAA,EAAD,CACjBvH,MAAM,UACNmJ,QAAQ,YACRuG,KAAK,UAHY,WAOnB,kBAACnI,EAAA,EAAD,CACEvH,MAAM,UACNmJ,QAAQ,YACRyB,MAAO,CAACsU,WAAW,GACnBpU,QAAS,SAACsJ,GAAKzV,OAAOC,SAAS,eAJjC,cAUJ,kBAAC8f,GAAD,CAAqB5C,QAASva,KAAKwP,MAAM0O,UAAWZ,SAAUtd,KAAKwP,MAAM8N,SAAUC,IAAKvd,KAAKwP,MAAM+N,W,GA5T9E9M,aCPvBjT,GAAYC,aAAW,SAACuF,GAAD,MAAY,CACvC+F,KAAM,CACJ7K,gBAAiB8E,EAAME,QAAQC,WAAWC,KAC1CkM,UAAW,OACXzK,cAAe7B,EAAMoC,QAAQ,GAC7BR,WAAY5B,EAAMoC,QAAQ,QA+DfmK,GA3DC,WACd,IAAMiZ,EAASpN,GAASmL,iBAAiB,UACnC3gB,EAAUpI,KAFI,EAGgB0L,mBAAS,MAHzB,mBAGb2C,EAHa,KAGDC,EAHC,KAKpB9E,qBAAU,WAEN+E,GAAsBC,SACnBC,MAAK,SAAAC,GAEJJ,EAAcI,EAAS1B,SACtB2B,OAAM,SAAAC,GACPzB,QAAQ0B,MAAMD,QAInB,IAEH,IAAMtF,EAAO,CACXN,OAAQ,4CACRsK,KAAM,eACND,QAAS,cACThJ,SAAyB,MAAdgE,EAAsBA,EAAWlC,SAAW,KAAOkC,EAAWY,OAAOM,WAAa,KAAO,UACpGpF,KAAqB,MAAdkE,EAAsBA,EAAWmB,OAAS,IAAMnB,EAAWoB,SAAW,UAC7Eue,SAAU,SAGZ,OACE,kBAAC,GAAD,CACEhmB,UAAWI,EAAQmD,KACnB1D,MAAM,WAEN,kBAACiL,GAAA,EAAD,CAAWC,SAAS,MAClB,kBAACwB,GAAA,EAAD,CACEC,WAAS,EACT5M,QAAS,GAEI,SAAXojB,GAAsB,kBAACzW,GAAA,EAAD,CACtBpN,MAAI,EACJmS,GAAI,EACJQ,GAAI,EACJL,GAAI,IAEJ,kBAAC,GAAD,CAASnQ,KAAMA,KAEJ,SAAX0hB,GAAsB,kBAACzW,GAAA,EAAD,CACtBpN,MAAI,EACJmS,GAAI,EACJQ,GAAI,EACJL,GAAI,IAEJ,kBAAC,GAAD,WCtDZlL,GAAsB7B,uBACpB6B,GAAsB5B,eAClB4B,GAAsB6gB,iBAG5B,IAAMC,GAAc,WAElB,OAAI9gB,GAAsBf,kBACxBL,QAAQC,IAAI,MACL,IAEPD,QAAQC,IAAI,MACL,IAkCIkiB,GA7BA,CACb,CACEC,KAAM,gBACNC,QAAS,kBAAC,GAAD,MACTzf,SAAU,CACR,CAAEwf,KAAM,QAASC,QAASH,KAAc,kBAAC,GAAD,MAAgB,kBAAC,IAAD,CAAUzmB,GAAG,YACrE,CAAE2mB,KAAM,YAAaC,QAASH,KAAc,kBAAC,GAAD,MAAqB,kBAAC,IAAD,CAAUzmB,GAAG,YAC9E,CAAE2mB,KAAM,YAAaC,QAASH,KAAc,kBAACI,GAAD,MAAkB,kBAAC,IAAD,CAAU7mB,GAAG,YAC3E,CAAE2mB,KAAM,SAAUC,QAASH,KAAc,kBAACK,GAAD,MAAoB,kBAAC,IAAD,CAAU9mB,GAAG,YAC1E,CAAE2mB,KAAM,WAAYC,QAASH,KAAc,kBAAC,GAAD,MAAiB,kBAAC,IAAD,CAAUzmB,GAAG,YACzE,CAAE2mB,KAAM,WAAYC,QAASH,KAAc,kBAAC,GAAD,MAAgB,kBAAC,IAAD,CAAUzmB,GAAG,YACxE,CAAE2mB,KAAM,UAAWC,QAASH,KAAc,kBAAC,GAAD,MAAa,kBAAC,IAAD,CAAUzmB,GAAG,YACpE,CAAE2mB,KAAM,UAAWC,QAAS,kBAAC,GAAD,OAC5B,CAAED,KAAM,IAAKC,QAAS,kBAAC,IAAD,CAAU5mB,GAAG,YAGvC,CACE2mB,KAAM,aACNC,QAAS,kBAAC,GAAD,MACTzf,SAAU,CACR,CAAEwf,KAAM,QAASC,QAAS,kBAAC,GAAD,OAC1B,CAAED,KAAM,WAAYC,QAAS,kBAAC,GAAD,OAC7B,CAAED,KAAM,MAAOC,QAAS,kBAAC,GAAD,OACxB,CAAED,KAAM,IAAKC,QAAS,kBAAC,GAAD,OACtB,CAAED,KAAM,IAAKC,QAAS,kBAAC,IAAD,CAAU5mB,GAAG,aCtC1B+mB,GAXH,WACV,IAAMC,EAAUC,YAAUP,IAE1B,OACE,kBAACQ,EAAA,EAAD,CAAetqB,MAAOA,GACpB,kBAAC,EAAD,MACCoqB,ICVPG,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,GAAD,OAED7V,SAASC,eAAe,S1DwHrB,kBAAmB6V,WACrBA,UAAUC,cAAcC,MAAM1hB,MAAK,SAAA2hB,GACjCA,EAAaC,kB","file":"static/js/main.64e79653.chunk.js","sourcesContent":["/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStyles, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => createStyles({\n  '@global': {\n    '*': {\n      boxSizing: 'border-box',\n      margin: 0,\n      padding: 0,\n    },\n    html: {\n      '-webkit-font-smoothing': 'antialiased',\n      '-moz-osx-font-smoothing': 'grayscale',\n      height: '100%',\n      width: '100%'\n    },\n    body: {\n      backgroundColor: '#f4f6f8',\n      height: '100%',\n      width: '100%'\n    },\n    a: {\n      textDecoration: 'none'\n    },\n    '#root': {\n      height: '100%',\n      width: '100%'\n    },\n\n    formControl: {\n      display: 'block',\n      width: '100 %',\n      padding: '.375rem .75rem',\n      fontSize: '1rem',\n      lineHeight: '1.5',\n      color: '#495057',\n      backgrounColor: '#fff',\n      backgroundClip: 'padding - box',\n      border: '1px solid #ced4da',\n      borderRadius: '.25rem',\n      transition: 'border - color .15s ease -in -out, box - shadow .15s ease -in -out'\n    }\n    \n    \n    \n  }\n}));\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","import { Chart } from 'react-chartjs-2';\n\n// ChartJS extension rounded bar chart\n// https://codepen.io/jedtrow/full/ygRYgo\nfunction draw() {\n  const { ctx } = this._chart;\n  const vm = this._view;\n  let { borderWidth } = vm;\n\n  let left;\n  let right;\n  let top;\n  let bottom;\n  let signX;\n  let signY;\n  let borderSkipped;\n  let radius;\n\n  // If radius is less than 0 or is large enough to cause drawing errors a max\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\n  let { cornerRadius } = this._chart.config.options;\n  if (cornerRadius < 0) {\n    cornerRadius = 0;\n  }\n\n  if (typeof cornerRadius === 'undefined') {\n    cornerRadius = 0;\n  }\n\n  if (!vm.horizontal) {\n    // bar\n    left = vm.x - vm.width / 2;\n    right = vm.x + vm.width / 2;\n    top = vm.y;\n    bottom = vm.base;\n    signX = 1;\n    signY = bottom > top ? 1 : -1;\n    borderSkipped = vm.borderSkipped || 'bottom';\n  } else {\n    // horizontal bar\n    left = vm.base;\n    right = vm.x;\n    top = vm.y - vm.height / 2;\n    bottom = vm.y + vm.height / 2;\n    signX = right > left ? 1 : -1;\n    signY = 1;\n    borderSkipped = vm.borderSkipped || 'left';\n  }\n\n  // Canvas doesn't allow us to stroke inside the width so we can\n  // adjust the sizes to fit if we're setting a stroke on the line\n  if (borderWidth) {\n    // borderWidth shold be less than bar width and bar height.\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\n    const halfStroke = borderWidth / 2;\n    // Adjust borderWidth when bar top position is near vm.base(zero).\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n    // not become a vertical line?\n    if (borderLeft !== borderRight) {\n      top = borderTop;\n      bottom = borderBottom;\n    }\n    // not become a horizontal line?\n    if (borderTop !== borderBottom) {\n      left = borderLeft;\n      right = borderRight;\n    }\n  }\n\n  ctx.beginPath();\n  ctx.fillStyle = vm.backgroundColor;\n  ctx.strokeStyle = vm.borderColor;\n  ctx.lineWidth = borderWidth;\n\n  // Corner points, from bottom-left to bottom-right clockwise\n  // | 1 2 |\n  // | 0 3 |\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\n\n  // Find first (starting) corner with fallback to 'bottom'\n  const borders = ['bottom', 'left', 'top', 'right'];\n  let startCorner = borders.indexOf(borderSkipped, 0);\n  if (startCorner === -1) {\n    startCorner = 0;\n  }\n\n  function cornerAt(index) {\n    return corners[(startCorner + index) % 4];\n  }\n\n  // Draw rectangle from 'startCorner'\n  let corner = cornerAt(0);\n  ctx.moveTo(corner[0], corner[1]);\n\n  for (let i = 1; i < 4; i += 1) {\n    corner = cornerAt(i);\n    let nextCornerId = i + 1;\n    if (nextCornerId === 4) {\n      nextCornerId = 0;\n    }\n\n    const width = corners[2][0] - corners[1][0];\n    const height = corners[0][1] - corners[1][1];\n    const x = corners[1][0];\n    const y = corners[1][1];\n\n    radius = cornerRadius;\n    // Fix radius being too large\n    if (radius > Math.abs(height) / 2) {\n      radius = Math.floor(Math.abs(height) / 2);\n    }\n    if (radius > Math.abs(width) / 2) {\n      radius = Math.floor(Math.abs(width) / 2);\n    }\n\n    if (height < 0) {\n      // Negative values in a standard bar chart\n      const xTl = x;\n      const xTr = x + width;\n      const yTl = y + height;\n      const yTr = y + height;\n\n      const xBl = x;\n      const xBr = x + width;\n      const yBl = y;\n      const yBr = y;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else if (width < 0) {\n      // Negative values in a horizontal bar chart\n      const xTl = x + width;\n      const xTr = x;\n      const yTl = y;\n      const yTr = y;\n\n      const xBl = x + width;\n      const xBr = x;\n      const yBl = y + height;\n      const yBr = y + height;\n\n      // Draw\n      ctx.moveTo(xBl + radius, yBl);\n      ctx.lineTo(xBr - radius, yBr);\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\n      ctx.lineTo(xTr, yTr + radius);\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\n      ctx.lineTo(xTl + radius, yTl);\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\n      ctx.lineTo(xBl, yBl - radius);\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\n    } else {\n      // Positive Value\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(\n        x + width,\n        y + height,\n        x + width - radius,\n        y + height\n      );\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n    }\n  }\n\n  ctx.fill();\n  if (borderWidth) {\n    ctx.stroke();\n  }\n}\n\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\n  draw\n});\n","import { createMuiTheme, colors } from '@material-ui/core';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createMuiTheme({\n  palette: {\n    background: {\n      dark: '#F4F6F8',\n      default: colors.common.white,\n      paper: colors.common.white\n    },\n    primary: {\n      main: colors.indigo[500]\n    },\n    secondary: {\n      main: colors.indigo[500]\n    },\n    text: {\n      primary: colors.blueGrey[900],\n      secondary: colors.blueGrey[600]\n    }\n  },\n  shadows,\n  typography\n});\n\nexport default theme;\n","export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    textTransform: 'none',\n    width: '100%'\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon: Icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n      >\n        {Icon && (\n          <Icon\n            className={classes.icon}\n            size=\"20\"\n          />\n        )}\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","import React, { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  makeStyles,\n\n} from '@material-ui/core';\nimport NavItem from './NavItem';\n\nconst useStyles = makeStyles(() => ({\n  mobileDrawer: {\n    width: 256\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: 'calc(100% - 64px)'\n  },\n  avatar: {\n    cursor: 'pointer',\n    width: 64,\n    height: 64\n  }\n}));\n\nconst NavBar = ({ onMobileClose, openMobile, items, user }) => {\n  const classes = useStyles();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <Box\n      height=\"100%\"\n      display=\"flex\"\n      flexDirection=\"column\"\n    >\n      <Box\n        alignItems=\"center\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        p={2}\n      >\n        <Avatar\n          className={classes.avatar}\n          component={RouterLink}\n          src={user.avatar}\n          to={\"/app/usuario?action=view&id=\"+user.id_user}\n        />\n        <Typography\n          className={classes.name}\n          color=\"textPrimary\"\n          variant=\"h5\"\n        >\n          {user.name}\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          {user.jobTitle}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box p={2}>\n        <List>\n          {items.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n        </List>\n      </Box>\n      <Box flexGrow={1} />\n      \n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false\n};\n\nexport default NavBar;\n","import React from 'react';\n\nconst Logo = (props) => {\n  return (\n    <img\n      alt=\"Logo\"\n      src={process.env.PUBLIC_URL+\"/static/logo-amss.png\"}\n      {...props}\n    />\n  );\n};\n\nexport default Logo;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport Logo from 'src/components/Logo';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  }\n}));\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const [notifications] = useState([]);\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        <RouterLink to={process.env.PUBLIC_URL+\"/app/dashboard\"}>\n          <Logo />\n        </RouterLink>\n        <Box flexGrow={1} />\n        <Hidden mdDown>\n        <RouterLink to= {process.env.PUBLIC_URL+\"/app/logout\"} style={{textDecoration:'none',color:'white'}}>\n          <IconButton color=\"inherit\" >\n            <InputIcon />\n          </IconButton>\n          </RouterLink>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={onMobileNavOpen}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func\n};\n\nexport default TopBar;\n","import axios from 'axios';\nimport { get } from 'lodash';\n\nlet API_URL = 'https://eliotest-heroku-spring.herokuapp.com';\n\nexport let USER_NAME_SESSION_ATTRIBUTE_NAME = 'user'\nexport let TOKEN_USER = \"token\";\n\nclass AuthenticationService {\n\n    executeJwtAuthenticationService(username, password) {\n        return axios.post(`${API_URL}/authenticate`, {\n            username,\n            password\n        })\n    }\n\n    registerSuccessfulLoginForJwt(username, token) {\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username)\n        sessionStorage.setItem(TOKEN_USER, token)\n        this.setupAxiosInterceptors(this.createJWTToken(token))\n\n    }\n\n    createJWTToken(token) {\n        return 'Bearer ' + token\n    }\n\n    getTokenUser() {\n        let token = sessionStorage.getItem(TOKEN_USER)\n        if (token === null) return ''\n        return token\n    }\n\n    logout() {\n        sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n        localStorage.removeItem('originLoginExterno');\n        sessionStorage.removeItem('id_unidad');\n        sessionStorage.removeItem('user');\n        sessionStorage.removeItem('token');\n        sessionStorage.removeItem('ROLE');\n        sessionStorage.removeItem('EXP_DATE');\n        sessionStorage.removeItem('INST');\n        sessionStorage.removeItem('idUnidadRecurso');\n    }\n\n    modifyUnidadRecurso(id, data) {\n        return axios.put(`${API_URL}/unidad_recurso/${id}`, data,\n            { headers: { 'Authorization': \"Bearer \" + sessionStorage.getItem(\"token\") } })\n    }\n\n    isUserLoggedIn() {\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\n        if (user === null) return false\n        console.log(user+\".....\")\n        return true\n    }\n\n    getLoggedInUserName() {\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\n        if (user === null) return ''\n        return user\n    }\n\n    setupAxiosInterceptors(token) {\n        axios.interceptors.request.use(\n            (config) => {\n                if (this.isUserLoggedIn()) {\n                    config.headers.authorization = token\n                }\n                console.log(config+\" ***** \")\n                return config\n            }\n        )\n    }\n    getApiUrl() {\n        let apiUrl = API_URL;\n        if (apiUrl === null) return ''\n        return apiUrl\n    }\n\n    whoami(){\n        return axios.get(`${API_URL}/usuario/whoami`);\n    }\n}\nexport default new AuthenticationService();\nexport const whoami = async () => {\n    try {\n        const { data } = await axios.get(`${API_URL}/admin/user/whoami`);\n        return { data };\n        //return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n    } catch (error) {\n        return error;\n    }\n};\nexport const fetchUserDetails = async (username) => {\n    try {\n        const { data } = await axios.get(`${API_URL}/admin/user/username/${username}`);\n        return { data };\n        //return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n    } catch (error) {\n        return error;\n    }\n};","/**\n * Script constantes en JavaScript escritos por Eliezer Hernández, eliohernandez94@gmail.com.com. *\n * @author Eliezer Hernández\n * @version 1.0\n * Fecha\t\tCR\t     Nombre\t\t\t\tDescripcion\n * ------------\t-------- ------------------- ---------------------------------------------\n * 04/04/2021\tENC-2\t Eliezer Hernandez\tVariables globales.\n \n * LAST LINE HISTORY\n * */\n\nexport default {\n    ID_ROL_ADMIN:1,\n    ID_ROL_TECNICO:2,\n}","import React, { useState, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport NavBar from './NavBar';\nimport TopBar from './TopBar';\nimport AuthenticationService from 'src/service/AuthenticationService';\nimport Constante from 'src/js/Constante';\nimport {\n  AlertCircle as AlertCircleIcon,\n  BarChart as BarChartIcon,\n  Lock as LockIcon,\n  Settings as SettingsIcon,\n  ShoppingBag as ShoppingBagIcon,\n  User as UserIcon,\n  UserPlus as UserPlusIcon,\n  Users as UsersIcon,\n  LogOut as LogOutIcon\n} from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64,\n    [theme.breakpoints.up('lg')]: {\n      paddingLeft: 256\n    }\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst DashboardLayout = () => {\n  const classes = useStyles();\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\n  const [userDetail, setUserDetail] = useState(null);\n\n  useEffect(()=>{\n    function loadUserDetails(){\n      AuthenticationService.whoami()\n      .then(response=>{\n        //console.log(response.data)\n        setUserDetail(response.data)\n      }).catch(err=>{\n        console.error(err)\n      })\n    }\n    loadUserDetails();\n  },[]);\n\n  const items = [\n    {\n      href: process.env.PUBLIC_URL+'/app/dashboard',\n      icon: BarChartIcon,\n      title: 'Dashboard'\n    },\n    {\n      href: process.env.PUBLIC_URL+'/app/customers',\n      icon: UsersIcon,\n      title: 'Encuestas'\n    },\n    {\n      href: process.env.PUBLIC_URL+'/app/report',\n      icon: ShoppingBagIcon,\n      title: 'Reporte'\n    },\n    /*{\n      href: '/login',\n      icon: LockIcon,\n      title: 'Login'\n    },\n    {\n      href: '/register',\n      icon: UserPlusIcon,\n      title: 'Register'\n    },\n    {\n      href: '/404',\n      icon: AlertCircleIcon,\n      title: 'Error'\n    }*/\n  ];\n\n  if((userDetail!=null && userDetail.id_rol.id_rol===Constante.ID_ROL_ADMIN)){\n    items.push(\n      {\n        href: process.env.PUBLIC_URL+'/app/users',\n        icon: UserIcon,\n        title: 'Usuarios'\n      },\n      {\n      href: process.env.PUBLIC_URL+'/app/settings',\n      icon: SettingsIcon,\n      title: 'Config'\n    },)\n  }\n\n  //Agrega de ultimo el menu de Salir\n  items.push(\n    {\n      href: process.env.PUBLIC_URL+'/app/logout',\n      icon: LogOutIcon,\n      title: 'Salir'\n    },\n  )\n\n  //Variable de info del usuario\n  const user = {\n    avatar: '/static/images/avatars/default-avatar.png',\n    jobTitle: (userDetail!=null)?userDetail.username+' ('+userDetail.id_rol.nombre_rol+') ':'loading',\n    name: (userDetail!=null)?userDetail.nombre+\" \"+userDetail.apellido:'loading',\n    id_user: (userDetail!=null)?userDetail.id_user:0\n  };\n\n\n  return (\n    <div className={classes.root}>\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\n      <NavBar\n        onMobileClose={() => setMobileNavOpen(false)}\n        openMobile={isMobileNavOpen}\n        items={items}\n        user={user}\n      />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLayout;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar,\n  Toolbar,\n  makeStyles\n} from '@material-ui/core';\nimport Logo from 'src/components/Logo';\n\nconst useStyles = makeStyles(({\n  root: {},\n  toolbar: {\n    height: 64\n  }\n}));\n\nconst TopBar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar className={classes.toolbar}>\n        <RouterLink to={process.env.PUBLIC_URL+\"/app/dashboard\"}>\n          <Logo style={{margin:10,height:'90%'}} />\n        </RouterLink>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nTopBar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopBar;\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\nimport TopBar from './TopBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    height: '100%',\n    overflow: 'hidden',\n    width: '100%'\n  },\n  wrapper: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden',\n    paddingTop: 64\n  },\n  contentContainer: {\n    display: 'flex',\n    flex: '1 1 auto',\n    overflow: 'hidden'\n  },\n  content: {\n    flex: '1 1 auto',\n    height: '100%',\n    overflow: 'auto'\n  }\n}));\n\nconst MainLayout = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <TopBar />\n      <div className={classes.wrapper}>\n        <div className={classes.contentContainer}>\n          <div className={classes.content}>\n            <Outlet />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MainLayout;\n","/* eslint-disable react/display-name */\nimport React, { forwardRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\nconst Page = forwardRef(({\n  children,\n  title = '',\n  ...rest\n}, ref) => {\n  return (\n    <div\n      ref={ref}\n      {...rest}\n    >\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      {children}\n    </div>\n  );\n});\n\nPage.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string\n};\n\nexport default Page;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Card,\n  makeStyles,\n  Button,\n} from '@material-ui/core';\nimport KeyboardVoiceIcon from '@material-ui/icons/Save';\nimport { DataGrid,CellParams,GridApi } from '@material-ui/data-grid';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport Constante from 'src/js/Constante';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, customers, encuestas,user, ...rest }) => {\n  const classes = useStyles();\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  console.log(JSON.stringify(user))\n\n  \n\n  const columns = [\n    { field: 'id', headerName: 'No. Usuario', width: 100,flex: 1 },\n    { field: 'nombre', headerName: 'Nombre Usuario', width: 200 },\n    { field: 'username', headerName: 'Username', width: 200 },\n    { field: 'rol', headerName: 'Rol', width: 200 },\n    { field: 'fecha_registro', headerName: 'Fecha Creación', description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 200,\n      type: 'dateTime'\n    },\n    { field: 'button', headerName: 'Accion', width: 200,disableClickEventBubbling: true,flex: 1,\n    renderCell: (params) => {\n      const onClick = () => {\n        console.log(params.value)\n        window.location = \"usuario?action=view&id=\"+params.value\n      };\n      const onEdit = () => {\n        console.log(params.value)\n        window.location = \"usuario?action=update&id=\"+params.value\n      };\n      return <>\n        <IconButton aria-label=\"Ver\" onClick={onClick}>\n          <VisibilityIcon />\n        </IconButton>\n        {(user != null && user.id_rol.id_rol === Constante.ID_ROL_ADMIN) &&\n          <IconButton aria-label=\"Ver\" onClick={onEdit}>\n            <EditIcon />\n          </IconButton>}\n      </>\n    }\n    }\n  ];\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <div style={{ height: 400, width: '100%' }}>\n      <DataGrid rows={encuestas} columns={columns} pageSize={5}\n      filterModel={{\n        items: [\n          { columnField: 'nombre', operatorValue: 'contains', value: '' },\n        ],\n      }}/>\n    </div>\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array.isRequired\n};\n\nexport default Results;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst onNewEncuesta = ()=>{\n  window.location = \"usuario?action=new\"\n}\n\nconst Toolbar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        \n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={onNewEncuesta}\n          style={{marginTop:10}}\n        >\n          Crear Usuario\n        </Button>\n      </Box>\n      \n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","import AuthenticationService from '../../../service/AuthenticationService';\nimport axios from 'axios'\nconst API_URL = AuthenticationService.getApiUrl();\n\n\nclass UsuarioService {\n\n    findAll() {\n        return axios.get(`${API_URL}/usuario/`);\n    }\n\n    findById(id) {\n        return axios.get(`${API_URL}/usuario/${id}`);\n    }\n    \n    save(data){\n        return axios.post(`${API_URL}/usuario/`,data);\n    }\n\n    update(id, data){\n        return axios.put(`${API_URL}/detalle/${id}`, data);\n    }\n\n    updateusuario(id, data){\n        return axios.put(`${API_URL}/usuario/${id}`, data);\n    }\n\n    whoami(){\n        return axios.get(`${API_URL}/usuario/whoami`);\n    }\n}\n\nexport const findAllr = async () => {\n    try {\n        const data = await axios.get(`${API_URL}/usuario/`);\n        return data.data;\n        //return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n    } catch (error) {\n        return error;\n    }\n};\n\nexport default new UsuarioService();","import React, { useState, useEffect, Component} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles,\n  Button\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\nimport EncuestaService,{findAllr} from '../service/usuarioService';\nimport moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nexport default class Account extends Component{\n\n  constructor(props){\n    super(props)\n    this.state={\n      dataEncuesta:[],\n      dataEncuestaFormated:[],\n      user:null\n    }\n  }\n\n  componentDidMount(){\n    this.loadAllEncuestas()\n    this.userDetail()\n  }\n\n  userDetail (){\n    let user = null;\n    EncuestaService.whoami()\n      .then(response=>{\n        //console.log(\"response :\"+response.data)\n        this.setState( {user:response.data})\n      }).catch(\n        err=>{\n          console.error(err)\n          user = null\n        }\n      )\n  }\n\n  loadAllEncuestas(){\n    EncuestaService.findAll()\n    .then(response=>{\n      console.log(response.data)\n      this.setState({dataEncuesta:response.data})\n      this.makeDataEncuesta(response.data)\n    }).catch(\n      err=>{\n        console.error(err)\n      }\n    )\n  }\n\n  makeDataEncuesta(objEncuesta){\n    let objTemp = []\n    objEncuesta.map(\n      a=>{\n        objTemp.push(\n          {\n            nombre: a.nombre+' '+a.apellido,\n            username:a.username,\n            fecha_registro: moment(a.fecha_registro).format('DD/MM/YYYY HH:MM'),\n            id: a.id_user,\n            rol: a.id_rol.nombre_rol,\n            button:a.id_user\n          }\n        )\n      }\n    )\n      this.setState({dataEncuestaFormated:objTemp})\n    //console.log(objTemp)\n  }\n\n  render(){\n    return (\n      <Page\n        className={useStyles.root}\n        title=\"Lista de Usuarios\"\n      >\n        <Container maxWidth={false}>\n          <Toolbar  />\n          <Box mt={3}>\n            <Results  encuestas={this.state.dataEncuestaFormated} user={this.state.user} />\n          </Box>\n        </Container>\n      </Page>\n    );\n  }\n}\n\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Card,\n  makeStyles,\n  Button,\n} from '@material-ui/core';\nimport KeyboardVoiceIcon from '@material-ui/icons/Save';\nimport { DataGrid,CellParams,GridApi } from '@material-ui/data-grid';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Results = ({ className, customers, encuestas, ...rest }) => {\n  const classes = useStyles();\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  console.log(encuestas)\n\n  const handleSelectAll = (event) => {\n    let newSelectedCustomerIds;\n\n    if (event.target.checked) {\n      newSelectedCustomerIds = encuestas.map((customer) => customer.id);\n    } else {\n      newSelectedCustomerIds = [];\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomerIds.indexOf(id);\n    let newSelectedCustomerIds = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\n        selectedCustomerIds.slice(0, selectedIndex),\n        selectedCustomerIds.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomerIds(newSelectedCustomerIds);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    alert(newPage)\n    setPage(newPage);\n  };\n\n  const columns = [\n    { field: 'id', headerName: 'No. Ficha', width: 100,flex: 1 },\n    { field: 'nombre_usuario', headerName: 'Nombre encuestado', width: 200 },\n    { field: 'nombre_puesto', headerName: 'Puesto', width: 200 },\n    { field: 'direccion_puesto', headerName: 'Direccion', width: 200 },\n    { field: 'fecha_pedido', headerName: 'Fecha encuesta', description: 'This column has a value getter and is not sortable.',\n      sortable: false,\n      width: 200,\n      type: 'dateTime'\n    },\n    { field: 'button', headerName: 'Accion', width: 200,disableClickEventBubbling: true,flex: 1,\n    renderCell: (params) => {\n      const onClick = () => {        \n        console.log(params.value)\n        window.location = \"encuesta?action=update&id=\"+params.value        \n      };\n\n      return <IconButton aria-label=\"Ver\" onClick={onClick}>\n                <VisibilityIcon />\n              </IconButton>\n    }\n    }\n  ];\n  \n  const rows = [\n    { id: 1, lastName: 'Snow', firstName: 'Jon', age: \"35\",fullName:\"khk\"},\n    { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },\n    { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },\n    { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },\n    { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },\n    { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },\n    { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },\n    { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },\n    { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 },\n  ];\n  \n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <div style={{ height: 400, width: '100%' }}>\n      <DataGrid rows={encuestas} columns={columns} pageSize={5} checkboxSelection \n      filterModel={{\n        items: [\n          { columnField: 'nombre_usuario', operatorValue: 'contains', value: '' },\n        ],\n      }}/>\n    </div>\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array.isRequired\n};\n\nexport default Results;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  importButton: {\n    marginRight: theme.spacing(1)\n  },\n  exportButton: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst onNewEncuesta = ()=>{\n  window.location = \"encuesta?action=new\"\n}\n\nconst Toolbar = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n      >\n        \n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={onNewEncuesta}\n          style={{marginTop:10}}\n        >\n          Encuestar\n        </Button>\n      </Box>\n      \n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Toolbar;\n","import { v4 as uuid } from 'uuid';\n\nexport default [\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'West Virginia',\n      city: 'Parkersburg',\n      street: '2849 Fulton Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_3.png',\n    createdAt: 1555016400000,\n    username: 'ekaterina.tankova@devias.io',\n    name: 'Ekaterina Tankova',\n    phone: '304-428-3097'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Bristow',\n      city: 'Iowa',\n      street: '1865  Pleasant Hill Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_4.png',\n    createdAt: 1555016400000,\n    username: 'cao.yu@devias.io',\n    name: 'Cao Yu',\n    phone: '712-351-5711'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Georgia',\n      city: 'Atlanta',\n      street: '4894  Lakeland Park Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_2.png',\n    createdAt: 1555016400000,\n    username: 'alexa.richardson@devias.io',\n    name: 'Alexa Richardson',\n    phone: '770-635-2682'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Ohio',\n      city: 'Dover',\n      street: '4158  Hedge Street'\n    },\n    avatarUrl: '/static/images/avatars/avatar_5.png',\n    createdAt: 1554930000000,\n    username: 'anje.keizer@devias.io',\n    name: 'Anje Keizer',\n    phone: '908-691-3242'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Texas',\n      city: 'Dallas',\n      street: '75247'\n    },\n    avatarUrl: '/static/images/avatars/avatar_6.png',\n    createdAt: 1554757200000,\n    username: 'clarke.gillebert@devias.io',\n    name: 'Clarke Gillebert',\n    phone: '972-333-4106'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Bakerfield',\n      street: '317 Angus Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_1.png',\n    createdAt: 1554670800000,\n    username: 'adam.denisov@devias.io',\n    name: 'Adam Denisov',\n    phone: '858-602-3409'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'California',\n      city: 'Redondo Beach',\n      street: '2188  Armbrester Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_7.png',\n    createdAt: 1554325200000,\n    username: 'ava.gregoraci@devias.io',\n    name: 'Ava Gregoraci',\n    phone: '415-907-2647'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Nevada',\n      city: 'Las Vegas',\n      street: '1798  Hickory Ridge Drive'\n    },\n    avatarUrl: '/static/images/avatars/avatar_8.png',\n    createdAt: 1523048400000,\n    username: 'emilee.simchenko@devias.io',\n    name: 'Emilee Simchenko',\n    phone: '702-661-1654'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Michigan',\n      city: 'Detroit',\n      street: '3934  Wildrose Lane'\n    },\n    avatarUrl: '/static/images/avatars/avatar_9.png',\n    createdAt: 1554702800000,\n    username: 'kwak.seong.min@devias.io',\n    name: 'Kwak Seong-Min',\n    phone: '313-812-8947'\n  },\n  {\n    id: uuid(),\n    address: {\n      country: 'USA',\n      state: 'Utah',\n      city: 'Salt Lake City',\n      street: '368 Lamberts Branch Road'\n    },\n    avatarUrl: '/static/images/avatars/avatar_10.png',\n    createdAt: 1522702800000,\n    username: 'merrile.burgett@devias.io',\n    name: 'Merrile Burgett',\n    phone: '801-301-7894'\n  }\n];\n","import AuthenticationService from '../../../service/AuthenticationService';\nimport axios from 'axios'\nconst API_URL = AuthenticationService.getApiUrl();\n\n\nclass EncuestaService {\n\n    findAll() {\n        return axios.get(`${API_URL}/pedido/`);\n    }\n\n    findById(id) {\n        return axios.get(`${API_URL}/pedido/${id}`);\n    }\n\n    findPreguntasById(id) {\n        return axios.get(`${API_URL}/pedido/preguntas/${id}`);\n    }\n\n    findRespuestasById(id) {\n        return axios.get(`${API_URL}/pedido/respuestas/${id}`);\n    }\n    \n    save(data){\n        return axios.post(`${API_URL}/pedido/`,data);\n    }\n\n    update(id, data){\n        return axios.put(`${API_URL}/detalle/${id}`, data);\n    }\n\n    updatePedido(id, data){\n        return axios.put(`${API_URL}/pedido/${id}`, data);\n    }\n}\n\nexport const findAllr = async () => {\n    try {\n        const data = await axios.get(`${API_URL}/pedido/`);\n        return data.data;\n        //return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n    } catch (error) {\n        return error;\n    }\n};\n\nexport default new EncuestaService();","import React, { useState, useEffect, Component} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles,\n  Button\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\nimport data from './data';\nimport EncuestaService,{findAllr} from '../service/encuestaService';\nimport moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nexport default class CustomerListView extends Component{\n\n  constructor(props){\n    super(props)\n    this.state={\n      data:data,\n      dataEncuesta:[],\n      dataEncuestaFormated:[]\n    }\n  }\n\n  componentDidMount(){\n    this.loadAllEncuestas()\n  }  \n\n  loadAllEncuestas(){\n    EncuestaService.findAll()\n    .then(response=>{\n      console.log(response.data)\n      this.setState({dataEncuesta:response.data})\n      this.makeDataEncuesta(response.data)\n    }).catch(\n      err=>{\n        console.error(err)\n      }\n    )\n  }\n\n  makeDataEncuesta(objEncuesta){\n    let objTemp = []\n    objEncuesta.map(\n      a=>{\n        objTemp.push(\n          {\n            direccion_puesto: a.direccion_puesto,\n            elaborado_por: a.elaborado_por,\n            fecha_pedido: moment(a.fecha_pedido).format('DD/MM/YYYY HH:MM'),\n            id: a.id,\n            id_encuesta: a.id_encuesta,\n            nombre_puesto: a.nombre_puesto,\n            nombre_usuario: a.nombre_usuario,\n            button:a.id\n          }\n        )\n      }\n    )\n      this.setState({dataEncuestaFormated:objTemp})\n    //console.log(objTemp)\n  }\n\n  render(){\n    return (\n      <Page\n        className={useStyles.root}\n        title=\"Lista de encuestas realizadas\"\n      >\n        <Container maxWidth={false}>   \n          <Toolbar  />     \n          <Box mt={3}>\n            <Results customers={data} encuestas={this.state.dataEncuestaFormated} />\n          </Box>\n        </Container>\n      </Page>\n    );\n  }\n}\n\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.red[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.red[900]\n  },\n  differenceValue: {\n    color: colors.red[900],\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Budget = ({ className,data, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              TOTAL ENCUESTAS ÚLTIMOS 30 DÍAS\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              {(data!==null)?data.total_encuestas_last_month:0}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AssignmentIndIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        {/**<Box\n          mt={2}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <ArrowDownwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            12%\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            Since last month\n          </Typography>\n        </Box>**/}\n      </CardContent>\n    </Card>\n  );\n};\n\nBudget.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Budget;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { v4 as uuid } from 'uuid';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Chip,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TableSortLabel,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst data = [\n  {\n    id: uuid(),\n    ref: 'CDD1049',\n    amount: 30.5,\n    customer: {\n      name: 'Ekaterina Tankova'\n    },\n    createdAt: 1555016400000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1048',\n    amount: 25.1,\n    customer: {\n      name: 'Cao Yu'\n    },\n    createdAt: 1555016400000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1047',\n    amount: 10.99,\n    customer: {\n      name: 'Alexa Richardson'\n    },\n    createdAt: 1554930000000,\n    status: 'refunded'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1046',\n    amount: 96.43,\n    customer: {\n      name: 'Anje Keizer'\n    },\n    createdAt: 1554757200000,\n    status: 'pending'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1045',\n    amount: 32.54,\n    customer: {\n      name: 'Clarke Gillebert'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  },\n  {\n    id: uuid(),\n    ref: 'CDD1044',\n    amount: 16.76,\n    customer: {\n      name: 'Adam Denisov'\n    },\n    createdAt: 1554670800000,\n    status: 'delivered'\n  }\n];\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  actions: {\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst LatestOrders = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [orders] = useState(data);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Latest Orders\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={800}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Order Ref\n                </TableCell>\n                <TableCell>\n                  Customer\n                </TableCell>\n                <TableCell sortDirection=\"desc\">\n                  <Tooltip\n                    enterDelay={300}\n                    title=\"Sort\"\n                  >\n                    <TableSortLabel\n                      active\n                      direction=\"desc\"\n                    >\n                      Date\n                    </TableSortLabel>\n                  </Tooltip>\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orders.map((order) => (\n                <TableRow\n                  hover\n                  key={order.id}\n                >\n                  <TableCell>\n                    {order.ref}\n                  </TableCell>\n                  <TableCell>\n                    {order.customer.name}\n                  </TableCell>\n                  <TableCell>\n                    {moment(order.createdAt).format('DD/MM/YYYY')}\n                  </TableCell>\n                  <TableCell>\n                    <Chip\n                      color=\"primary\"\n                      label={order.status}\n                      size=\"small\"\n                    />\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nLatestOrders.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestOrders;\n","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport moment from 'moment';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles\n} from '@material-ui/core';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst data = [\n  {\n    id: uuid(),\n    name: 'Dropbox',\n    imageUrl: '/static/images/products/product_1.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Medium Corporation',\n    imageUrl: '/static/images/products/product_2.png',\n    updatedAt: moment().subtract(2, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Slack',\n    imageUrl: '/static/images/products/product_3.png',\n    updatedAt: moment().subtract(3, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'Lyft',\n    imageUrl: '/static/images/products/product_4.png',\n    updatedAt: moment().subtract(5, 'hours')\n  },\n  {\n    id: uuid(),\n    name: 'GitHub',\n    imageUrl: '/static/images/products/product_5.png',\n    updatedAt: moment().subtract(9, 'hours')\n  }\n];\n\nconst useStyles = makeStyles(({\n  root: {\n    height: '100%'\n  },\n  image: {\n    height: 48,\n    width: 48\n  }\n}));\n\nconst LatestProducts = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [products] = useState(data);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        subtitle={`${products.length} in total`}\n        title=\"Latest Products\"\n      />\n      <Divider />\n      <List>\n        {products.map((product, i) => (\n          <ListItem\n            divider={i < products.length - 1}\n            key={product.id}\n          >\n            <ListItemAvatar>\n              <img\n                alt=\"Product\"\n                className={classes.image}\n                src={product.imageUrl}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              primary={product.name}\n              secondary={`Updated ${product.updatedAt.fromNow()}`}\n            />\n            <IconButton\n              edge=\"end\"\n              size=\"small\"\n            >\n              <MoreVertIcon />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n      <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          View all\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nLatestProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default LatestProducts;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Bar } from 'react-chartjs-2';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Sales = ({ className,dataP, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  let data1 = [];\n  let data2 = [];\n  let meses = [];\n  console.log(\"Recibiendo\"+JSON.stringify(dataP));\n\n  if(dataP!==null){\n    dataP.map(\n      e=>{\n        data1.push(e.total)\n        data2.push(e.total2)\n        meses.push(e.mes)\n      }\n    )\n  }\n\n  console.log(\"#\"+data1);\n  console.log(\"#2\"+data2);\n\n  const data = {\n    datasets: [\n      {\n        backgroundColor: colors.indigo[500],\n        data: data1,\n        label: 'Este año'\n      },\n      {\n        backgroundColor: colors.grey[200],\n        data: data2,\n        label: 'Año pasado'\n      }\n    ],\n    labels: meses\n  };\n\n  const options = {\n    animation: false,\n    cornerRadius: 20,\n    layout: { padding: 0 },\n    legend: { display: false },\n    maintainAspectRatio: false,\n    responsive: true,\n    scales: {\n      xAxes: [\n        {\n          barThickness: 12,\n          maxBarThickness: 10,\n          barPercentage: 0.5,\n          categoryPercentage: 0.5,\n          ticks: {\n            fontColor: theme.palette.text.secondary\n          },\n          gridLines: {\n            display: false,\n            drawBorder: false\n          }\n        }\n      ],\n      yAxes: [\n        {\n          ticks: {\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0\n          },\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          }\n        }\n      ]\n    },\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        title=\"Encuestas por mes (Comparado con año anterior)\"\n      />\n      <Divider />\n      <CardContent>\n        <Box\n          height={400}\n          position=\"relative\"\n        >\n          <Bar\n            data={data}\n            options={options}\n          />\n        </Box>\n      </CardContent>\n      <Divider />\n      <Box\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        p={2}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon />}\n          size=\"small\"\n          variant=\"text\"\n        >\n          Overview\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nSales.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Sales;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  LinearProgress,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport InsertChartIcon from '@material-ui/icons/InsertChartOutlined';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.orange[600],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst TasksProgress = ({ className,data, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              NUEVOS USUARIOS LOS ÚLTIMOS 30 DÍAS\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              {(data!==null)?data.total_usuarios_last_month:0}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <InsertChartIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        {/**<Box mt={3}>\n          <LinearProgress\n            value={75.5}\n            variant=\"determinate\"\n          />\n        </Box>**/}\n      </CardContent>\n    </Card>\n  );\n};\n\nTasksProgress.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TasksProgress;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport PeopleIcon from '@material-ui/icons/PeopleOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.green[600],\n    height: 56,\n    width: 56\n  },\n  differenceIcon: {\n    color: colors.green[900]\n  },\n  differenceValue: {\n    color: colors.green[900],\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst TotalCustomers = ({ className,data, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              TOTAL USUARIOS\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              {(data!==null)?data.total_usuarios:0}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <PeopleIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n        {/**<Box\n          mt={2}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <ArrowUpwardIcon className={classes.differenceIcon} />\n          <Typography\n            className={classes.differenceValue}\n            variant=\"body2\"\n          >\n            16%\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"caption\"\n          >\n            Since last month\n          </Typography>\n        </Box>**/}\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalCustomers.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalCustomers;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors\n} from '@material-ui/core';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  },\n  avatar: {\n    backgroundColor: colors.indigo[600],\n    height: 56,\n    width: 56\n  }\n}));\n\nconst TotalProfit = ({ className,data, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n            >\n              TOTAL PREGUNTAS RESPONDIDAS\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n            >\n              {(data!==null)?data.preguntas_respondidas:0}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar className={classes.avatar}>\n              <AssignmentIcon />\n            </Avatar>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nTotalProfit.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TotalProfit;\n","import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Doughnut } from 'react-chartjs-2';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Typography,\n  colors,\n  makeStyles,\n  useTheme\n} from '@material-ui/core';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport TabletIcon from '@material-ui/icons/Tablet';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    height: '100%'\n  }\n}));\n\nconst TrafficByDevice = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        data: [63, 15, 22],\n        backgroundColor: [\n          colors.indigo[500],\n          colors.red[600],\n          colors.orange[600]\n        ],\n        borderWidth: 8,\n        borderColor: colors.common.white,\n        hoverBorderColor: colors.common.white\n      }\n    ],\n    labels: ['Desktop', 'Tablet', 'Mobile']\n  };\n\n  const options = {\n    animation: false,\n    cutoutPercentage: 80,\n    layout: { padding: 0 },\n    legend: {\n      display: false\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n    tooltips: {\n      backgroundColor: theme.palette.background.default,\n      bodyFontColor: theme.palette.text.secondary,\n      borderColor: theme.palette.divider,\n      borderWidth: 1,\n      enabled: true,\n      footerFontColor: theme.palette.text.secondary,\n      intersect: false,\n      mode: 'index',\n      titleFontColor: theme.palette.text.primary\n    }\n  };\n\n  const devices = [\n    {\n      title: 'Desktop',\n      value: 63,\n      icon: LaptopMacIcon,\n      color: colors.indigo[500]\n    },\n    {\n      title: 'Tablet',\n      value: 15,\n      icon: TabletIcon,\n      color: colors.red[600]\n    },\n    {\n      title: 'Mobile',\n      value: 23,\n      icon: PhoneIcon,\n      color: colors.orange[600]\n    }\n  ];\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Traffic by Device\" />\n      <Divider />\n      <CardContent>\n        <Box\n          height={300}\n          position=\"relative\"\n        >\n          <Doughnut\n            data={data}\n            options={options}\n          />\n        </Box>\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          mt={2}\n        >\n          {devices.map(({\n            color,\n            icon: Icon,\n            title,\n            value\n          }) => (\n            <Box\n              key={title}\n              p={1}\n              textAlign=\"center\"\n            >\n              <Icon color=\"action\" />\n              <Typography\n                color=\"textPrimary\"\n                variant=\"body1\"\n              >\n                {title}\n              </Typography>\n              <Typography\n                style={{ color }}\n                variant=\"h2\"\n              >\n                {value}\n                %\n              </Typography>\n            </Box>\n          ))}\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nTrafficByDevice.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TrafficByDevice;\n","import AuthenticationService from '../../../service/AuthenticationService';\nimport axios from 'axios'\nconst API_URL = AuthenticationService.getApiUrl();\n\n\nclass DashboardService {\n\n    loadDashboardInfo() {\n        return axios.get(`${API_URL}/encuesta/dashboard`);\n    }\n\n    loadDashboardInfo2() {\n        return axios.get(`${API_URL}/encuesta/dashboard2`);\n    }\n\n    whoami(){\n        return axios.get(`${API_URL}/usuario/whoami`);\n    }\n}\n\nexport default new DashboardService();","import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport LastestEncuestas from './LastestEncuestas';\nimport LatestOrders from './LatestOrders';\nimport LatestProducts from './LatestProducts';\nimport Sales from './Sales';\nimport LastestUsers from './LastestUsers';\nimport TotalUsuarios from './TotalUsuarios';\nimport TotalPreguntasRespondidas from './TotalPreguntasRespondidas';\nimport TrafficByDevice from './TrafficByDevice';\nimport DashboardService from '../Service/serviceDashboard';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  const [infoDasboard, setInfoDasboard] = useState(null);\n  const [infoDasboard2, setInfoDasboard2] = useState(null);\n\n  useEffect(()=>{\n    function loadDashboardInfo(){\n      DashboardService.loadDashboardInfo()\n      .then(response=>{\n        //console.log(response.data)\n        setInfoDasboard(response.data)\n      }).catch(err=>{\n        console.error(err)\n      })\n    }\n    loadDashboardInfo();\n  },[]);\n  useEffect(()=>{\n    function loadDashboardInfo2(){\n      DashboardService.loadDashboardInfo2()\n      .then(response=>{\n        console.log(response.data)\n        setInfoDasboard2(response.data)\n      }).catch(err=>{\n        console.error(err)\n      })\n    }\n    loadDashboardInfo2();\n  },[]);\n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard\"\n    >\n      <Container maxWidth={false}>\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <LastestEncuestas data={infoDasboard} />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalUsuarios data={infoDasboard} />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <LastestUsers data={infoDasboard} />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalPreguntasRespondidas data={infoDasboard} />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <Sales dataP={infoDasboard2} />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <TrafficByDevice />\n          </Grid>\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Dashboard;\n","/* eslint-disable no-empty */\n/* eslint-disable no-unused-vars */\n/**\n * Script varios en JavaScript escritos por Eliezer Hernández, eliohernandez94@gmail.com.com. * \n * @author Eliezer Hernández * \n * @version 1.0\n * Fecha\t\tCR\t     Nombre\t\t\t\tDescripcion\n * ------------\t-------- ------------------- ---------------------------------------------\n * 09/01/2021\tENC-1\t Eliezer Hernandez\tValidaciones globales.\n \n * LAST LINE HISTORY\n * */\n\nclass solReact {//Soluciones en ReactJS\n    /** * Validar si un campo es vacio \n     * @param myfield\tCampo (<input>)\n     * @return\t true si el campo es vacio\n     */\n    isNull(myfield) {\n        return this.isNull2(myfield, myfield.name);\n    }\n    isNull2(myfield, myfieldname) {\n        if (myfield.type === \"select-one\" && (myfield.value === \"\" || myfield.value === \"0\" || myfield.value === \"-1\")) {\n            this.setInvalid(myfield, \"Este campo no puede quedar vacío.\" + ((myfieldname === null) ? \"\" : \" (\" + myfieldname + \")\"));\n            return (true);\n        }\n        else {\n            if (myfield.value === \"\") {\n                this.setInvalid(myfield, \"Este campo no puede quedar vacío.\" + ((myfieldname === null) ? \"\" : \" (\" + myfieldname + \")\"));\n                return (true);\n            }\n            else {\n                this.setValid(myfield);\n                return (false);\n            }\n        }\n    }\n\n    setValid(myfield) {\n        if (myfield) {\n            if (myfield.style) {\n                if (myfield.className === \"mdt\" || myfield.className === \"mdtR\") {\n                    myfield.style.background = \"none repeat-x scroll center bottom #fffff9\";\n                }\n                else {\n                    myfield.style.background = \"none repeat-x scroll center bottom #FFFFFF\";\n                }\n                myfield.style.borderColor = \"#28a745\";\n                myfield.style.backgroundImage = \"\";\n            }\n            if (document.getElementById(myfield.name + '_img'))\n                document.getElementById(myfield.name + '_img').src = 'images/validated.gif';\n            if (document.getElementById(myfield.name + '_span')) {\n                document.getElementById(myfield.name + '_span').style.display = \"none\";\n            }\n            if(document.getElementById(myfield.name)){\n                document.getElementById(myfield.name).style.borderColor = \"#28a745\";\n            }\n        }\n    }\n\n    setInvalid(myfield, msg) {\n        if(msg===undefined || msg===''){\n            msg= \"Campo requerido\";\n        }\n        if (document.getElementById(myfield.name + '_img'))\n            document.getElementById(myfield.name + '_img').src = 'images/exclamation.gif';\n        if (document.getElementById(myfield.name + '_span')) {\n            document.getElementById(myfield.name + '_span').innerHTML = msg;\n            document.getElementById(myfield.name + '_span').style.display = \"block\";\n            document.getElementById(myfield.name + '_span').style.fontSize = '80%';\n            document.getElementById(myfield.name + '_span').style.marginTop = '.25rem';\n            document.getElementById(myfield.name + '_span').style.color = \"#dc3545\";\n        } else {\n            alert(msg);\n        }\n        if (myfield.style) {\n            if (myfield.className === \"mdt\" || myfield.className === \"mdtR\")\n                myfield.style.background = \"none repeat-x scroll center bottom #ffff99\";\n            else{\n                myfield.style.background = \"none repeat-x scroll center bottom #FFFFFF\";\n                myfield.style.backgroundImage = \"url(images/invalid_line.gif)\";\n                myfield.style.borderColor = \"#dc3545\";\n                if(document.getElementById(myfield.name)){\n                    document.getElementById(myfield.name).style.borderColor = \"#dc3545\";\n                }\n                \n            }            \n        }\n    }\n\n    /*** Validar si un campo contiene un numero positivo valido (entero o flotante, no vacio).* \n    * @param myfield\tCampo (<input>)\n    * @return\t true si el campo es valido\n    */\n    setInvalidPrimeReact(myfield, msg) {\n        if(msg===undefined || msg===''){\n            msg= \"Campo requerido\";\n        }\n        if (document.getElementById(myfield.name + '_span')) {\n            document.getElementById(myfield.name + '_span').innerHTML = msg;\n            document.getElementById(myfield.name + '_span').style.display = \"block\";\n            document.getElementById(myfield.name + '_span').style.fontSize = '80%';\n            document.getElementById(myfield.name + '_span').style.marginTop = '.25rem';\n            document.getElementById(myfield.name + '_span').style.color = \"#dc3545\";\n        }\n        if(document.getElementById(myfield.name)){\n            document.getElementById(myfield.name).classList.add(\"p-invalid\");\n        }\n    }\n\n    /*** Validar si un campo contiene un numero positivo valido (entero o flotante, no vacio).* \n    * @param myfield\tCampo (<input>)\n    * @return\t true si el campo es valido\n    */\n    setValidPrimeReact(myfield, msg) {    \n    if(document.getElementById(myfield.name)){\n        document.getElementById(myfield.name).classList.remove(\"p-invalid\");\n        document.getElementById(myfield.name).style.borderColor = \"#28a745\";\n    }\n    if (document.getElementById(myfield.name + '_span')) {\n        document.getElementById(myfield.name + '_span').style.display = \"none\";\n    }\n}\n\n    /*** Validar si un campo contiene un numero positivo valido (entero o flotante, no vacio).* \n    * @param myfield\tCampo (<input>)\n    * @return\t true si el campo es valido\n    */\n    isNumberPos(myfield) {\n        var chkNum = true;\n        if ((myfield.value !== '' && myfield.value.indexOf('.') === 0)) {\n            myfield.value = '0' + myfield.value;\n        }\n        if (myfield.value === \"\") {\n            this.setInvalid(myfield, \"Este campo tiene que contener un número POSITIVO.\");\n            myfield.value = '0';\n            chkNum = (false);\n        }\n        else if (!this.check_only_digits(myfield)) {\n            if (myfield.value === \"\")\n                myfield.value = '0';\n            chkNum = (false);\n        }\n        if ((myfield.value !== '' && isNaN(myfield.value)) || myfield.value.indexOf('.') !== myfield.value.lastIndexOf('.')) {\n            this.setInvalid(myfield, \"Número no válido. Verifíquelo.\");\n            myfield.value = \"0\";\n            chkNum = (false);\n        }\n        if (chkNum) {\n            this.setValid(myfield);\n        }\n        return chkNum;\n    }\n    /*** Valida que el campo solo contiene los caracteres: 0123456789 y el punto.* \n    * Modifica el valor del campo quitando lo caracteres no permitidos.* \n    * @param myfield\tCampo (<input>)\n    * @return\t true si solo contienia caracteres permitidos, false si contenia caracteres prohibido y entonces es quito modificando el valor del campo \n    */\n    check_only_digits(myfield) {\n        return this.check_entry(myfield,\n            \"0123456789.\",\n            \"Solo números positivos son aceptados. No espacio, subraya, etc...\"\n        );\n    }\n    check_entry(myfield, valid, msg) {\n        var ok = \"yes\";\n        var temp = \"\";\n        for (var i = 0; i < myfield.value.length; i++) {\n            temp = \"\" + myfield.value.substring(i, i + 1);\n            if (valid.indexOf(temp) === -1) { ok = \"no\"; }\n        }\n        if (ok === \"no\") {\n            temp = \"\";\n            myfield.value = myfield.value.toUpperCase();\n            for (let i = 0; i < myfield.value.length; i++) {\n                if (valid.indexOf(myfield.value.charAt(i)) === \"-1\") { }\n                else { temp += myfield.value.charAt(i); }\n            }\n            myfield.value = temp;\n            this.setInvalid(myfield, msg + \" Valor modificado para hacer cumplir la regla. Verifíquelo!\");\n            return (false);\n        }\n        else {\n            this.setValid(myfield);\n            return (true);\n        }\n    }\n    /**\n* Validar si un campo contiene una hora valida (formato hh:mm) y en un cierto rango de fechas, y no este vacia.\n* \n* @param myfield\tCampo (<input>)\n* @return\t true si la hora es valida\n*/\n    check_Hr(myfield) {\n        this.check_entry(myfield,\n            \"0123456789:\",\n            \"El formato de la hora no esta correcto. El formato es hh:mm. Valor modificado para hacer cumplir la regla. VERIFICALO!\"\n        );\n        if (myfield.value.length < 1 || myfield.value.length > 5\n            || (myfield.value.length > 2 && myfield.value.indexOf(\":\") === -1)\n            || (myfield.value.length > 2 && myfield.value.length < 5)\n        ) {\n            this.setInvalid(myfield, \"La hora es obligatoria. El formato es hh:mm\");\n            return false;\n        } else {\n\n            var hr = myfield.value.substring(0, 1);\n            if (myfield.value.length > 1) { hr = myfield.value.substring(0, 2); }\n            var minu = '0';\n            if (myfield.value.length < 1) { minu = 'NA'; }\n            if (myfield.value.length === 5) { minu = myfield.value.substring(3, 5); }\n            if ((isNaN(hr)) || (isNaN(minu))) {\n                this.setInvalid(myfield, \"La hora es obligatoria. El formato es hh:mm\");\n                return false;\n            }\n            else if ((hr > 23) || (minu > 59)) {\n                this.setInvalid(myfield, \"La hora es obligatoria. El formato es hh:mm\");\n                return false;\n            }\n            else {\n                this.setValid(myfield);\n                return true;\n            }\n        }\n    }\n    parseJwt(token) {\n        var base64Url = token.split('.')[1];\n        var base64 = base64Url.replace('-', '+').replace('_', '/');\n        //var date = new Date(1572575093*1000);//Convertir fecha unix a fecha normal javascript\n        \n        return JSON.parse(window.atob(base64));\n    }\n    getQueryVariable(variable) {    \n        var query = window.location.search.substring(1);    \n        var vars = query.split(\"&\");\n        for (var i=0; i < vars.length; i++) {\n            var pair = vars[i].split(\"=\");\n            if(pair[0] === variable) {\n                return pair[1];\n            }\n        }\n        return false;\n    }\n\n    /**\n    * Limpiar formulario , poner todos valores en vacio.\n    * \n    * @param  form\tId form (<form>)\n    * @param  form\tId del field de excepcion field (<input o cualquier otro>)\n    * @return\t true Si todo correcto\n    */\n    cleanFormExceptThis= async (myForm,myfield)=> {\n        let form = document.getElementById(myForm);\n        for(var i=0;i<form.elements.length;i++){\n            console.log(form.elements[i].type);\n            if(form.elements[i].type==='text'&&form.elements[i].name!==myfield){\n                form.elements[i].value='';                \n            }\n        }        \n        return true;\n    }\n\n    /**\n    * Funcion que retorna html interpretado para recat, en lugar de usar innerhtml\n    * \n    * @param  text\ttexto a formatear\n    * @return texto formateado\n    */\n    createMarkup(text) {\n        return {__html: text};\n    }\n\n    /**\n    * Funcion que retorna html interpretado para recat, en lugar de usar innerhtml\n    * \n    * @param  myform id del formulario a validar\n    * @return valida campo a campo todos los requeridos\n    */\n    validateForm(myform) {\n        let form = document.getElementById(myform)\n        for(var i=0;i<form.elements.length;i++){\n            console.log(form.elements[i].required);\n            if(form.elements[i].required){\n                if(form.elements[i].value===''){\n                    console.error(\"deberia llenarse: \"+form.elements[i].name)\n                    this.setInvalidPrimeReact(form.elements[i])\n                }else{\n                    this.setValidPrimeReact(form.elements[i])\n                }                \n            }\n        }\n    }\n\n}//Fin Class\n\nexport default new solReact();","import React, { useState }from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AuthenticationService from '../../service/AuthenticationService';\nimport solReact from '../../js/solReact';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst LoginView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [open, setOpen] = useState(false);\n  const [msgToast, setMsgToast] = useState(false);  \n\n  const handleClose = ()=>{\n    setOpen(false);\n  }\n\n  const showMessage = (msg)=>{\n    setMsgToast(msg)\n    setOpen(true)    \n  }\n  return (\n    <Page\n      className={classes.root}\n      title=\"Login\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              username: '',\n              password: ''\n            }}\n            validationSchema={Yup.object().shape({\n              username: Yup.string().max(255).required('Usuario es requerido'),\n              password: Yup.string().max(255).required('Contraseña es requerida')\n            })}\n            onSubmit={(values,isSubmitting) => {     \n              isSubmitting = true;         \n              AuthenticationService\n                .executeJwtAuthenticationService(values.username, values.password)\n                .then((response) => {\n                    //AuthenticationService.registerSuccessfulLoginForJwt(this.state.username, response.data.token)\n                    var test = solReact.parseJwt(response.data.token);\n                    var USER = test.sub;\n                    AuthenticationService.registerSuccessfulLoginForJwt(USER, response.data.token)\n                    AuthenticationService.setupAxiosInterceptors(AuthenticationService.createJWTToken(response.data.token));\n                    window.location = process.env.PUBLIC_URL+\"/app/dashboard\" //Ruta para obligar a refrescar y cargar de nuevo las rutas\n                    //navigate('/app/dashboard', { replace: true });                    \n                    isSubmitting = false;\n                }).catch((err) => {                    \n                    //console.log(err.response.data.message) \n                    showMessage(String(err).indexOf(\"401\")>0?String(err.response.data.message):String(err))                   \n                    isSubmitting = false;\n                })              \n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitionCompleted,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Iniciar Sesión\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Ingresar al sistema de encuesta\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.username && errors.username)}\n                  fullWidth\n                  helperText={touched.username && errors.username}\n                  label=\"Usuario\"\n                  margin=\"normal\"\n                  name=\"username\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"text\"\n                  value={values.username.trim()}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Contraseña\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password.trim()}\n                  variant=\"outlined\"\n                />\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitionCompleted}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Ingresar\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n      <Snackbar\n          anchorOrigin={{ vertical: 'top',\n          horizontal: 'center'}}\n          open={open}\n          onClose={handleClose}\n          variant=\"error\"\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">{msgToast}</span>}\n        />\n    </Page>\n  );\n};\n\nexport default LoginView;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  Typography,\n  makeStyles,\n  Button\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  image: {\n    marginTop: 50,\n    display: 'inline-block',\n    maxWidth: '100%',\n    width: 560\n  }\n}));\n\nconst NotFoundView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"404\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"md\">\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"h1\"\n          >\n            404: The page you are looking for isn’t here\n          </Typography>\n          <Typography\n            align=\"center\"\n            color=\"textPrimary\"\n            variant=\"subtitle2\"\n          >\n            You either tried some shady route or you came here by mistake.\n            Whichever it is, try using the navigation\n          </Typography>\n          <Box textAlign=\"center\">\n            <img\n              alt=\"Under development\"\n              className={classes.image}\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            />\n          </Box>\n          <Box textAlign=\"center\">\n            <Button variant=\"outlined\" color=\"primary\" onClick={(e)=>{window.location='/app/dashboard'}}>Regresar</Button>\n          </Box>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default NotFoundView;\n","import AuthenticationService from '../../../service/AuthenticationService';\nimport axios from 'axios'\nconst API_URL = AuthenticationService.getApiUrl();\n\nvar configExport = {\n    responseType: 'blob'\n}\nclass EncuestaService {\n\n    findAll() {\n        return axios.get(`${API_URL}/encuesta/`);\n    }\n\n    findById(id) {\n        return axios.get(`${API_URL}/encuesta/${id}`);\n    }    \n    \n    loadReport(reportName,data){\n        return axios.post(`${API_URL}/reportes/${reportName}`,data, configExport);\n    }\n\n    loadReportExcel(reportName,data){\n        return axios.post(`${API_URL}/reportes/${reportName}/xlsx/`,data, configExport);\n    }\n\n}\n\nexport const findAllAsync = async () => {\n    try {\n        const data = await axios.get(`${API_URL}/encuesta/`);\n        return data.data;\n        //return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n    } catch (error) {\n        return error;\n    }\n};\n\nexport default new EncuestaService();","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CustomizedSnackbars(props) {\n  console.log(props.setOpen)\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(props.setOpen);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>      \n      <Snackbar open={open} autoHideDuration={6000} onClose={()=>setOpen(false)} anchorOrigin={{ vertical: 'top', horizontal: 'right' }}>\n        <Alert onClose={()=>setOpen(false)} severity={props.severity}>\n          {props.msj}\n        </Alert>\n      </Snackbar>\n      <Button id={\"btn-show-alert\"} variant=\"outlined\" onClick={handleClick} style={{display:'none'}}>\n        Open success snackbar\n      </Button>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  makeStyles,\n  Card,\n  CardHeader,\n  Divider,\n  TextField,\n  Button,\n  IconButton,\n  FormControl,\n  InputLabel,\n  Select\n} from '@material-ui/core';\nimport { Pagination } from '@material-ui/lab';\nimport Page from 'src/components/Page';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport serviceReport from '../service/serviceReport';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport ExplicitIcon from '@material-ui/icons/Explicit';\nimport CustomizedSnackbars from 'src/components/CustomizedSnackbars';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(1),\n    paddingTop: theme.spacing(1)\n  },\n  productCard: {\n    height: '100%'\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n  grid: {\n    marginTop: 15\n  }\n}));\n\n\n\nconst ReportAllEncuesta = (data) => {\n  const classes = useStyles();\n  const [fecha] = useState(new Date())\n  const [idEncuesta, setIdEncuesta] = useState('')\n  const [openAlert,setOpenAlert] = useState(false);\n  const [msj,setMsj] = useState('');\n  const [severity,setSeverity] = useState('warning')\n  console.log(\"Recibiendo: \" + data.encuestas)\n\n  const handleSubmit = (e) => {\n    //alert(e.target.name)\n    e.preventDefault()\n    let fechaInicio = moment(document.getElementById(\"fecha-inicio\").value).format(\"YYYY-MM-DD HH:mm:ss\");\n    let fechaFinal = moment(document.getElementById(\"fecha-final\").value).format(\"YYYY-MM-DD HH:mm:ss\");\n\n    if(idEncuesta===undefined || idEncuesta===''){\n      ShowAlert(\"Debe Seleccionar una Encuesta primero\")\n    }else{\n      let obj = {\n        fecha_inicio: fechaInicio,\n        fecha_fin: fechaFinal,\n        imagen: \"logo.png\",\n        idEncuesta:idEncuesta\n      }\n      console.log(fechaInicio)\n      getReport(\"encuesta\", obj)\n    }\n  }\n\n  const handleSubmitExcel = (e) => {\n    //alert(e.target.name)\n    e.preventDefault()\n    let fechaInicio = moment(document.getElementById(\"fecha-inicio\").value).format(\"YYYY-MM-DD HH:mm:ss\");\n    let fechaFinal = moment(document.getElementById(\"fecha-final\").value).format(\"YYYY-MM-DD HH:mm:ss\");\n\n    if(idEncuesta===undefined || idEncuesta===''){\n      ShowAlert(\"Debe Seleccionar una Encuesta primero\")\n    }else{\n      let obj = {\n        fecha_inicio: fechaInicio,\n        fecha_fin: fechaFinal,\n        imagen: \"logo.png\"\n      }\n      console.log(fechaInicio)\n      getReportExcel(\"encuesta\", obj)\n    }\n  }\n\n  const getReportExcel = (nombre, obj) => {\n    serviceReport.loadReportExcel(nombre, obj)\n      .then(response => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'encuesta.xlsx'); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n      }).catch(err => {\n        console.error(err)\n      })\n  }\n\n  const getReport = (nombre, obj) => {\n    serviceReport.loadReport(nombre, obj)\n      .then(response => {\n        console.log(response.data)\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'encuesta.pdf'); //or any other extension\n        document.body.appendChild(link);\n        link.click();\n      }).catch(err => {\n        console.error(err)\n      })\n  }\n\n  const handleChange = (e) => {\n    setIdEncuesta(e.target.value)\n  }\n\n  const ShowAlert = (msj) => {\n    let btnShow = document.getElementById(\"btn-show-alert\");\n    setOpenAlert(true)\n    setMsj(msj)\n    btnShow.click()\n  }\n\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Reportes index\"\n    >\n      <Container maxWidth={false}>\n\n        <Box mt={1}>\n          <Card className={clsx(classes.root)} style={{ padding: 10, backgroundColor: '#BBDEFB', border: '1px solid #0D47A1' }}  >\n            <CardHeader\n              title=\"Reporte Todas las Encuestas\"\n              subheader=\"Reporte de encuesta entre fechas\"\n            />\n            <form className={classes.container} noValidate autoComplete=\"off\" >\n              <Divider style={{ marginBottom: 5 }} />\n              <Grid\n                container\n                spacing={1}\n              >\n                <Grid\n                  className={useStyles.grid}\n                  item\n                  md={12}\n                  sm={12}\n                  xs={12}\n                >\n                  <FormControl className={useStyles.formControl} style={{ marginLeft: 8, marginBottom: 8 }}>\n                    <InputLabel id=\"demo-controlled-open-select-label\">Encuesta</InputLabel>\n                    <Select\n                      native\n                      value={idEncuesta}\n                      onChange={handleChange}\n                      inputProps={{\n                        name: 'encuesta',\n                        id: 'encuesta',\n                      }}\n                      fullWidth\n                      style={{ width: '250px' }}\n                    >\n                      <option aria-label=\"None\" value=\"\" />\n                      {data.encuestas != undefined && data.encuestas.map((d) => {\n                        return (\n                          <option aria-label=\"None\" value={d.id} label={d.nombre_encuesta} />\n                        )\n                      })}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid\n                  className={useStyles.grid}\n                  item\n                  lg={6}\n                  md={4}\n                  sm={6}\n                  xs={12}\n                >\n                  <TextField\n                    id=\"fecha-inicio\"\n                    label=\"Fecha Inicio\"\n                    type=\"datetime-local\"\n                    defaultValue={moment(fecha).format(\"YYYY-MM-DDTHH:mm\")}\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    fullWidth\n                  />\n\n                  <TextField\n                    id=\"fecha-final\"\n                    label=\"Fecha Final\"\n                    type=\"datetime-local\"\n                    defaultValue={moment(fecha).format(\"YYYY-MM-DDTHH:mm\")}\n                    className={classes.textField}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    style={{ marginLeft: 10 }}\n                    fullWidth\n                  />\n\n\n                </Grid>\n                <Grid\n                  className={useStyles.grid}\n                  item\n                  lg={6}\n                  md={4}\n                  sm={6}\n                  xs={12}\n                >\n                  <Button variant=\"contained\" type=\"submit\" color=\"secondary\" name=\"btn_export_pdf\"\n                    style={{ marginTop: 20, marginLeft: 10 }} startIcon={<PictureAsPdfIcon />}\n                    onClick={handleSubmit}>Generar PDF</Button>\n                  <Button\n                    onClick={handleSubmitExcel}\n                    variant=\"contained\" type=\"submit\" color=\"secondary\" style={{ marginTop: 20, marginLeft: 10 }} \n                    startIcon={<ExplicitIcon />} >Generar Excel</Button>\n                </Grid>\n\n              </Grid>\n\n            </form>\n          </Card>\n        </Box>\n      </Container>\n      <CustomizedSnackbars setOpen={openAlert} severity={severity} msj={msj} />\n    </Page>\n  );\n};\n\nexport default ReportAllEncuesta;\n","import React,{useState,useEffect} from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport ReportAllEncuesta from './ReportAllEncuesta';\nimport serviceReport from '../service/serviceReport';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n const [arrayEncuesta, setArryEncuesta] = useState([])\n\n useEffect(()=>{\n  function loadAll(){\n    serviceReport.findAll()\n    .then(response=>{\n      console.log(response.data)\n      setArryEncuesta(response.data)\n    }).catch(err=>{\n      console.error(err)\n    })\n  }\n\n  loadAll();\n\n },[]);\n \n\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Reportes\"\n    >\n      <Container maxWidth={false}>\n        <Grid\n          container\n          spacing={1}\n        >\n          <Grid\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n          >\n            <ReportAllEncuesta encuestas={arrayEncuesta} />\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n          >\n            <ReportAllEncuesta />\n          </Grid>\n          <Grid\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n          >\n            <ReportAllEncuesta />\n          </Grid>\n          <Grid\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n          >\n            <ReportAllEncuesta />\n          </Grid>\n          \n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  Container,\n  FormHelperText,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst RegisterView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Register\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              username: '',\n              firstName: '',\n              lastName: '',\n              password: '',\n              policy: false\n            }}\n            validationSchema={\n              Yup.object().shape({\n                username: Yup.string().username('Must be a valid username').max(255).required('Username is required'),\n                firstName: Yup.string().max(255).required('First name is required'),\n                lastName: Yup.string().max(255).required('Last name is required'),\n                password: Yup.string().max(255).required('password is required'),\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\n              })\n            }\n            onSubmit={() => {\n              navigate('/app/dashboard', { replace: true });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Create new account\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Use your username to create new account\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.firstName && errors.firstName)}\n                  fullWidth\n                  helperText={touched.firstName && errors.firstName}\n                  label=\"First name\"\n                  margin=\"normal\"\n                  name=\"firstName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.firstName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.lastName && errors.lastName)}\n                  fullWidth\n                  helperText={touched.lastName && errors.lastName}\n                  label=\"Last name\"\n                  margin=\"normal\"\n                  name=\"lastName\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  value={values.lastName}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.username && errors.username)}\n                  fullWidth\n                  helperText={touched.username && errors.username}\n                  label=\"Username Address\"\n                  margin=\"normal\"\n                  name=\"username\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"username\"\n                  value={values.username}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box\n                  alignItems=\"center\"\n                  display=\"flex\"\n                  ml={-1}\n                >\n                  <Checkbox\n                    checked={values.policy}\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    I have read the\n                    {' '}\n                    <Link\n                      color=\"primary\"\n                      component={RouterLink}\n                      to=\"#\"\n                      underline=\"always\"\n                      variant=\"h6\"\n                    >\n                      Terms and Conditions\n                    </Link>\n                  </Typography>\n                </Box>\n                {Boolean(touched.policy && errors.policy) && (\n                  <FormHelperText error>\n                    {errors.policy}\n                  </FormHelperText>\n                )}\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign up now\n                  </Button>\n                </Box>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  Have an account?\n                  {' '}\n                  <Link\n                    component={RouterLink}\n                    to=\"/login\"\n                    variant=\"h6\"\n                  >\n                    Sign in\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default RegisterView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {},\n  item: {\n    display: 'flex',\n    flexDirection: 'column'\n  }\n}));\n\nconst Notifications = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Manage the notifications\"\n          title=\"Notifications\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Notifications\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Username\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Text Messages\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n            <Grid\n              className={classes.item}\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"h6\"\n              >\n                Messages\n              </Typography>\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Username\"\n              />\n              <FormControlLabel\n                control={<Checkbox />}\n                label=\"Push Notifications\"\n              />\n              <FormControlLabel\n                control={(\n                  <Checkbox defaultChecked />\n                )}\n                label=\"Phone calls\"\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nNotifications.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Notifications;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(({\n  root: {}\n}));\n\nconst Password = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    password: '',\n    confirm: ''\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return (\n    <form\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Update password\"\n          title=\"Password\"\n        />\n        <Divider />\n        <CardContent>\n          <TextField\n            fullWidth\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          <TextField\n            fullWidth\n            label=\"Confirm password\"\n            margin=\"normal\"\n            name=\"confirm\"\n            onChange={handleChange}\n            type=\"password\"\n            value={values.confirm}\n            variant=\"outlined\"\n          />\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Update\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nPassword.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Password;\n","import AuthenticationService from '../../../service/AuthenticationService';\nimport axios from 'axios'\nconst API_URL = AuthenticationService.getApiUrl();\n\n\nclass EncuestaService {\n\n    findAll() {\n        return axios.get(`${API_URL}/encuesta/`);\n    }\n\n    findById(id) {\n        return axios.get(`${API_URL}/encuesta/${id}`);\n    }    \n    \n    save(data){\n        return axios.post(`${API_URL}/encuesta/`,data);\n    }\n\n    update(id, data){\n        return axios.put(`${API_URL}/encuesta/${id}`, data);\n    }\n\n    //Controler de Categoria preguntas\n    findByIdEncuesta(id) {\n        return axios.get(`${API_URL}/categoria-pregunta/encuesta/${id}`);\n    }\n    \n    saveEncuesta(data){\n        return axios.post(`${API_URL}/categoria-pregunta/`,data);\n    }\n\n    //Controler de preguntas\n    findByIdCategoria(id) {\n        return axios.get(`${API_URL}/pregunta/categoria/${id}`);\n    }\n    \n    savePregunta(data){\n        return axios.post(`${API_URL}/pregunta/`,data);\n    }\n\n    //Controler de Respuestas\n    findByIdPregunta(id) {\n        return axios.get(`${API_URL}/respuesta/pregunta/${id}`);\n    }\n    \n    saveRespuetas(data){\n        return axios.post(`${API_URL}/respuesta/`,data);\n    }\n}\n\nexport const findAllAsync = async () => {\n    try {\n        const data = await axios.get(`${API_URL}/encuesta/`);\n        return data.data;\n        //return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n    } catch (error) {\n        return error;\n    }\n};\n\nexport default new EncuestaService();","import 'date-fns';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nexport default function MaterialUIPickers(props) {\n  // The first commit of Material-UI\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Grid container justify=\"space-around\">\n        <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"dd/MM/yyyy\"\n          margin=\"normal\"\n          id=\"fecha_ecnuesta\"\n          label=\"Fecha Encuesta\"\n          value={props.date}\n          onChange={(e) => props.handleDateChange(e)}\n          KeyboardButtonProps={{\n            'aria-label': 'Cambiar fecha',\n          }}\n        />\n        \n      </Grid>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React, { Component } from 'react';\nimport {\n    Box,\n    Button,\n    Card,\n    CardContent,\n    CardHeader,\n    Checkbox,\n    Divider,\n    FormControlLabel,\n    Grid,\n    Typography,\n    makeStyles,\n    InputLabel,\n    Select,\n    FormControl,\n    TextField\n\n} from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EncuestaService from '../service/EncuestaServie';\nimport DateFnsUtils from '@date-io/date-fns';\nimport MaterialUIPickers from './MaterialUIPickers';\nimport CustomizedSnackbars from '../../../components/CustomizedSnackbars';\nimport { Error } from '@material-ui/icons';\nimport moment from 'moment';\nimport { toInteger } from 'lodash';\n\nconst useStyles = makeStyles(({\n    root: {},\n    item: {\n        display: 'flex',\n        flexDirection: 'column'\n    }\n}));\nexport default class Encuesta extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            arrayEncuestas: [],\n            idEncuesta:'',\n            open:false,\n            nombre_encuesta:'',\n            descripcion:'',\n            fecha_encuesta:new Date(),\n            nombre:'',\n            order:1,\n            openCat:false,\n            idCategoria:'',\n            arrayCategoria:[],\n            openPreg:false,\n            idPregunta:'',\n            arrayPreguntas:[],\n            nombre_pregunta:'',\n            order_pregunta:1,\n            nombre_respuesta:'',\n            order_respuesta:1,\n            arrayRespuestas:[],\n            idRespuesta:'',\n            openResp:false\n        }\n    }\n    componentDidMount() {\n        this.loadAllEncuestas();\n    }\n\n    loadAllEncuestas() {\n        EncuestaService.findAll()\n            .then(response => {\n                console.log(response.data)\n                this.setState({ arrayEncuestas: response.data })\n            }).catch(err => {\n                console.error(err)\n            })\n    }\n\n    loadCategoriaByIdEncuesta(id){\n        EncuestaService.findByIdEncuesta(id)\n        .then(response=>{\n            console.log(response.data)\n            this.setState({arrayCategoria:response.data})\n        }).catch(err=>{\n            console.error(err)\n            this.setState({arrayCategoria:[]})\n        })\n    }\n\n    loadPreguntaByIdCategoria(id){\n        EncuestaService.findByIdCategoria(id)\n        .then(response=>{\n            console.log(response.data)\n            this.setState({arrayPreguntas:response.data})\n        }).catch(err=>{\n            console.error(err)\n            this.setState({arrayPreguntas:[]})\n        })\n    }\n\n    //Respuestas por id de pregunta\n    loadRespuestasByIdPregunta(id){\n        EncuestaService.findByIdPregunta(id)\n        .then(response=>{\n            console.log(response.data)\n            this.setState({arrayRespuestas:response.data})\n        }).catch(err=>{\n            console.error(err)\n            this.setState({arrayRespuestas:[]})\n        })\n    }\n\n    ShowAlert(campo){\n        let btnShow = document.getElementById(\"btn-show-alert\");\n        this.setState({\n            openAlert:true,\n            msj:campo+\" no puede ser vacío!\",\n            severity:'warning'\n        })\n        btnShow.click()    \n    }\n    \n    handleChange(e){\n        //alert(e.target.value)\n        this.setState({idEncuesta:e.target.value})\n        this.loadCategoriaByIdEncuesta(parseInt(e.target.value))\n        this.setState({arrayPreguntas:[],arrayRespuestas:[]})\n    }\n\n    handleChangeCategoria(e){\n        //alert(e.target.value)\n        this.setState({idCategoria:e.target.value})\n        this.loadPreguntaByIdCategoria(parseInt(e.target.value))\n        this.setState({arrayRespuestas:[]})\n    }\n\n    handleChangePregunta(e){\n        //alert(e.target.value)\n        this.setState({idPregunta:e.target.value})\n        this.loadRespuestasByIdPregunta(parseInt(e.target.value))\n    }\n\n    handleChangeRespuesta(e){        \n        this.setState({idRespuesta:e.target.value})        \n    }\n\n    renderOptsSelect(){\n        return this.state.arrayEncuestas.map(\n            d=>(\n                <option value={d.id}>{d.nombre_encuesta}</option>\n            )\n        )\n    }\n\n    renderOptsSelectCategoria(){\n        return this.state.arrayCategoria.map(\n            d=>(\n                <option value={d.id_categoria}>{d.nombre}</option>\n            )\n        )\n    }\n\n    renderOptsSelectPregunta(){\n        return this.state.arrayPreguntas.map(\n            d=>(\n                <option value={d.id_pregunta}>{d.nombre_pregunta}</option>\n            )\n        )\n    }\n\n    renderOptsSelectRespuesta(){\n        return this.state.arrayRespuestas.map(\n            d=>(\n                <option value={d.id_respuesta}>{d.nombre_respuesta}</option>\n            )\n        )\n    }\n\n    handleClose(e){\n        this.setState({\n            open:false,\n            openCat:false,\n            openPreg:false,\n            openResp:false\n        })\n    }\n\n    onClickNueva(e){\n        this.setState({open:true})\n    }\n\n    onClickNuevaCategoria(e) {\n        this.setState({openCat:true})\n    }\n\n    onClickNuevaPregunta(e) {\n        this.setState({openPreg:true})\n    }\n\n    onClickNuevaRespuesta(e) {\n        this.setState({openResp:true})\n    }\n    \n    handleSubmit(e){\n        e.preventDefault();        \n        if (this.state.nombre_encuesta === '') {            \n            this.ShowAlert('Nombre de encuesta')          \n         }else if (this.state.descripcion === '') {            \n             this.ShowAlert('Descripcion')          \n         }\n         else{\n             let obj = {\n                 nombre_encuesta:this.state.nombre_encuesta,\n                 descripcion:this.state.descripcion,\n                 fecha_encuesta:moment(new Date(this.state.fecha_encuesta)).format(\"YYYY-MM-DD HH:mm:ss\")\n             }\n\n             this.save(obj)\n         }\n    }\n\n    handleSubmitCategoria(e){\n        e.preventDefault();        \n        if(this.state.idEncuesta!==''){\n            if (this.state.nombre === '') {            \n                this.ShowAlert('Nombre de categoria')          \n             }else if (this.state.order === '') {            \n                 this.ShowAlert('Orden')          \n             }\n             else{\n                 let obj = {\n                     nombre:this.state.nombre,\n                     order:this.state.order,\n                     id_encuesta:this.state.idEncuesta                 \n                 }\n    \n                 this.saveEncuesta(obj)\n             }\n        }else{\n            this.ShowAlert('Encuesta') \n        }\n    }\n\n    handleSubmitPregunta(e){\n        e.preventDefault();        \n        if(this.state.idCategoria!==''){\n            if (this.state.nombre_pregunta === '') {            \n                this.ShowAlert('Nombre de pregunta')          \n             }else if (this.state.order_pregunta === '') {            \n                 this.ShowAlert('Orden')          \n             }\n             else{\n                 let obj = {\n                    nombre_pregunta:this.state.nombre_pregunta,\n                     order:this.state.order_pregunta,\n                     id_categoria:{id_categoria:this.state.idCategoria    }             \n                 }\n    \n                 this.savePregunta(obj)\n             }\n        }else{\n            this.ShowAlert('Categoria') \n        }\n    }\n\n    handleSubmitRespuesta(e){\n        e.preventDefault();        \n        if(this.state.idPregunta!==''){\n            if (this.state.nombre_respuesta === '') {            \n                this.ShowAlert('Nombre de Respuesta')          \n             }else if (this.state.order_respuesta === '') {            \n                 this.ShowAlert('Orden de respuesta')          \n             }\n             else{\n                 let obj = {\n                    nombre_respuesta:this.state.nombre_respuesta,\n                     order:this.state.order_respuesta,\n                     id_pregunta:{id_pregunta:this.state.idPregunta    }             \n                 }\n    \n                 this.saveRespuesta(obj)\n             }\n        }else{\n            this.ShowAlert('Pregunta') \n        }\n    }\n\n    saveRespuesta(data){\n        let btnShow = document.getElementById(\"btn-show-alert\");\n        EncuestaService.saveRespuetas(data)\n        .then(response=>{\n            console.log(response.data)\n            this.setState({\n                openAlert: true,\n                msj: \"Guardado correctamente!\",\n                severity: 'success'\n            })\n            btnShow.click()\n            this.loadRespuestasByIdPregunta(this.state.idPregunta)\n            this.clearFieldsRespuestas()\n        }).catch(err=> {\n            console.error(Error)\n        })\n    }\n\n    savePregunta(data){\n        let btnShow = document.getElementById(\"btn-show-alert\");\n        EncuestaService.savePregunta(data)\n        .then(response=>{\n            console.log(response.data)\n            this.setState({\n                openAlert: true,\n                msj: \"Guardado correctamente!\",\n                severity: 'success'\n            })\n            btnShow.click()\n            this.loadPreguntaByIdCategoria(this.state.idCategoria)\n            this.clearFieldsPreguntas()\n        }).catch(err=> {\n            console.error(Error)\n        })\n    }\n\n    saveEncuesta(data){\n        let btnShow = document.getElementById(\"btn-show-alert\");\n        EncuestaService.saveEncuesta(data)\n        .then(response=>{\n            console.log(response.data)\n            this.setState({\n                openAlert: true,\n                msj: \"Guardado correctamente!\",\n                severity: 'success'\n            })\n            btnShow.click()\n            this.loadCategoriaByIdEncuesta(this.state.idEncuesta)\n            this.clearFieldsEncuesta()\n        }).catch(err=> {\n            console.error(Error)\n        })\n    }\n\n    save(data){\n        let btnShow = document.getElementById(\"btn-show-alert\");\n        EncuestaService.save(data)\n        .then(response=>{\n            console.log(response.data)\n            this.setState({\n                openAlert: true,\n                msj: \"Guardado correctamente!\",\n                severity: 'success'\n            })\n            btnShow.click()\n            this.loadAllEncuestas()\n            this.clearFields()\n        }).catch(err=> {\n            console.error(Error)\n        })\n    }\n\n    clearFields(){\n        this.setState({\n            nombre_encuesta:'',\n            descripcion:'',\n            fecha_encuesta:new Date(),\n            open:false\n        })\n    }\n\n    clearFieldsEncuesta(){\n        this.setState({\n            nombre:'',\n            order:'',            \n            openCat:false\n        })\n    }\n\n    clearFieldsPreguntas(){\n        this.setState({\n            nombre_pregunta:'',\n            order_pregunta:'',            \n            openPreg:false\n        })\n    }\n\n    clearFieldsRespuestas(){\n        this.setState({\n            nombre_respuesta:'',\n            order_respuesta:'',            \n            openResp:false\n        })\n    }\n\n    handleDateChange(e){\n        console.log(e)\n        this.setState({fecha_encuesta:new Date(e)})\n    }\n\n    onChangeText(e){\n        console.log(e.target)\n        this.setState({\n            [e.target.name]:e.target.value\n        })\n    }\n\n    render() {\n        return (\n            <Card>\n                <CardHeader\n                    subheader=\"Manejar Encuestas\"\n                    title=\"Encuesta\"\n                />\n                <CardContent>\n                    <Grid\n                        container\n                        spacing={6}\n                        wrap=\"wrap\"\n                    >\n                        <Grid\n                            className={useStyles.item}\n                            item\n                            md={12}\n                            sm={12}\n                            xs={12}\n                        >\n                            <FormControl className={useStyles.formControl}>\n                                <InputLabel id=\"demo-controlled-open-select-label\">Encuesta</InputLabel>\n                                <Select\n                                native\n                                value={this.state.idEncuesta}\n                                onChange={this.handleChange.bind(this)}\n                                inputProps={{\n                                    name: 'encuesta',\n                                    id: 'encuesta',\n                                }}\n                                fullWidth\n                                style={{width:'250px'}}                                \n                                >\n                                <option aria-label=\"None\" value=\"\" />\n                                {this.renderOptsSelect()}\n                                </Select>\n                            </FormControl>\n                            \n                            <FormControl>\n                            <Button variant=\"contained\" color=\"secondary\" style={{marginTop:10,marginLeft:10}}\n                            onClick={this.onClickNueva.bind(this)}\n                            >Nueva</Button>\n                            </FormControl>\n                        </Grid>\n\n                        <Grid\n                            className={useStyles.item}\n                            item\n                            md={12}\n                            sm={12}\n                            xs={12}\n                        >\n                            <FormControl className={useStyles.formControl}>\n                                <InputLabel id=\"demo-controlled-open-select-label\">Categoria de pregunta</InputLabel>\n                                <Select\n                                native\n                                value={this.state.idCategoria}\n                                onChange={this.handleChangeCategoria.bind(this)}\n                                inputProps={{\n                                    name: 'categoria',\n                                    id: 'categoria',\n                                }}\n                                fullWidth\n                                style={{width:'250px'}}\n                                >\n                                <option aria-label=\"None\" value=\"\" />\n                                {this.renderOptsSelectCategoria()}\n                                </Select>\n                            </FormControl>\n                            <FormControl>\n                            <Button variant=\"contained\" color=\"secondary\" style={{marginTop:10,marginLeft:10}}\n                            onClick={this.onClickNuevaCategoria.bind(this)}                            \n                            >Nueva</Button>\n                            </FormControl>\n                        </Grid>\n\n                        <Grid\n                            className={useStyles.item}\n                            item\n                            md={12}\n                            sm={12}\n                            xs={12}\n                        >\n                            <FormControl className={useStyles.formControl}>\n                                <InputLabel id=\"demo-controlled-open-select-label\">Pregunta</InputLabel>\n                                <Select\n                                native\n                                value={this.state.idPregunta}\n                                onChange={this.handleChangePregunta.bind(this)}\n                                inputProps={{\n                                    name: 'pregunta',\n                                    id: 'pregunta',\n                                }}\n                                fullWidth\n                                style={{width:'250px'}}\n                                >\n                                <option aria-label=\"None\" value=\"\" />\n                                {this.renderOptsSelectPregunta()}\n                                </Select>\n                            </FormControl>\n                            <FormControl>\n                            <Button variant=\"contained\" color=\"secondary\" style={{marginTop:10,marginLeft:10}}\n                            onClick={this.onClickNuevaPregunta.bind(this)}                            \n                            >Nueva</Button>\n                            </FormControl>\n                        </Grid>\n\n                        <Grid\n                            className={useStyles.item}\n                            item\n                            md={12}\n                            sm={12}\n                            xs={12}\n                        >\n                            <FormControl className={useStyles.formControl}>\n                                <InputLabel id=\"demo-controlled-open-select-label\">Respuesta</InputLabel>\n                                <Select\n                                native\n                                value={this.state.idRespuesta}\n                                onChange={this.handleChangeRespuesta.bind(this)}\n                                inputProps={{\n                                    name: 'respuesta',\n                                    id: 'respuesta',\n                                }}\n                                fullWidth\n                                style={{width:'250px'}}\n                                >\n                                <option aria-label=\"None\" value=\"\" />\n                                {this.renderOptsSelectRespuesta()}\n                                </Select>\n                            </FormControl>\n                            <FormControl>\n                            <Button variant=\"contained\" color=\"secondary\" style={{marginTop:10,marginLeft:10}}\n                            onClick={this.onClickNuevaRespuesta.bind(this)}                            \n                            >Nueva</Button>\n                            </FormControl>\n                        </Grid>\n\n                    </Grid>\n\n                    {/*Modal Nueva encuesta*/}\n                    <Dialog open={this.state.open} onClose={this.handleClose.bind(this)} aria-labelledby=\"form-dialog-title\">\n                    <form onSubmit={this.handleSubmit.bind(this)} noValidate autoComplete=\"off\">\n                        <DialogTitle id=\"form-dialog-title\">Encuesta</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText>\n                            Crear nueva encuesta es un proceso Administrativo y crítico del sistema, es su responsabilidad la correcta\n                            definición y configuración de las mismas.\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"nombre_encuesta\"\n                            name=\"nombre_encuesta\"\n                            label=\"Nombre\"\n                            type=\"text\"\n                            value={this.state.nombre_encuesta}\n                            onChange={this.onChangeText.bind(this)}\n                            fullWidth\n                        />\n                        <TextField                            \n                            margin=\"dense\"\n                            id=\"descripcion\"\n                            name=\"descripcion\"\n                            label=\"Descripcion\"\n                            type=\"text\"\n                            value={this.state.descripcion}\n                            fullWidth\n                            onChange={this.onChangeText.bind(this)}\n                        />\n                            <MaterialUIPickers date={this.state.fecha_encuesta} handleDateChange={this.handleDateChange} />       \n                        </DialogContent>\n                        <DialogActions>\n                        <Button variant=\"contained\"  color=\"primary\"\n                       type=\"submit\"\n                        >\n                            Guardar\n                        </Button>\n                        <Button onClick={this.handleClose.bind(this)} color=\"primary\">\n                            Cancelar\n                        </Button>\n                        </DialogActions>\n                        </form>\n                    </Dialog>\n\n                    {/*Modal Categoria encuesta*/}\n                    <Dialog open={this.state.openCat} onClose={this.handleClose.bind(this)} aria-labelledby=\"form-dialog-title\">\n                    <form onSubmit={this.handleSubmitCategoria.bind(this)} noValidate autoComplete=\"off\">\n                        <DialogTitle id=\"form-dialog-title\">Categoria de Encuestas</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText>\n                            Administración de categorias de preguntas.\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"nombre\"\n                            name=\"nombre\"\n                            label=\"Nombre\"\n                            type=\"text\"\n                            value={this.state.nombre}\n                            onChange={this.onChangeText.bind(this)}\n                            fullWidth\n                        />\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"order\"\n                            name=\"order\"\n                            label=\"Orden\"\n                            type=\"number\"                            \n                            value={this.state.order}\n                            onChange={this.onChangeText.bind(this)}\n                            fullWidth\n                        />                               \n                        </DialogContent>\n                        <DialogActions>\n                        <Button variant=\"contained\"  color=\"primary\"\n                       type=\"submit\"\n                        >\n                            Guardar\n                        </Button>\n                        <Button onClick={this.handleClose.bind(this)} color=\"primary\">\n                            Cancelar\n                        </Button>\n                        </DialogActions>\n                        </form>\n                    </Dialog>\n\n                    {/*Modal Preguntas*/}\n                    <Dialog open={this.state.openPreg} onClose={this.handleClose.bind(this)} aria-labelledby=\"form-dialog-title\">\n                    <form onSubmit={this.handleSubmitPregunta.bind(this)} noValidate autoComplete=\"off\">\n                        <DialogTitle id=\"form-dialog-title\">Pregunta</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText>\n                            Administración de Preguntas.\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"nombre_pregunta\"\n                            name=\"nombre_pregunta\"\n                            label=\"Pregunta\"\n                            type=\"text\"\n                            value={this.state.nombre_pregunta}\n                            onChange={this.onChangeText.bind(this)}\n                            fullWidth\n                        />\n                        <TextField                            \n                            margin=\"dense\"\n                            id=\"order_pregunta\"\n                            name=\"order_pregunta\"\n                            label=\"Orden\"\n                            type=\"number\"                            \n                            value={this.state.order_pregunta}\n                            onChange={this.onChangeText.bind(this)}\n                            fullWidth\n                        />                               \n                        </DialogContent>\n                        <DialogActions>\n                        <Button variant=\"contained\"  color=\"primary\"\n                       type=\"submit\"\n                        >\n                            Guardar\n                        </Button>\n                        <Button onClick={this.handleClose.bind(this)} color=\"primary\">\n                            Cancelar\n                        </Button>\n                        </DialogActions>\n                        </form>\n                    </Dialog>\n\n                    {/*Modal Respuestas*/}\n                    <Dialog open={this.state.openResp} onClose={this.handleClose.bind(this)} aria-labelledby=\"form-dialog-title\">\n                    <form onSubmit={this.handleSubmitRespuesta.bind(this)} noValidate autoComplete=\"off\">\n                        <DialogTitle id=\"form-dialog-title\">Respuesta</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText>\n                            Administración de Respuestas.\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"nombre_respuesta\"\n                            name=\"nombre_respuesta\"\n                            label=\"Respuesta\"\n                            type=\"text\"\n                            value={this.state.nombre_respuesta}\n                            onChange={this.onChangeText.bind(this)}\n                            fullWidth\n                        />\n                        <TextField                            \n                            margin=\"dense\"\n                            id=\"order_respuesta\"\n                            name=\"order_respuesta\"\n                            label=\"Orden\"\n                            type=\"number\"                            \n                            value={this.state.order_respuesta}\n                            onChange={this.onChangeText.bind(this)}\n                            fullWidth\n                        />                               \n                        </DialogContent>\n                        <DialogActions>\n                        <Button variant=\"contained\"  color=\"primary\"\n                       type=\"submit\"\n                        >\n                            Guardar\n                        </Button>\n                        <Button onClick={this.handleClose.bind(this)} color=\"primary\">\n                            Cancelar\n                        </Button>\n                        </DialogActions>\n                        </form>\n                    </Dialog>\n                </CardContent>\n                <CustomizedSnackbars setOpen={this.state.openAlert} severity={this.state.severity} msj={this.state.msj} />\n            </Card>\n        )\n    }\n}","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Notifications from './Notifications';\nimport Password from './Password';\nimport Encuesta from './Encuesta';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst SettingsView = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Settings\"\n    >\n      <Container maxWidth=\"lg\">\n        <Encuesta />\n        \n      </Container>\n    </Page>\n  );\n};\n\nexport default SettingsView;\n","import React, { Component } from 'react'\nimport AuthenticationService from '../../service/AuthenticationService';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nclass LogoutComponent extends Component {\n    componentDidMount(){\n        AuthenticationService.logout()\n        window.location = process.env.PUBLIC_URL+\"/login\"\n    }\n    render() {\n        return (\n            <>\n                <div className=\"container\" style={{textAlign:'center', marginTop:50}}>\n                    <h1>Estas saliendo de la aplicacion de encuesta</h1>\n                    <p>Gracias por usar nuestra aplicación. </p>\n                    <ThumbUpIcon fontSize=\"large\"/>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default LogoutComponent","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles({\n    root: {\n        backgroundColor: 'red',\n        color: props => props.color,\n    },\n    formControl: {\n        display: 'block',\n        width: '100 %',\n        padding: '.375rem .75rem',\n        fontSize: '1rem',\n        lineHeight: '1.5',\n        color: '#495057',\n        backgrounColor: '#fff',\n        backgroundClip: 'padding - box',\n        border: '1px solid #ced4da',\n        borderRadius: '.25rem',\n        transition: 'border - color .15s ease -in -out, box - shadow .15s ease -in -out'\n    }\n});\n\nexport default function InputGeneric(props) {\n    const classes = useStyles(props);\n    console.log(props)\n    return <input type=\"text\" className={classes.formControl} name={props.name} style={{ width:'50%'}}\n    id={props.id} onChange={(e) => props.onChanteText(e)} value={props.value}/>;\n}","import React, { Component } from 'react';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n    Box,\n    Container,\n    makeStyles,\n    Card,\n    Button,\n    Typography,\n    TextField,\n    CardHeader,\n    Divider,\n    Grid,\n    Paper, Select,\n    TableContainer, Table, InputLabel, MenuItem,\n    TableHead, TableRow, TableCell, FormControlLabel,\n    TableBody, Checkbox, Radio, RadioGroup, FormControl, FormLabel\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Toolbar from './Toolbar';\nimport clsx from 'clsx';\nimport EncuestaService, { findAllr } from '../service/encuestaService';\nimport solReact from 'src/js/solReact';\nimport InputGeneric from '../../../components/InputGeneric';\nimport CustomizedSnackbars from '../../../components/CustomizedSnackbars';\nimport encuestaService from '../service/encuestaService';\nimport moment from 'moment';\n\n\nconst parameter = solReact.getQueryVariable(\"action\");\nexport default class NewEncuesta extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            infoEncuesta: {},\n            preguntas: [],\n            items: [],\n            respuestas: [],\n            isError: false,\n            helperText: '',\n            nombre_usuario: '',\n            nombre_puesto: '',\n            direccion_puesto: '',\n            openAlert: false,\n            msj: '',\n            severity: 'info'\n        }\n    }\n\n    componentDidMount() {\n        const action = solReact.getQueryVariable(\"action\");\n        let idPedido = null;\n        if (action === 'update') {\n            idPedido = solReact.getQueryVariable(\"id\")\n            this.loadEncuestaInfo(idPedido)\n            this.loadPreguntasByIdEncuesta(idPedido)\n            this.loadRespuestaByIdPedido(idPedido)\n        }\n        //await this.onExistPatientById(parameter2);\n        console.log(\"action: \" + parameter)\n        console.log(\"id: \" + idPedido)\n    }\n\n    loadEncuestaInfo(id) {\n        EncuestaService.findById(id)\n            .then(response => {\n                console.log(response.data)\n                this.setState({ infoEncuesta: response.data })\n                this.setState({\n                    nombre_usuario: this.state.infoEncuesta.nombre_usuario,\n                    nombre_puesto: this.state.infoEncuesta.nombre_puesto,\n                    direccion_puesto: this.state.infoEncuesta.direccion_puesto\n                })\n            }).catch(\n                err => {\n                    console.error(err)\n                }\n            )\n    }\n\n    loadPreguntasByIdEncuesta(id) {\n        EncuestaService.findPreguntasById(id)\n            .then(response => {\n                console.info(\"loadPreguntasByIdEncuesta>\")\n                console.log(response.data)\n                this.setState({ preguntas: response.data })\n                setTimeout(() => { console.log(this.state.infoEncuesta.preguntas) }, 3000);\n                this.fillDataPreguntas(response.data)\n            }).catch(\n                err => {\n                    console.error(err)\n                }\n            )\n    }\n\n    loadRespuestaByIdPedido(id) {\n        EncuestaService.findRespuestasById(id)\n            .then(response => {\n                console.info(\"loadRespuestaByIdPedido>\")\n                console.log(response.data)\n                this.setState({ respuestas: response.data })\n            }).catch(\n                err => {\n                    console.error(err)\n                }\n            )\n    }\n\n\n\n    fillDataPreguntas(objP) {\n        const datosJson = objP\n        let jerarquia = datosJson.reduce((acc, elem) => {\n            acc[elem.categoria] = acc[elem.categoria] || [];\n            if (!acc[elem.categoria].includes(elem.id_pregunta)) {\n                acc[elem.categoria].push(\n                    ({\n                        \"id_pregunta\": elem.id_pregunta,\n                        \"last_user\": elem.last_user,\n                        \"nombre_pregunta\": elem.nombre_pregunta,\n                        \"estado\": elem.estado,\n                        \"categoria\": elem.categoria,\n                        \"id_respuesta_selected\": elem.id_respuesta_selected\n                    })\n                );\n            }\n            return acc;\n        }, {});\n\n        console.info(\"jerarquia>\")\n        console.log(jerarquia)\n        let result = []\n        for (var i in jerarquia) {\n            result.push([i, jerarquia[i]]);\n        }\n        console.log(result)\n        this.setState({ items: result })\n        //this.makeDataTable(jerarquia)\n    }\n\n    makeDataTable(preguntas) {\n        let result = []\n        for (var i in preguntas) {\n            result.push([i, preguntas[i]]);\n        }\n        console.log(result)\n        this.setState({ items: result })\n\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        if (this.state.nombre_usuario === '') {\n            this.ShowAlert('Nombre Usuario')\n        } else if (this.state.nombre_puesto === '') {\n            this.ShowAlert('Nombre Puesto')\n        } else if (this.state.direccion_puesto === '') {\n            this.ShowAlert('Dirección Puesto')\n        }else{\n            const idParam = solReact.getQueryVariable(\"id\")\n            let obj = {\n                nombre_usuario: this.state.nombre_usuario,\n                nombre_puesto: this.state.nombre_puesto,\n                direccion_puesto: this.state.direccion_puesto,\n                id: idParam\n            }\n\n            this.update(idParam, obj)\n        }\n    }\n\n    update(id, data) {\n        let btnShow = document.getElementById(\"btn-show-alert\");\n        EncuestaService.updatePedido(id, data)\n            .then(response => {\n                console.log(response)\n                this.setState({\n                    openAlert: true,\n                    msj: \"Modificado correctamente!\",\n                    severity: 'success'\n                })\n                btnShow.click()\n            }).catch(err => {\n                console.error(err)\n                this.setState({\n                    openAlert: true,\n                    msj: err,\n                    severity: 'error'\n                })\n                btnShow.click()\n            })\n    }\n\n    ShowAlert(campo) {\n        let btnShow = document.getElementById(\"btn-show-alert\");\n        this.setState({\n            openAlert: true,\n            msj: campo + \" no puede ser vacío!\",\n            severity: 'warning'\n        })\n        btnShow.click()\n    }\n\n    onChanteText(e) {\n        console.log(e.target)\n        this.setState({ [e.target.name]: e.target.value })\n        //this.setState({[e.target.name]:[e.value]})\n    }\n\n    useStyles2 = makeStyles((theme) => ({\n        root: {\n            backgroundColor: 'black',\n            minHeight: '20px',\n            paddingBottom: theme.spacing(3),\n            paddingTop: theme.spacing(3),\n            paddingLeft: 10\n        },\n        root2: {\n            ...theme.typography,\n        },\n        paper: {\n            padding: theme.spacing(3),\n            textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n        formControl: {\n            display: 'block',\n            width: '100 %',\n            padding: '.375rem .75rem',\n            fontSize: '1rem',\n            lineHeight: '1.5',\n            color: '#495057',\n            backgrounColor: '#fff',\n            backgroundClip: 'padding - box',\n            border: '1px solid #ced4da',\n            borderRadius: '.25rem',\n            transition: 'border - color .15s ease -in -out, box - shadow .15s ease -in -out'\n        }\n    }));\n    onclickPermiso=(e)=>{\n        alert(e)\n    }\n\n\n    render() {\n        const action = parameter;\n        const classes = this.useStyles2;\n        return (\n            <Page\n                className={classes.root}\n                title=\"Encuesta\"\n            >\n                <Container maxWidth={false}>\n                    <Box mt={3}>\n                        <Card className={clsx(classes.root2)} style={{ padding: 10 }} >\n                            <CardHeader\n                                subheader=\"Ficha de Identificación del Usuario/Puesto\"\n                                title={action !== 'update' ? \"Crear encuesta\" : \"Editar Solicitd\"}\n                            />\n                            <Divider />\n                            {(action === 'new') &&\n                                <Formik\n                                    initialValues={{\n                                        nombre_usuario: '',\n                                        nombre_puesto: '',\n                                        direccion_puesto: '',\n                                        id_encuesta: 1,\n                                        referencia:'',\n                                        censo:'',\n                                        dui:'',\n                                        nit:'',\n                                        edad:'',\n                                        telefono:'',\n                                        asociacion:1,\n                                        actividad_comercial:1,\n                                        largo:0,\n                                        ancho:0,\n                                        nombre_beneficiario:'',\n                                        direccion_beneficiario:'',\n                                        dui_beneficiario:'',\n                                        nit_beneficiario:'',\n                                        telefono_beneficiario:'',\n                                        permiso:false,\n                                        cep:'',\n                                        fecha_inicio:new Date(),\n                                        fecha_fin:new Date(),\n                                    }}\n                                    validationSchema={Yup.object().shape({\n                                        nombre_usuario: Yup.string().max(255).required('Usuario es requerido'),\n                                        nombre_puesto: Yup.string().max(255).required('Puesto es requerida'),\n                                        direccion_puesto: Yup.string().max(255).required('Direccion Puesto es requerida')\n                                    })}\n                                    onSubmit={(values, isSubmitting) => {\n                                        console.log(values)\n                                        isSubmitting = true;\n                                        EncuestaService.save(values)\n                                            .then(response => {\n                                                console.log(response.data)\n                                                window.location = \"encuesta?action=update&id=\" + response.data.id\n                                            }).catch(\n                                                err => {\n                                                    console.error(err)\n                                                }\n                                            )\n                                    }}\n                                    \n                                >\n                                    {({\n                                        errors,\n                                        handleBlur,\n                                        handleChange,\n                                        handleSubmit,setFieldValue,\n                                        isSubmitionCompleted,\n                                        touched,\n                                        values\n                                    }) => (\n                                        <form onSubmit={handleSubmit}>\n                                            <Grid\n                                                container\n                                                spacing={2}\n                                                wrap=\"wrap\"\n                                            >\n                                                <Grid\n                                                    className={classes.item}\n                                                    item\n                                                    md={6}\n                                                    sm={6}\n                                                    xs={12}\n                                                >\n                                                    <TextField\n                                                        error={Boolean(touched.nombre_usuario && errors.nombre_usuario)}\n                                                        fullWidth\n                                                        helperText={touched.nombre_usuario && errors.nombre_usuario}\n                                                        label=\"Nombre de usuario\"\n                                                        margin=\"dense\"\n                                                        name=\"nombre_usuario\"\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                        type=\"text\"\n                                                        value={values.nombre_usuario}\n                                                        variant=\"outlined\"\n                                                    />\n                                                    <TextField\n                                                        error={Boolean(touched.nombre_puesto && errors.nombre_puesto)}\n                                                        fullWidth\n                                                        helperText={touched.nombre_puesto && errors.nombre_puesto}\n                                                        label=\"Nombre del puesto\"\n                                                        margin=\"dense\"\n                                                        name=\"nombre_puesto\"\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                        type=\"text\"\n                                                        value={values.nombre_puesto}\n                                                        variant=\"outlined\"\n                                                    />\n                                                    <TextField\n                                                        error={Boolean(touched.direccion_puesto && errors.direccion_puesto)}\n                                                        fullWidth\n                                                        helperText={touched.direccion_puesto && errors.direccion_puesto}\n                                                        label=\"Dirección del puesto\"\n                                                        margin=\"dense\"\n                                                        name=\"direccion_puesto\"\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                        type=\"text\"\n                                                        value={values.direccion_puesto}\n                                                        variant=\"outlined\"\n                                                    />\n                                                </Grid>\n                                            </Grid>\n                                            <Grid\n                                                container\n                                                spacing={2}\n                                                wrap=\"wrap\"\n                                            >\n                                                <Grid\n                                                    className={classes.item}\n                                                    item\n                                                    md={4}\n                                                    sm={6}\n                                                    xs={12}\n                                                >\n                                                    <TextField\n                                                        fullWidth\n                                                        label=\"No. Referencia\"\n                                                        margin=\"dense\"\n                                                        name=\"referencia\"\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                        type=\"text\"\n                                                        value={values.referencia}\n                                                        variant=\"outlined\"\n                                                    />\n                                                </Grid>\n                                                <Grid\n                                                    className={classes.item}\n                                                    item\n                                                    md={4}\n                                                    sm={6}\n                                                    xs={12}\n                                                >\n                                                    <TextField\n                                                        fullWidth\n                                                        label=\"Censo\"\n                                                        margin=\"dense\"\n                                                        name=\"censo\"\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                        type=\"text\"\n                                                        value={values.censo}\n                                                        variant=\"outlined\"\n                                                    />\n                                                </Grid>\n                                                <Grid\n                                                    className={classes.item}\n                                                    item\n                                                    md={4}\n                                                    sm={4}\n                                                    xs={12}\n                                                >\n                                                    <TextField\n                                                        fullWidth\n                                                        label=\"DUI\"\n                                                        margin=\"dense\"\n                                                        name=\"dui\"\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                        type=\"text\"\n                                                        value={values.dui}\n                                                        variant=\"outlined\"\n                                                    />\n                                                </Grid>\n                                                <Grid\n                                                    className={classes.item}\n                                                    item\n                                                    md={4}\n                                                    sm={6}\n                                                    xs={12}\n                                                >\n\n                                                    <TextField\n                                                        fullWidth\n                                                        label=\"NIT\"\n                                                        margin=\"dense\"\n                                                        name=\"nit\"\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                        type=\"text\"\n                                                        value={values.nit}\n                                                        variant=\"outlined\"\n                                                    />\n                                                </Grid>\n                                                <Grid\n                                                    className={classes.item}\n                                                    item\n                                                    md={4}\n                                                    sm={6}\n                                                    xs={12}\n                                                >\n\n                                                    <TextField\n                                                        fullWidth\n                                                        label=\"Edad\"\n                                                        margin=\"dense\"\n                                                        name=\"edad\"\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                        type=\"text\"\n                                                        value={values.edad}\n                                                        variant=\"outlined\"\n                                                        disabled\n                                                    />\n                                                </Grid>\n                                                <Grid\n                                                    className={classes.item}\n                                                    item\n                                                    md={4}\n                                                    sm={6}\n                                                    xs={12}\n                                                >\n\n                                                    <TextField\n                                                        fullWidth\n                                                        label=\"Telefono\"\n                                                        margin=\"dense\"\n                                                        name=\"telefono\"\n                                                        onBlur={handleBlur}\n                                                        onChange={handleChange}\n                                                        type=\"text\"\n                                                        value={values.telefono}\n                                                        variant=\"outlined\"\n                                                    />\n                                                </Grid>\n                                                <Grid\n                                                    className={classes.item}\n                                                    item\n                                                    md={4}\n                                                    sm={6}\n                                                    xs={12}\n                                                >\n                                                    <FormControl style={{ width: \"100%\" }} variant=\"outlined\" className={classes.formControl}>\n                                                        <InputLabel id=\"demo-simple-select-outlined-label\">Asociacion</InputLabel>\n                                                        <Select\n                                                            labelId=\"demo-simple-select-outlined-label\"\n                                                            id=\"demo-simple-select-outlined\"\n                                                            value={values.asociacion}\n                                                            onChange={handleChange}\n                                                            label=\"Asociacion\"\n                                                            fullWidth\n                                                            margin=\"dense\"\n                                                        >                                                            \n                                                            <MenuItem value={1}>No especificada</MenuItem>\n                                                            \n                                                        </Select>\n                                                    </FormControl>\n                                                </Grid>\n\n                                                <Grid\n                                                    className={classes.item}\n                                                    item\n                                                    md={4}\n                                                    sm={6}\n                                                    xs={12}\n                                                >\n                                                    <FormControl style={{ width: \"100%\" }} variant=\"outlined\" className={classes.formControl}>\n                                                        <InputLabel id=\"demo-simple-select-outlined-label\">Actividad Comercial</InputLabel>\n                                                        <Select\n                                                            labelId=\"demo-simple-select-outlined-label\"\n                                                            id=\"demo-simple-select-outlined\"\n                                                            value={values.actividad_comercial}\n                                                            onChange={handleChange}\n                                                            label=\"Actividad Comercial\"\n                                                            fullWidth\n                                                            margin=\"dense\"\n                                                        >                                                            \n                                                            <MenuItem value={1}>No especificada</MenuItem>                                                            \n                                                        </Select>\n                                                    </FormControl>\n                                                </Grid>\n\n                                            </Grid>\n                                            <Box my={2} style={{}}>\n                                                <fieldset style={{ borderRadius: 3, borderColor: 'rgba(0, 0, 0, 0.12)', padding: 3 }}>\n                                                    <legend style={{ margin: 5 }}>Espacio público:</legend>\n                                                    <Grid\n                                                        container\n                                                        spacing={2}\n                                                        wrap=\"wrap\"\n                                                    >\n                                                        <Grid\n                                                            className={classes.item}\n                                                            item\n                                                            md={4}\n                                                            sm={6}\n                                                            xs={12}\n                                                        >\n                                                            <TextField\n                                                                fullWidth\n                                                                label=\"Largo\"\n                                                                margin=\"dense\"\n                                                                name=\"largo\"\n                                                                onBlur={handleBlur}\n                                                                onChange={handleChange}\n                                                                type=\"text\"\n                                                                value={values.largo}\n                                                                variant=\"outlined\"\n                                                                style={{ margin: 10 }}\n                                                            />\n                                                        </Grid>\n                                                        <Grid\n                                                            className={classes.item}\n                                                            item\n                                                            md={4}\n                                                            sm={6}\n                                                            xs={12}\n                                                        >\n                                                            <TextField\n                                                                fullWidth\n                                                                label=\"Ancho\"\n                                                                margin=\"dense\"\n                                                                name=\"ancho\"\n                                                                onBlur={handleBlur}\n                                                                onChange={handleChange}\n                                                                type=\"text\"\n                                                                value={values.ancho}\n                                                                variant=\"outlined\"\n                                                                style={{ margin: 10 }}\n                                                            />\n                                                        </Grid>\n                                                    </Grid>\n                                                </fieldset>\n                                            </Box>\n                                            {/***********************BOX BENEFICIARIO*********************/}\n                                            <Box my={2} style={{}}>\n                                                <fieldset style={{ borderRadius: 3, borderColor: 'rgba(0, 0, 0, 0.12)', padding: 3 }}>\n                                                    <legend style={{ margin: 5 }}>Beneficiario:</legend>\n                                                    <Grid\n                                                        container\n                                                        spacing={2}\n                                                        wrap=\"wrap\"\n                                                    >\n                                                        <Grid\n                                                            className={classes.item}\n                                                            item\n                                                            md={4}\n                                                            sm={6}\n                                                            xs={12}\n                                                        >\n                                                            <TextField\n                                                                fullWidth\n                                                                label=\"Nombre beneficiario\"\n                                                                margin=\"dense\"\n                                                                name=\"nombre_beneficiario\"\n                                                                onBlur={handleBlur}\n                                                                onChange={handleChange}\n                                                                type=\"text\"\n                                                                value={values.nombre_beneficiario}\n                                                                variant=\"outlined\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid\n                                                            className={classes.item}\n                                                            item\n                                                            md={4}\n                                                            sm={6}\n                                                            xs={12}\n                                                        >\n                                                            <TextField\n                                                                fullWidth\n                                                                label=\"Direccion beneficiario\"\n                                                                margin=\"dense\"\n                                                                name=\"direccion_beneficiario\"\n                                                                onBlur={handleBlur}\n                                                                onChange={handleChange}\n                                                                type=\"text\"\n                                                                value={values.direccion_beneficiario}\n                                                                variant=\"outlined\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid\n                                                            className={classes.item}\n                                                            item\n                                                            md={4}\n                                                            sm={6}\n                                                            xs={12}\n                                                        >\n                                                            <TextField\n                                                                fullWidth\n                                                                label=\"DUI beneficiario\"\n                                                                margin=\"dense\"\n                                                                name=\"dui_beneficiario\"\n                                                                onBlur={handleBlur}\n                                                                onChange={handleChange}\n                                                                type=\"text\"\n                                                                value={values.dui_beneficiario}\n                                                                variant=\"outlined\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid\n                                                            className={classes.item}\n                                                            item\n                                                            md={4}\n                                                            sm={6}\n                                                            xs={12}\n                                                        >\n                                                            <TextField\n                                                                fullWidth\n                                                                label=\"NIT beneficiario\"\n                                                                margin=\"dense\"\n                                                                name=\"nit_beneficiario\"\n                                                                onBlur={handleBlur}\n                                                                onChange={handleChange}\n                                                                type=\"text\"\n                                                                value={values.nit_beneficiario}\n                                                                variant=\"outlined\"\n                                                                inputProps={{ maxLength: 15 }}\n                                                            />\n                                                        </Grid>\n                                                        <Grid\n                                                            className={classes.item}\n                                                            item\n                                                            md={4}\n                                                            sm={6}\n                                                            xs={12}\n                                                        >\n                                                            <TextField\n                                                                fullWidth\n                                                                label=\"Telefono beneficiario\"\n                                                                margin=\"dense\"\n                                                                name=\"telefono_beneficiario\"\n                                                                onBlur={handleBlur}\n                                                                onChange={handleChange}\n                                                                type=\"text\"\n                                                                value={values.telefono_beneficiario}\n                                                                variant=\"outlined\"\n                                                            />\n                                                        </Grid>\n                                                    </Grid>\n                                                </fieldset>\n                                            </Box>\n                                            <Grid\n                                                container\n                                                spacing={2}\n                                                wrap=\"wrap\"\n                                            >\n                                                <Grid\n                                                    className={classes.item}\n                                                    item\n                                                    md={4}\n                                                    sm={6}\n                                                    xs={12}\n                                                >\n                                                    <FormControlLabel\n                                                        value={values.permiso}\n                                                        control={<Checkbox name=\"permiso\" color=\"primary\" checked={values.permiso} \n                                                        onChange={handleChange} \n                                                        />}\n                                                        label=\"¿Tiene permiso de comercialización?\"\n                                                        labelPlacement=\"start\"\n                                                    />\n\n                                                </Grid>\n\n                                            </Grid>\n                                            <Box my={2} id=\"box-permiso\" style={(!values.permiso)?{display:'none'}:{}}>\n                                                <fieldset style={{ borderRadius: 3, borderColor: 'rgba(0, 0, 0, 0.12)', padding: 3 }}>\n                                                    <legend style={{ margin: 5 }}>Permiso:</legend>\n                                                    <Grid\n                                                        container\n                                                        spacing={2}\n                                                        wrap=\"wrap\"\n                                                    >\n                                                        <Grid\n                                                            className={classes.item}\n                                                            item\n                                                            md={4}\n                                                            sm={6}\n                                                            xs={12}\n                                                        >\n                                                            <TextField\n                                                                fullWidth\n                                                                label=\"EXP. CEP\"\n                                                                margin=\"dense\"\n                                                                name=\"cep\"\n                                                                onBlur={handleBlur}\n                                                                onChange={handleChange}\n                                                                type=\"text\"\n                                                                value={values.cep}\n                                                                variant=\"outlined\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid\n                                                            className={classes.item}\n                                                            item\n                                                            md={4}\n                                                            sm={6}\n                                                            xs={12}\n                                                        >\n                                                            <FormControl style={{ width: \"100%\" }} variant=\"outlined\" className={classes.formControl}>\n                                                                <InputLabel id=\"demo-simple-select-outlined-label\">Actividad Comercial</InputLabel>\n                                                                <Select\n                                                                    labelId=\"demo-simple-select-outlined-label\"\n                                                                    id=\"demo-simple-select-outlined\"\n                                                                    value={1}\n                                                                    onChange={handleChange}\n                                                                    label=\"Delegación distrital\"\n                                                                    fullWidth\n                                                                    margin=\"dense\"\n                                                                >\n                                                                    <MenuItem value=\"\">\n                                                                        <em>None</em>\n                                                                    </MenuItem>\n                                                                    <MenuItem value={2}>Distrito 1</MenuItem>\n                                                                    <MenuItem value={3}>Distrito 2</MenuItem>\n                                                                    <MenuItem value={4}>Distrito 3</MenuItem>\n                                                                </Select>\n                                                            </FormControl>\n                                                        </Grid>\n                                                        <Grid\n                                                            className={classes.item}\n                                                            item\n                                                            md={4}\n                                                            sm={6}\n                                                            xs={12}\n                                                        >\n                                                            <TextField\n                                                                id=\"fecha_inicio\"\n                                                                label=\"Fecha Inicio\"\n                                                                type=\"date\"\n                                                                defaultValue={moment(new Date(values.fecha_inicio)).format(\"YYYY-MM-DD\")}\n                                                                className={classes.textField}\n                                                                InputLabelProps={{\n                                                                    shrink: true,\n                                                                }}\n                                                            />\n                                                        </Grid>\n                                                        <Grid\n                                                            className={classes.item}\n                                                            item\n                                                            md={4}\n                                                            sm={6}\n                                                            xs={12}\n                                                        >\n                                                            <TextField\n                                                                id=\"fecha_fin\"\n                                                                label=\"Fecha Fin\"\n                                                                type=\"date\"\n                                                                defaultValue={moment(new Date(values.fecha_fin)).format(\"YYYY-MM-DD\")}\n                                                                className={classes.textField}\n                                                                InputLabelProps={{\n                                                                    shrink: true,\n                                                                }}\n                                                            />\n                                                        </Grid>\n                                                    </Grid>\n                                                </fieldset>\n                                            </Box>\n                                            <Box my={2}>\n                                                <Button\n                                                    color=\"primary\"\n                                                    disabled={isSubmitionCompleted}\n                                                    fullWidth\n                                                    size=\"large\"\n                                                    type=\"submit\"\n                                                    variant=\"contained\"\n                                                >\n                                                    Guardar\n                                                </Button>\n                                            </Box>\n                                        </form>\n                                    )}\n                                </Formik>/*Termina condicion si es duferente de new*/}\n                            {\n                                (action === 'update' && action.length > 0) &&\n                                <>\n                                    <Typography variant=\"body1\" gutterBottom>\n                                        <form onSubmit={this.handleSubmit.bind(this)} noValidate autoComplete=\"off\">\n                                            <FormLabel style={{ display: \"inline!important\", margin: 10 }} component=\"legend\" >Nombre Usuario:</FormLabel>\n                                            <InputGeneric style={{ display: \"inline!important\" }} value={this.state.nombre_usuario} name={\"nombre_usuario\"} id={\"nombre_usuario\"}\n                                                onChanteText={this.onChanteText.bind(this)} />\n\n                                            <FormLabel style={{ display: \"inline!important\", margin: 10 }} component=\"legend\" >Nombre Puesto:</FormLabel>\n                                            <InputGeneric value={this.state.nombre_puesto} name={\"nombre_puesto\"} id={\"nombre_puesto\"}\n                                                onChanteText={this.onChanteText.bind(this)} />\n\n                                            <FormLabel style={{ display: \"inline!important\", margin: 10 }} component=\"legend\" >Dirección Puesto:</FormLabel>\n                                            <InputGeneric value={this.state.direccion_puesto} name={\"direccion_puesto\"} id={\"direccion_puesto\"}\n                                                onChanteText={this.onChanteText.bind(this)} />\n\n                                            <ItemEncuesta items={this.state.items} respuestas={this.state.respuestas} />\n                                            <Grid container spacing={3} style={{ margin: 10 }}>\n                                                <Grid item xs={12} sm={6} md={6}>\n                                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">Guardar</Button>\n                                                    <Button variant=\"contained\" color=\"secondary\" style={{ marginLeft: 5 }}\n                                                        onClick={(e) => window.location = '/app/customers'}\n                                                    >Cancelar</Button>\n                                                </Grid>\n                                            </Grid>\n                                            <CustomizedSnackbars setOpen={this.state.openAlert} severity={this.state.severity} msj={this.state.msj} />\n                                        </form>\n\n                                    </Typography>\n                                </>\n                            }\n                        </Card>\n                    </Box>\n                </Container>\n            </Page>\n        );\n    }\n\n};\nclass ItemEncuesta extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    makeAnswers(e) {\n\n        let id_detalle = String(e.target.id).substring(String(e.target.id).indexOf(\"_\") + 1, String(e.target.id).length)\n        let id_respuesta = e.target.value\n        console.log(\"value>\" + id_respuesta)\n        console.log(\"id_detalle:\" + id_detalle)\n\n        let obj = {\n            \"id\": id_detalle,\n            \"id_respuesta\": parseInt(id_respuesta)\n        }\n        console.log(obj)\n        this.updateRespuesta(id_detalle, obj)\n    }\n\n    updateRespuesta(id, obj) {\n        EncuestaService.update(id, obj)\n            .then(response => {\n                console.log(response)\n            }).catch(err => {\n                console.error(err)\n            })\n    }\n\n    //idPk is PK of table detalle_pedido\n    fillDataRespuestas(idPregunta) {\n        let htmlResponse = this.props.respuestas.map(\n            (r, i) => {\n                if (r.id_pregunta === idPregunta) {\n                    console.log(\"entro\" + r.id)\n                    return (\n                        <FormControlLabel\n                            value={r.id + \"\"}\n                            control={<Radio color=\"primary\" id={r.id_respuesta + \"_\" + r.id} onChange={this.makeAnswers.bind(this)} value={r.id_respuesta + \"\"} />}\n                            label={r.respuesta}\n                            labelPlacement=\"end\"\n                        //checked={(id_respuesta)}\n                        />\n                    )\n                }\n            }\n\n        )\n\n\n        return htmlResponse;\n    }\n\n    render() {\n        return (<>\n            {\n                this.props.items.map((item, index) => (\n                    <>\n                        <TableContainer component={Paper}>\n                            <Table style={{ minWidth: 650, marginTop: 5 }} size=\"small\" aria-label=\"a dense table\">\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell align=\"center\"\n                                            style={{ color: 'Highlight', backgroundColor: '#212121' }}\n                                            colSpan={3}>{String(item[0])}</TableCell>\n                                    </TableRow>\n                                    <TableRow>\n                                        <TableCell width={'10%'}>Numero</TableCell>\n                                        <TableCell width={'60%'} align=\"left\">Pregunta</TableCell>\n                                        <TableCell width={'30%'} align=\"left\">Respuesta</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {\n                                        item[1].map((d, i) => (\n                                            <TableRow>\n                                                <TableCell>{i + 1}</TableCell>\n                                                <TableCell align=\"left\">{d.nombre_pregunta}</TableCell>\n                                                <TableCell align=\"left\">\n                                                    <FormControl component=\"fieldset\">\n                                                        <RadioGroup row aria-label=\"position\" name={\"resp_\" + d.id_pregunta} defaultValue={d.id_respuesta_selected + \"\"}>\n                                                            {this.fillDataRespuestas(d.id_pregunta, d.id_pk)}\n                                                        </RadioGroup>\n                                                    </FormControl>\n                                                </TableCell>\n\n                                            </TableRow>\n                                        ))\n                                    }\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                    </>\n                ))\n            }\n        </>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n    Box,\n    Container,\n    makeStyles,\n    Card,\n    Button,\n    Typography,\n    TextField,\n    CardHeader,\n    Divider,\n    Grid,\n    Paper, Select,\n    TableContainer, Table, InputLabel, MenuItem,\n    TableHead, TableRow, TableCell, FormControlLabel,\n    TableBody, Checkbox, Radio, RadioGroup, FormControl, FormLabel\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Toolbar from './Toolbar';\nimport clsx from 'clsx';\nimport solReact from 'src/js/solReact';\nimport InputGeneric from '../../../components/InputGeneric';\nimport CustomizedSnackbars from '../../../components/CustomizedSnackbars';\nimport usuarioService from '../service/usuarioService';\nimport moment from 'moment';\n\nconst parameter = solReact.getQueryVariable(\"action\");\nexport default class Usuario extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    useStyles2 = makeStyles((theme) => ({\n        root: {\n            backgroundColor: 'black',\n            minHeight: '20px',\n            paddingBottom: theme.spacing(3),\n            paddingTop: theme.spacing(3),\n            paddingLeft: 10\n        },\n        root2: {\n            ...theme.typography,\n        },\n        paper: {\n            padding: theme.spacing(3),\n            textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n        formControl: {\n            display: 'block',\n            width: '100 %',\n            padding: '.375rem .75rem',\n            fontSize: '1rem',\n            lineHeight: '1.5',\n            color: '#495057',\n            backgrounColor: '#fff',\n            backgroundClip: 'padding - box',\n            border: '1px solid #ced4da',\n            borderRadius: '.25rem',\n            transition: 'border - color .15s ease -in -out, box - shadow .15s ease -in -out'\n        }\n    }));\n\n    render() {\n        const action = parameter;\n        const classes = this.useStyles2;\n        return (\n            <Page\n                className={classes.root}\n                title=\"Encuesta\"\n            >\n                <Container maxWidth={false}>\n                    <Box mt={3}>\n                        <Card className={clsx(classes.root2)} style={{ padding: 10 }} >\n                            <CardHeader\n                                subheader=\"Detalles de usuario\"\n                                title={action !== 'update' ? \"Crear Usuario\" : \"Editar Usuario\"}\n                            />\n                            <Divider />\n                            <Formik\n                                initialValues={{\n                                    nombre: '',\n                                    nombre_puesto: '',\n                                    direccion_puesto: '',\n                                    id_encuesta: 1,\n                                    referencia: '',\n                                    censo: '',\n                                    dui: '',\n                                    nit: '',\n                                    edad: '',\n                                    telefono: '',\n                                    asociacion: 1,\n                                    actividad_comercial: 1,\n                                    largo: 0,\n                                    ancho: 0,\n                                    nombre_beneficiario: '',\n                                    direccion_beneficiario: '',\n                                    dui_beneficiario: '',\n                                    nit_beneficiario: '',\n                                    telefono_beneficiario: '',\n                                    permiso: false,\n                                    cep: '',\n                                    fecha_inicio: new Date(),\n                                    fecha_fin: new Date(),\n                                }}\n                                validationSchema={Yup.object().shape({\n                                    nombre: Yup.string().max(255).required('Nombre de Usuario es requerido'),\n                                    nombre_puesto: Yup.string().max(255).required('Puesto es requerida'),\n                                    direccion_puesto: Yup.string().max(255).required('Direccion Puesto es requerida')\n                                })}\n                                onSubmit={(values, isSubmitting) => {\n                                    console.log(values)\n                                    isSubmitting = true;\n                                    usuarioService.save(values)\n                                        .then(response => {\n                                            console.log(response.data)\n                                            window.location = \"encuesta?action=update&id=\" + response.data.id\n                                        }).catch(\n                                            err => {\n                                                console.error(err)\n                                            }\n                                        )\n                                }}\n\n                            >\n                                {({\n                                    errors,\n                                    handleBlur,\n                                    handleChange,\n                                    handleSubmit, setFieldValue,\n                                    isSubmitionCompleted,\n                                    touched,\n                                    values\n                                }) => (\n                                    <form onSubmit={handleSubmit}>\n\n                                        <Grid\n                                            container\n                                            spacing={2}\n                                            wrap=\"wrap\"\n                                        >\n                                            <Grid\n                                                className={classes.item}\n                                                item\n                                                md={4}\n                                                sm={6}\n                                                xs={12}\n                                            >\n                                                <TextField\n                                                    error={Boolean(touched.nombre && errors.nombre)}\n                                                    fullWidth\n                                                    helperText={touched.nombre && errors.nombre}\n                                                    label=\"Nombre\"\n                                                    margin=\"dense\"\n                                                    name=\"nombre\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    type=\"text\"\n                                                    value={values.nombre}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                            <Grid\n                                                className={classes.item}\n                                                item\n                                                md={4}\n                                                sm={6}\n                                                xs={12}\n                                            >\n                                                <TextField\n                                                    fullWidth\n                                                    label=\"Censo\"\n                                                    margin=\"dense\"\n                                                    name=\"censo\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    type=\"text\"\n                                                    value={values.censo}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                            <Grid\n                                                className={classes.item}\n                                                item\n                                                md={4}\n                                                sm={4}\n                                                xs={12}\n                                            >\n                                                <TextField\n                                                    fullWidth\n                                                    label=\"DUI\"\n                                                    margin=\"dense\"\n                                                    name=\"dui\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    type=\"text\"\n                                                    value={values.dui}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                            <Grid\n                                                className={classes.item}\n                                                item\n                                                md={4}\n                                                sm={6}\n                                                xs={12}\n                                            >\n\n                                                <TextField\n                                                    fullWidth\n                                                    label=\"NIT\"\n                                                    margin=\"dense\"\n                                                    name=\"nit\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    type=\"text\"\n                                                    value={values.nit}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                            <Grid\n                                                className={classes.item}\n                                                item\n                                                md={4}\n                                                sm={6}\n                                                xs={12}\n                                            >\n\n                                                <TextField\n                                                    fullWidth\n                                                    label=\"Edad\"\n                                                    margin=\"dense\"\n                                                    name=\"edad\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    type=\"text\"\n                                                    value={values.edad}\n                                                    variant=\"outlined\"\n                                                    disabled\n                                                />\n                                            </Grid>\n                                            <Grid\n                                                className={classes.item}\n                                                item\n                                                md={4}\n                                                sm={6}\n                                                xs={12}\n                                            >\n\n                                                <TextField\n                                                    fullWidth\n                                                    label=\"Telefono\"\n                                                    margin=\"dense\"\n                                                    name=\"telefono\"\n                                                    onBlur={handleBlur}\n                                                    onChange={handleChange}\n                                                    type=\"text\"\n                                                    value={values.telefono}\n                                                    variant=\"outlined\"\n                                                />\n                                            </Grid>\n                                            <Grid\n                                                className={classes.item}\n                                                item\n                                                md={4}\n                                                sm={6}\n                                                xs={12}\n                                            >\n                                                <FormControl style={{ width: \"100%\" }} variant=\"outlined\" className={classes.formControl}>\n                                                    <InputLabel id=\"demo-simple-select-outlined-label\">Asociacion</InputLabel>\n                                                    <Select\n                                                        labelId=\"demo-simple-select-outlined-label\"\n                                                        id=\"demo-simple-select-outlined\"\n                                                        value={values.asociacion}\n                                                        onChange={handleChange}\n                                                        label=\"Asociacion\"\n                                                        fullWidth\n                                                        margin=\"dense\"\n                                                    >\n                                                        <MenuItem value={1}>No especificada</MenuItem>\n\n                                                    </Select>\n                                                </FormControl>\n                                            </Grid>\n\n                                            <Grid\n                                                className={classes.item}\n                                                item\n                                                md={4}\n                                                sm={6}\n                                                xs={12}\n                                            >\n                                                <FormControl style={{ width: \"100%\" }} variant=\"outlined\" className={classes.formControl}>\n                                                    <InputLabel id=\"demo-simple-select-outlined-label\">Actividad Comercial</InputLabel>\n                                                    <Select\n                                                        labelId=\"demo-simple-select-outlined-label\"\n                                                        id=\"demo-simple-select-outlined\"\n                                                        value={values.actividad_comercial}\n                                                        onChange={handleChange}\n                                                        label=\"Actividad Comercial\"\n                                                        fullWidth\n                                                        margin=\"dense\"\n                                                    >\n                                                        <MenuItem value={1}>No especificada</MenuItem>\n                                                    </Select>\n                                                </FormControl>\n                                            </Grid>\n\n                                        </Grid>\n                                        <Grid\n                                            container\n                                            spacing={2}\n                                            wrap=\"wrap\"\n                                        >\n                                            <Grid\n                                                className={classes.item}\n                                                item\n                                                md={4}\n                                                sm={6}\n                                                xs={12}\n                                            >\n                                                <FormControlLabel\n                                                    value={values.permiso}\n                                                    control={<Checkbox name=\"permiso\" color=\"primary\" checked={values.permiso}\n                                                        onChange={handleChange}\n                                                    />}\n                                                    label=\"Activo\"\n                                                    labelPlacement=\"start\"\n                                                />\n\n                                            </Grid>\n\n                                        </Grid>\n                                        <Box my={2}>\n                                            <Button\n                                                color=\"primary\"\n                                                disabled={isSubmitionCompleted}\n                                                fullWidth\n                                                size=\"large\"\n                                                type=\"submit\"\n                                                variant=\"contained\"\n                                            >\n                                                Guardar\n                                                </Button>\n                                        </Box>\n                                    </form>\n                                )}\n                            </Formik>\n\n                        </Card>\n                    </Box>\n                </Container>\n            </Page>\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\n\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nconst Profile = ({ className,user, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          alignItems=\"center\"\n          display=\"flex\"\n          flexDirection=\"column\"\n        >\n          <Avatar\n            className={classes.avatar}\n            src={user.avatar}\n          />\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {user.name}\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usuario(Rol): {user.jobTitle}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {`${user.city} / ${user.country}`}\n          </Typography>\n          <Typography\n            className={classes.dateText}\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\n          </Typography>\n        </Box>\n      </CardContent>\n      <Divider />\n      {/**<CardActions >\n        <Button\n          color=\"primary\"\n          fullWidth\n          variant=\"text\"\n        >\n          Upload picture\n        </Button>\n      </CardActions>**/}\n    </Card>\n  );\n};\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport CustomizedSnackbars from '../../../components/CustomizedSnackbars';\nimport usuarioService from '../service/usuarioService';\nimport solReact from 'src/js/solReact';\n\nconst action = solReact.getQueryVariable(\"action\")\nclass ProfileDetails extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      nombre: '',\n      apellido: '',\n      username: '',\n      password: '',\n      id_rol: 2,\n      activo: true,\n      states: [\n        {\n          value: 1,\n          label: 'Administrador'\n        },\n        {\n          value: 2,\n          label: 'Tecnico'\n        },\n      ],\n      estados: [\n        {\n          value: 1,\n          label: 'Activo'\n        },\n        {\n          value: 2,\n          label: 'Inactivo'\n        },\n      ],\n     \n        e_nombre:false,\n        e_nombre_str:'',\n        e_apellido:false,\n        e_apellido_str:'',\n        e_username:false,\n        e_password:false\n    }\n  }\n\n  componentDidMount(){\n    \n    if(action==='view' || action==='update'){\n      const idParam = solReact.getQueryVariable(\"id\")\n      this.loadUserById(idParam)\n    }\n\n  }\n\n  loadUserById(id){\n    usuarioService.findById(id)\n    .then(response=> {\n      console.log()\n      let resp = response.data\n      this.setState({\n        nombre:resp.nombre,\n        apellido:resp.apellido,\n        username:resp.username,\n        password:resp.password,\n        id_rol:resp.id_rol.id_rol,\n        activo:resp.activo\n      })\n    }).catch(err=>{\n      console.error(err)\n    })\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n\n  useStyles = makeStyles(() => ({\n    root: {}\n  }));\n\n  useStyles = makeStyles((theme) => ({\n    root: {\n      backgroundColor: 'black',\n      minHeight: '20px',\n      paddingBottom: theme.spacing(3),\n      paddingTop: theme.spacing(3),\n      paddingLeft: 10\n    }\n  }));\n\n  handleSubmit(e) {\n    console.log(e.target.novalidate)\n    e.preventDefault();\n    if (this.state.nombre === '') {\n      this.ShowAlert('Nombre Usuario')\n      this.setState({e_nombre:true})\n    } else if (this.state.apellido === '') {\n      this.ShowAlert('Apellido')\n      this.setState({e_apellido:true})\n    } else if (this.state.username === '') {\n      this.ShowAlert('Username')\n      this.setState({e_username:true})\n    } else if (this.state.password === '') {\n      this.ShowAlert('Contraseña')\n      this.setState({e_password:true})\n    } else{\n      console.log({...this.state})\n      let obj = {\n        nombre: this.state.nombre,\n        apellido: this.state.apellido,\n        username: this.state.username,\n        password: this.state.password,\n        id_rol: {id_rol:this.state.id_rol},\n        activo:this.state.activo\n      }\n      if(action==='update'){\n        const idP = solReact.getQueryVariable(\"id\")\n        obj.id_user = idP\n      }\n      this.save(obj)\n    }\n  }\n\n  save(data){\n    usuarioService.save(data)\n    .then(response=>{\n      console.log(response)\n      this.ShowSuccess(\"Creado correctamente!\")\n      window.location = \"/app/users\"\n    }).catch(err=>{\n      console.error(err)\n    })\n  }\n\n  ShowAlert(campo) {\n    let btnShow = document.getElementById(\"btn-show-alert\");\n    this.setState({\n        openAlert: true,\n        msj: campo + \" no puede ser vacío!\",\n        severity: 'warning'\n    })\n    btnShow.click()\n  }\n\n  ShowSuccess(msj) {\n    let btnShow = document.getElementById(\"btn-show-alert\");\n    this.setState({\n        openAlert: true,\n        msj: msj,\n        severity: 'succsess'\n    })\n    btnShow.click()\n  }\n\n  render() {\n    const classes = this.useStyles;\n    return (\n      <form\n        autoComplete=\"off\"\n        noValidate    \n        onSubmit={this.handleSubmit.bind(this)}    \n      >\n        <Card>\n          <CardHeader\n            subheader=\"Detalles del usuario\"\n            title=\"Usuario\"\n          />\n          <Divider />\n          <CardContent>\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  helperText={this.state.e_nombre?\"Ingresa el nombre del usuaro, por favor\":\"\"}\n                  label=\"Nombre\"\n                  name=\"nombre\"\n                  onChange={this.handleChange.bind(this)}\n                  required\n                  value={this.state.nombre}\n                  variant=\"outlined\"\n                  error={this.state.e_nombre}\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Apellido\"\n                  name=\"apellido\"\n                  onChange={this.handleChange.bind(this)}\n                  required\n                  value={this.state.apellido}\n                  variant=\"outlined\"\n                  helperText={this.state.e_apellido?\"Ingresa el Apellido del usuaro, por favor\":\"\"}\n                  error={this.state.e_apellido}\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Username\"\n                  name=\"username\"\n                  onChange={this.handleChange.bind(this)}\n                  required\n                  value={this.state.username}\n                  variant=\"outlined\"\n                  helperText={this.state.e_username?\"Ingresa el Username del usuaro, por favor\":\"\"}\n                  error={this.state.e_username}\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Contraseña\"\n                  name=\"password\"\n                  onChange={this.handleChange.bind(this)}\n                  type=\"password\"\n                  value={this.state.password}\n                  variant=\"outlined\"\n                  helperText={this.state.e_password?\"Ingresa la Contraseña del usuaro, por favor\":\"\"}\n                  error={this.state.e_password}\n                />\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Estado\"\n                  name=\"activo\"\n                  onChange={this.handleChange.bind(this)}\n                  required\n                  select\n                  SelectProps={{ native: true }}\n                  value={this.state.activo}\n                  variant=\"outlined\"\n                >\n                  {this.state.estados.map((option) => (\n                    <option\n                      key={option.value}\n                      value={option.value}\n                    >\n                      {option.label}\n                    </option>\n                  ))}\n                </TextField>\n              </Grid>\n              <Grid\n                item\n                md={6}\n                xs={12}\n              >\n                <TextField\n                  fullWidth\n                  label=\"Rol\"\n                  name=\"id_rol\"\n                  onChange={this.handleChange.bind(this)}\n                  required\n                  select\n                  SelectProps={{ native: true }}\n                  value={this.state.id_rol}\n                  variant=\"outlined\"\n                >\n                  {this.state.states.map((option) => (\n                    <option\n                      key={option.value}\n                      value={option.value}\n                    >\n                      {option.label}\n                    </option>\n                  ))}\n                </TextField>\n              </Grid>\n            </Grid>\n          </CardContent>\n          <Divider />\n          <Box\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n            p={2}\n          >\n            {(action!='view')&&<Button\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n            >\n              Guardar\n            </Button>}\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              style={{marginLeft:5}}\n              onClick={(e)=>{window.location=\"/app/users\"}}\n            >\n              Regresar\n            </Button>\n          </Box>\n        </Card>\n        <CustomizedSnackbars setOpen={this.state.openAlert} severity={this.state.severity} msj={this.state.msj} />\n      </form>\n    );\n  }\n\n}\n\nProfileDetails.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProfileDetails;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Profile from './Profile';\nimport ProfileDetails from './ProfileDetails';\nimport AuthenticationService from 'src/service/AuthenticationService';\nimport solReact from '../../../js/solReact';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Account = () => {\n  const action = solReact.getQueryVariable(\"action\");\n  const classes = useStyles();\n  const [userDetail, setUserDetail] = useState(null);\n\n  useEffect(() => {\n    function loadUserDetails() {\n      AuthenticationService.whoami()\n        .then(response => {\n          //console.log(response.data)\n          setUserDetail(response.data)\n        }).catch(err => {\n          console.error(err)\n        })\n    }\n    loadUserDetails();\n  }, []);\n\n  const user = {\n    avatar: '/static/images/avatars/default-avatar.png',\n    city: 'San Salvador',\n    country: 'El Salvador',\n    jobTitle: (userDetail != null) ? userDetail.username + ' (' + userDetail.id_rol.nombre_rol + ') ' : 'loading',\n    name: (userDetail != null) ? userDetail.nombre + \" \" + userDetail.apellido : 'loading',\n    timezone: 'GTM-7'\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Account\"\n    >\n      <Container maxWidth=\"lg\">\n        <Grid\n          container\n          spacing={3}\n        >\n          {(action === 'view') && <Grid\n            item\n            lg={4}\n            md={6}\n            xs={12}\n          >\n            <Profile user={user} />\n          </Grid>}\n          {(action !== 'view') && <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <ProfileDetails />\n          </Grid>}\n        </Grid>\n      </Container>\n    </Page>\n  );\n};\n\nexport default Account;\n","import React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport DashboardLayout from 'src/layouts/DashboardLayout';\nimport MainLayout from 'src/layouts/MainLayout';\nimport AccountView from 'src/views/account/AccountView';\nimport CustomerListView from 'src/views/customer/CustomerListView';\nimport DashboardView from 'src/views/reports/DashboardView';\nimport LoginView from 'src/views/auth/LoginView';\nimport NotFoundView from 'src/views/errors/NotFoundView';\nimport ProductListView from 'src/views/product/ProductListView';\nimport RegisterView from 'src/views/auth/RegisterView';\nimport SettingsView from 'src/views/settings/SettingsView';\nimport LogoutComponent from './views/auth/LogoutComponent';\nimport NewEncuesta from 'src/views/customer/CustomerListView/NewEncuesta';\nimport AuthenticationService from './service/AuthenticationService';\nimport Usuario from 'src/views/account/AccountView/Usuario';\nimport Usuario2 from 'src/views/account/AccountView/indexUsuario';\n\nAuthenticationService.setupAxiosInterceptors(\n  AuthenticationService.createJWTToken(\n      AuthenticationService.getTokenUser())\n)\n\nconst isUserLogin = () => {\n  //console.log({path, element})\n  if (AuthenticationService.isUserLoggedIn()) {\n    console.log(\"1\")\n    return true\n  } else {\n    console.log(\"2\")\n    return false\n  }\n\n}\n\nconst routes = [\n  {\n    path: '/encuesta/app',\n    element: <DashboardLayout />,\n    children: [\n      { path: 'users', element: isUserLogin()?<AccountView />:<Navigate to=\"/login\" /> },\n      { path: 'customers', element: isUserLogin()?<CustomerListView />:<Navigate to=\"/login\" />},\n      { path: 'dashboard', element: isUserLogin()?<DashboardView />:<Navigate to=\"/login\" /> },\n      { path: 'report', element: isUserLogin()?<ProductListView />:<Navigate to=\"/login\" /> },\n      { path: 'settings', element: isUserLogin()?<SettingsView />:<Navigate to=\"/login\" /> },\n      { path: 'encuesta', element: isUserLogin()?<NewEncuesta />:<Navigate to=\"/login\" /> },\n      { path: 'usuario', element: isUserLogin()?<Usuario2 />:<Navigate to=\"/login\" /> },\n      { path: '/logout', element: <LogoutComponent /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  },\n  {\n    path: '/encuesta/',\n    element: <MainLayout />,\n    children: [\n      { path: 'login', element: <LoginView /> },\n      { path: 'register', element: <RegisterView /> },\n      { path: '404', element: <NotFoundView /> },\n      { path: '/', element: <LoginView /> },\n      { path: '*', element: <Navigate to=\"/404\" /> }\n    ]\n  }\n];\n\nexport default routes;\n","import 'react-perfect-scrollbar/dist/css/styles.css';\nimport React from 'react';\nimport { useRoutes } from 'react-router-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport GlobalStyles from 'src/components/GlobalStyles';\nimport 'src/mixins/chartjs';\nimport theme from 'src/theme';\nimport routes from 'src/routes';\nimport Constante from 'src/js/Constante';\n\nconst App = () => {\n  const routing = useRoutes(routes);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      {routing}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}