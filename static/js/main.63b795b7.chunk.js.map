{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","components/ChartTypeSelect/ChartTypeSelect.jsx","components/Footer/Footer.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/ChartTypeSelect/ChartTypeSelect.module.css","images/covidImage.png"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","charType","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","pieChart","lineChart","borderColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","style","formControl","variant","NativeSelect","defaultValue","onChange","e","target","i","key","Info","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","start","end","duration","separator","Date","toDateString","ChartTypeSelect","handleChartTypeChange","Copyright","align","Link","href","getFullYear","useStyles","makeStyles","theme","footer","marginTop","padding","width","Footer","props","classes","description","Container","maxWidth","App","state","chartType","setState","type","this","image","src","alt","Cards","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.63b795b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n","/**\n * Fecha\t\t  COV\t     Nombre\t\t\t\t      Descripcion\n * ------------\t-------- ------------------- ---------------------------------------------\n * 16/04/2020\tCOV-1\t Eliezer Hernandez\t  Charts\n * LAST LINE HISTORY\n */\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country, charType }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n      \n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n  const pieChart = (\n    confirmed ? (\n      <Pie\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? (charType==='barChart')?barChart:pieChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","/**\n * Fecha\t\t  COV\t     Nombre\t\t\t\t      Descripcion\n * ------------\t-------- ------------------- ---------------------------------------------\n * 16/04/2020\tCOV-1\t Eliezer Hernandez\t  Inicial commit\n * LAST LINE HISTORY\n */\nimport React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport { fetchCountries } from '../../api';\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl style={{backgroundColor:'darkcyan'}} className={styles.formControl} variant=\"filled\">\n      <NativeSelect  defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","/**\n * Fecha\t\t  COV\t     Nombre\t\t\t\t      Descripcion\n * ------------\t-------- ------------------- ---------------------------------------------\n * 16/04/2020\tCOV-1\t Eliezer Hernandez\t  Cards of stadistics\n * LAST LINE HISTORY\n */\nimport React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport { shadows } from '@material-ui/system';\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of active cases of COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of recoveries from COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of deaths caused by COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default Info;\n","/**\n * Fecha\t\t  COV\t     Nombre\t\t\t\t      Descripcion\n * ------------\t-------- ------------------- ---------------------------------------------\n * 16/04/2020\tCOV-1\t Eliezer Hernandez\t    Types of charts to visualize.\n * LAST LINE HISTORY\n */\nimport React from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './ChartTypeSelect.module.css';\n\nconst ChartTypeSelect = ({ handleChartTypeChange }) => {\n  return (\n    <FormControl style={{backgroundColor:'darkcyan'}} className={styles.formControl}  variant=\"filled\">\n      <NativeSelect  defaultValue=\"\" onChange={(e) => handleChartTypeChange(e.target.value)}>\n        <option value=\"barChart\">Bar Chart</option>\n        <option value=\"pieChart\">Pie Chart</option>        \n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default ChartTypeSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" style={{color:'#9E9E9E'}} align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://tumundoenjava.blogspot.com/\">\n        Tu mundo en Java\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: '#2f2f2f',\n    marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0),\n    width:\"100%\",\n    color:'white'\n  },\n}));\n\nexport default function Footer(props) {\n  const classes = useStyles();\n  const { description, title } = props;\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" style={{color:'#F5F5F5'}} component=\"p\">\n          {description}\n        </Typography>\n        <Copyright />\n      </Container>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string,\n};","/**\n * Fecha\t\t  COV\t     Nombre\t\t\t\t      Descripcion\n * ------------\t-------- ------------------- ---------------------------------------------\n * 16/04/2020\tCOV-1\t Eliezer Hernandez\t  Principal page\n * LAST LINE HISTORY\n */\nimport React from 'react';\n\nimport { Cards, CountryPicker, Chart, ChartTypeSelect, Footer } from './components';\nimport { fetchData } from './api/';\nimport styles from './App.module.css';\nimport image from './images/covidImage.png';\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n    chartType:'barChart'\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n\n    this.setState({ data });\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n  handleChartTypeChange = async (chartType) => {    \n    const type = chartType;\n        \n    const data = await fetchData(this.state.country);\n\n    this.setState({ data, country: this.state.country, chartType:type });\n  }\n\n  render() {\n    const { data, country, chartType } = this.state;\n\n    return (\n      <div className={styles.container}>\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        {(this.state.country!==\"\")?\n        <ChartTypeSelect handleChartTypeChange={this.handleChartTypeChange}/>:\"\"}        \n        <Chart data={data} country={country} charType={chartType}/> \n        <Footer description=\"Information about COVID-19\" title={\"COVID-19 tracker by Eliezer Hernández\"}/>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"ChartTypeSelect_formControl__TAdAd\"};","module.exports = __webpack_public_path__ + \"static/media/covidImage.a861abc9.png\";"],"sourceRoot":""}