{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/ChartTypeSelect/ChartTypeSelect.module.css","images/covidImage.png","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Cards/Cards.jsx","components/ChartTypeSelect/ChartTypeSelect.jsx","components/Footer/Footer.jsx","components/TableCountries/TableCountries.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","fetchConfirmed","Chart","charType","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","value","options","legend","display","title","text","pieChart","lineChart","borderColor","fill","className","styles","container","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","style","formControl","variant","NativeSelect","defaultValue","onChange","e","target","i","key","Info","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","start","end","duration","separator","Date","toDateString","ChartTypeSelect","handleChartTypeChange","Copyright","align","Link","href","getFullYear","useStyles","makeStyles","theme","footer","marginTop","padding","width","Footer","props","classes","description","Container","maxWidth","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","position","top","useStyles1","root","flexShrink","marginLeft","TablePaginationActions","useTheme","count","page","rowsPerPage","onChangePage","IconButton","onClick","event","disabled","aria-label","direction","Math","ceil","max","useStyles2","descendingComparator","b","orderBy","headCells","id","numeric","disablePadding","EnhancedTableHead","order","onRequestSort","TableHead","TableRow","headCell","TableCell","sortDirection","TableSortLabel","active","property","TableCountries","test","classes2","React","setPage","setRowsPerPage","emptyRows","min","length","setOrder","setOrderBy","DataTable","TableContainer","Paper","Table","rowCount","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","labelId","hover","tabIndex","uid","scope","combinedKey","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","App","state","chartType","tableData","setState","type","ReactGA","initialize","this","pageview","image","src","alt","Cards","CountryPicker","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e85f306f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"ChartTypeSelect_formControl__TAdAd\"};","module.exports = __webpack_public_path__ + \"static/media/covidImage.a861abc9.png\";","/**\n * Fecha\t\t  COV\t     Nombre\t\t\t\t      Descripcion\n * ------------\t-------- ------------------- ---------------------------------------------\n * 26/04/2020\tCOV-2\t Eliezer Hernandez\t  Table Coutries\n * LAST LINE HISTORY\n */\nimport axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let changeableUrl = url;\n\n  if (country) {\n    changeableUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n    return { confirmed, recovered, deaths, lastUpdate };\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const { data: { countries } } = await axios.get(`${url}/countries`);\n\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchConfirmed = async () => {\n  try{\n    const {data} = await axios.get(`${url}/confirmed`);\n    return [data];\n  }catch (error){\n    return error;\n  }\n};\n","/**\n * Fecha\t\t  COV\t     Nombre\t\t\t\t      Descripcion\n * ------------\t-------- ------------------- ---------------------------------------------\n * 16/04/2020\tCOV-1\t Eliezer Hernandez\t  Charts\n * LAST LINE HISTORY\n */\nimport React, { useState, useEffect } from 'react';\nimport { Line, Bar, Pie } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country, charType }) => {\n  const [dailyData, setDailyData] = useState({});\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n      \n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n\n  const barChart = (\n    confirmed ? (\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value,0],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n  const pieChart = (\n    confirmed ? (\n      <Pie\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n  return (\n    <div className={styles.container}>\n      {country ? (charType==='barChart')?barChart:pieChart : lineChart}\n    </div>\n  );\n};\n\nexport default Chart;\n","/**\n * Fecha\t\t  COV\t     Nombre\t\t\t\t      Descripcion\n * ------------\t-------- ------------------- ---------------------------------------------\n * 16/04/2020\tCOV-1\t Eliezer Hernandez\t  Inicial commit\n * LAST LINE HISTORY\n */\nimport React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport { fetchCountries } from '../../api';\nimport styles from './CountryPicker.module.css';\n\nconst Countries = ({ handleCountryChange }) => {\n  const [countries, setCountries] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, []);\n\n  return (\n    <FormControl style={{backgroundColor:'darkcyan'}} className={styles.formControl} variant=\"filled\">\n      <NativeSelect  defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n        <option value=\"\">Global</option>\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default Countries;\n","/**\n * Fecha\t\t  COV\t     Nombre\t\t\t\t      Descripcion\n * ------------\t-------- ------------------- ---------------------------------------------\n * 16/04/2020\tCOV-1\t Eliezer Hernandez\t  Cards of stadistics\n * LAST LINE HISTORY\n */\nimport React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport styles from './Cards.module.css';\n\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\n  if (!confirmed) {\n    return 'Loading...';\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\">\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.infected)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Infected\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of active cases of COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.recovered)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Recovered\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of recoveries from COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n        <Grid item xs={12} md={3} component={Card} className={cx(styles.card, styles.deaths)}>\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              Deaths\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\n            </Typography>\n            <Typography color=\"textSecondary\">\n              {new Date(lastUpdate).toDateString()}\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              Number of deaths caused by COVID-19.\n            </Typography>\n          </CardContent>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\nexport default Info;\n","/**\n * Fecha\t\t  COV\t     Nombre\t\t\t\t      Descripcion\n * ------------\t-------- ------------------- ---------------------------------------------\n * 16/04/2020\tCOV-1\t Eliezer Hernandez\t    Types of charts to visualize.\n * LAST LINE HISTORY\n */\nimport React from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport styles from './ChartTypeSelect.module.css';\n\nconst ChartTypeSelect = ({ handleChartTypeChange }) => {\n  return (\n    <FormControl style={{backgroundColor:'darkcyan'}} className={styles.formControl}  variant=\"filled\">\n      <NativeSelect  defaultValue=\"\" onChange={(e) => handleChartTypeChange(e.target.value)}>\n        <option value=\"barChart\">Bar Chart</option>\n        <option value=\"pieChart\">Pie Chart</option>        \n      </NativeSelect>\n    </FormControl>\n  );\n};\n\nexport default ChartTypeSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" style={{color:'#9E9E9E'}} align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://tumundoenjava.blogspot.com/\">\n        Tu mundo en Java\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: '#2f2f2f',\n    marginTop: theme.spacing(8),\n    padding: theme.spacing(6, 0),\n    width:\"100%\",\n    color:'white'\n  },\n}));\n\nexport default function Footer(props) {\n  const classes = useStyles();\n  const { description, title } = props;\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          {title}\n        </Typography>\n        <Typography variant=\"subtitle1\" align=\"center\" style={{color:'#F5F5F5'}} component=\"p\">\n          {description}\n        </Typography>\n        <Copyright />\n      </Container>\n    </footer>\n  );\n}\n\nFooter.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string,\n};","/**\n * Fecha\t\t  COV\t     Nombre\t\t\t\t      Descripcion\n * ------------\t-------- ------------------- ---------------------------------------------\n * 26/04/2020\tCOV-2\t Eliezer Hernandez\t  Table Coutries\n * LAST LINE HISTORY\n */\nimport React from 'react';\n//import { fetchDailyData } from '../../api';\nimport {makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport CountUp from 'react-countup';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\n  \n  const useStyles = makeStyles({\n    table: {\n      minWidth: 700,\n    },\n    visuallyHidden: {\n      border: 0,\n      clip: 'rect(0 0 0 0)',\n      height: 1,\n      margin: -1,\n      overflow: 'hidden',\n      padding: 0,\n      position: 'absolute',\n      top: 20,\n      width: 1,\n    },\n  });\n  const useStyles1 = makeStyles((theme) => ({\n    root: {\n      flexShrink: 0,\n      marginLeft: theme.spacing(2.5),\n    },\n  }));\n  \n  function TablePaginationActions(props) {\n    const classes = useStyles1();\n    const theme = useTheme();\n    const { count, page, rowsPerPage, onChangePage } = props;\n  \n    const handleFirstPageButtonClick = (event) => {\n      onChangePage(event, 0);\n    };\n  \n    const handleBackButtonClick = (event) => {\n      onChangePage(event, page - 1);\n    };\n  \n    const handleNextButtonClick = (event) => {\n      onChangePage(event, page + 1);\n    };\n  \n    const handleLastPageButtonClick = (event) => {\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n    return (\n      <div className={classes.root}>\n        <IconButton\n          onClick={handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"first page\"\n        >\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n        </IconButton>\n        <IconButton\n          onClick={handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"next page\"\n        >\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n        </IconButton>\n        <IconButton\n          onClick={handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"last page\"\n        >\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n      </div>\n    );\n  }\n  \n  TablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n  };\n  \n  const useStyles2 = makeStyles({\n    table: {\n      minWidth: 500,\n    },\n  });\n  //*************Sorteable********************* */\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  \n  function getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n  \n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n  \n  const headCells = [\n    { id: 'combinedKey', numeric: false, disablePadding: true, label: 'Country' },\n    { id: 'confirmed', numeric: true, disablePadding: false, label: 'Infected' },\n    { id: 'recovered', numeric: true, disablePadding: false, label: 'Recovered' },\n    { id: 'deaths', numeric: true, disablePadding: false, label: 'Deaths' },    \n  ];\n  function EnhancedTableHead(props) {\n    const { classes, order, orderBy, onRequestSort } = props;\n    const createSortHandler = (property) => (event) => {\n      onRequestSort(event, property);\n    };\n  \n    return (\n      <TableHead style={{backgroundColor:'darkcyan'}}>\n        <TableRow>\n          {headCells.map((headCell) => (\n            <TableCell\n              key={headCell.id}\n              align={headCell.numeric ? 'right' : 'center'}\n              padding={headCell.disablePadding ? 'none' : 'default'}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <span className={classes.visuallyHidden}>\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                  </span>\n                ) : null}\n              </TableSortLabel>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  }\n  \n  EnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,    \n    onRequestSort: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    \n  };\n  \n\n\n  //***********Fin Sorteable******************* */\n//////////////// Pincipal /////////////////////\n  const TableCountries = (data) => {\n    const classes = useStyles();\n\n    let test = data.data[0];\n      //console.log(data);\n\n    \n\n  const classes2 = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  let emptyRows = 0;\n  if(test){\n    emptyRows = rowsPerPage - Math.min(rowsPerPage, test.length - page * rowsPerPage)\n  }\n  \n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('confirmed');\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n    \n    const DataTable = (test ?\n        <TableContainer component={Paper}>\n            <Table  className={classes2.table} aria-label=\"customized table\">\n            <EnhancedTableHead\n              classes={classes}              \n              order={order}\n              orderBy={orderBy}             \n              onRequestSort={handleRequestSort}\n              rowCount={test.length}\n            />\n                <TableBody>\n                {stableSort(test, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  //const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover                     \n                      tabIndex={-1}\n                      key={row.uid}\n                      //selected={isItemSelected}\n                    >\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" >\n                        {row.combinedKey}\n                      </TableCell>\n                      <TableCell align=\"right\"><CountUp start={0} end={row.confirmed} duration={2.75} separator=\",\" /></TableCell>\n                      <TableCell align=\"right\"><CountUp start={0} end={row.recovered} duration={2.75} separator=\",\" /></TableCell>\n                      <TableCell align=\"right\"><CountUp start={0} end={row.deaths} duration={2.75} separator=\",\" /></TableCell>\n                      \n                    </TableRow>\n                  );\n                })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              colSpan={3}\n              count={test.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true,\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n            </Table>\n        </TableContainer>\n        : null\n        );\n      \n    return (\n        <div  style={{width:'100%', maxWidth:'725px', marginTop:'30px'}}>\n          {DataTable}\n        </div>\n      );\n  };\n  export default TableCountries;","/**\n * Fecha\t\t  COV\t     Nombre\t\t\t\t      Descripcion\n * ------------\t-------- ------------------- ---------------------------------------------\n * 16/04/2020\tCOV-1\t Eliezer Hernandez\t  Principal page\n * 26/04/2020\tCOV-2\t Eliezer Hernandez\t  Table Coutries\n * 27/04/2020\tCOV-3\t Eliezer Hernandez\t  Table Coutries\n * LAST LINE HISTORY\n */\nimport React from 'react';\nimport ReactGA from 'react-ga';\nimport { Cards, CountryPicker, Chart, ChartTypeSelect, Footer, TableCountries } from './components';\nimport { fetchData, fetchConfirmed } from './api/';\nimport styles from './App.module.css';\nimport image from './images/covidImage.png';\n\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: '',\n    chartType:'barChart',\n    tableData:[]\n  }\n\n  async componentDidMount() {\n    const data = await fetchData();\n    const tableData = await fetchConfirmed();\n    ReactGA.initialize('UA-164693269-1'); // Aqui pones tu ID de seguimiento\n    this.setState({ data, tableData });\n    ReactGA.pageview(\"/covid19-tracker\");\n\n    \n    \n  }//Fin didmount\n  \n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n\n    this.setState({ data, country: country });\n  }\n  handleChartTypeChange = async (chartType) => {    \n    const type = chartType;\n        \n    const data = await fetchData(this.state.country);\n\n    this.setState({ data, country: this.state.country, chartType:type });\n  }\n\n  render() {\n    \n    const { data, country, chartType, tableData } = this.state;\n    //console.log(this.state.tableData)\n    return (\n      <div className={styles.container}>        \n        <img className={styles.image} src={image} alt=\"COVID-19\" />\n        <Cards data={data} />\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\n        {(this.state.country!==\"\")?\n        <ChartTypeSelect handleChartTypeChange={this.handleChartTypeChange}/>:\"\"}        \n        <Chart data={data} country={country} charType={chartType}/>\n        \n        <TableCountries data={tableData}/>\n        <Footer description=\"Information about COVID-19\" title={\"COVID-19 tracker by Eliezer Hernández\"}/>\n        \n      \n      </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};"],"sourceRoot":""}